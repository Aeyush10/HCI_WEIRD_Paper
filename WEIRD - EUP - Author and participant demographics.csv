S.NO,DOI,TITLE,Abstract,Contribution(TOOL TECH / Litretaure review / empirical studies,user study,user study is WEIRD(YES/NO),Domain,LINK,Country of participants,Researcher country,Researcher country weiredness,Participants from researcher country
1,10.1145/3531073.3531090,A Conversational Agent for Creating Flexible Daily Automation,"The spread of sensors and intelligent devices of the Internet of Things and their integration in daily environments are changing the way we interact with some of the most common objects in everyday life. Therefore, there is an evident need to provide non-expert users with the ability to customize in a simple but effective way the behaviour of these devices based on their preferences and habits. This paper presents RuleBot, a conversational agent that uses machine learning and natural language processing techniques to allow end users to create automations according to a flexible implementation of the trigger-action paradigm, and thereby customize the behaviour of devices and sensors using natural language. In particular, the paper describes the design and implementation of RuleBot, and reports on a user test and lessons learnt.",Tool Tech,YES,Unspecified,Smart objects and environments,https://dl.acm.org/doi/fullHtml/10.1145/3531073.3531090,,Italy,WEIRD,
2,10.1145/3567512.3567527,A Language-Parametric Approach to Exploratory Programming Environments,"Exploratory programming is a software development style in which code is a medium for prototyping ideas and solutions, and in which even the end-goal can evolve over time. Exploratory programming is valuable in various contexts such as programming education, data science, and end-user programming. However, there is a lack of appropriate tooling and language design principles to support exploratory programming. This paper presents a host language- and object language-independent protocol for exploratory programming akin to the Language Server Protocol. The protocol serves as a basis to develop novel (or extend existing) programming environments for exploratory programming such as computational notebooks and command-line REPLs. An architecture is presented on top of which prototype environments can be developed with relative ease, because existing (language) components can be reused. Our prototypes demonstrate that the proposed protocol is sufficiently expressive to support exploratory programming scenarios as encountered in literature within the software engineering, human-computer interaction and data science domains.",Tool Tech,NO,NA,Programming,https://dl.acm.org/doi/pdf/10.1145/3567512.3567527,,"Netherlands, France",WEIRD,
3,10.1145/3550356.3561588,A Low-Code Approach to Support Method Engineering,"Method engineering is defined as a discipline to design, construct and adapt methods, techniques and tools for the development of information systems. A method formalizes and structures the steps needed in order to achieve a specific goal. By executing a method step by step, users follow a systematic and well defined way to attain the results which the method was created for. However, method creation or the adaptation of existing methods to a specific domain or organization is challenging if one does not have method engineering skills. In addition, the adoption of a method may also be difficult if there is no tool to support these activities. Method engineers may not have the programming skills to implement such a tool. In this context, we propose an approach inspired by the low-code and end-user development paradigms for method engineering. The advantages are twofold. Firstly, it helps method engineers in creating and configuring new methods. Secondly, the approach automatically provides tool support so that method experts can actually execute the method. This position paper presents the approach through a proof of concept implementation.",Tool Tech,NO,NA,Programming,https://dl.acm.org/doi/pdf/10.1145/3550356.3561588,,France,WEIRD,
4,10.1145/3531073.3531168,A Multi-Modal Approach to Creating Routines for Smart Speakers,"Smart speakers can execute user-defined routines, namely, sequences of actions triggered by specific events or conditions. This paper presents a new approach to the creation of routines, which leverages the multi-modal features (vision, speech, and touch) offered by Amazon Alexa running on Echo Show devices. It then illustrates how end users found easier to create routines with the proposed approach than with the usual interaction with the Alexa app.",Tool Tech,YES,YES,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3531073.3531168,Italy,Italy,WEIRD,Yes
5,10.48550/arXiv.2207.10648,A No-Code Low-Code Paradigm for Authoring Business Automations Using Natural Language,"Most business process automation is still developed using traditional automation technologies such as workflow engines. These systems provide domain specific languages that require both business knowledge and programming skills to effectively use. As such, business users often lack adequate programming skills to fully leverage these code oriented environments. We propose a paradigm for the construction of business automations using natural language. The approach applies a large language model to translate business rules and automations described in natural language, into a domain specific language interpretable by a business rule engine. We compare the performance of various language model configurations, across various target domains, and explore the use of constrained decoding to ensure syntactically correct generation of output.",Tool Tech,NO,NA,Business management & automation,https://arxiv.org/pdf/2207.10648.pdf,,USA,WEIRD,
6,10.1145/3466819,A Survey on End-User Robot Programming,"As robots interact with a broader range of end-users, end-user robot programming has helped democratize robot programming by empowering end-users who may not have experience in robot programming to customize robots to meet their individual contextual needs. This article surveys work on end-user robot programming, with a focus on end-user program specification. It describes the primary domains, programming phases, and design choices represented by the end-user robot programming literature. The survey concludes by highlighting open directions for further investigation to enhance and widen the reach of end-user robot programming systems.",Literature Review ,NO,NA,Robots,https://dl.acm.org/doi/pdf/10.1145/3466819,,USA,WEIRD,
7,10.1109/RCIS.2019.8877048,A Unifying Reference Framework and Model for Adaptive Distributed Hybrid User Interfaces,"Over the last decade, research on adaptive and distributed user interfaces (DUIs) has increased. We also witness a growing number of Internet of Things (IoT) devices, allowing digital user interfaces (UIs) to communicate with physical objects and vice versa through so-called hybrid user interfaces. There exist various solutions to manage adaptive, distributed or hybrid UIs. However, none of them covers all three aspects and users have to deal with multiple applications and configurations when developing adaptive distributed hybrid user interfaces. We introduce the eSPACE reference framework and conceptual model unifying the domains of adaptive, distributed and hybrid interfaces. While our reference framework has been inspired by the CAMELEON reference framework, the conceptual model is based on the Resource-Selector-Link (RSL) hypermedia metamodel. We propose an approach for adaptive distributed hybrid user interfaces where users can author their user interfaces based on the different levels of abstraction introduced by our reference framework. We further present a use case illustrating the extensibility, flexibility and reusability offered by our unified approach and discuss potential future work.",Tool Tech,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8877048,,Belgium,WEIRD,
8,10.1145/3399715.3399833,,"Personalization rules based on the trigger-action paradigm have recently garnered increasing interest in Internet of Things (IoT) applications. However, composing trigger-action rules can be a challenging task for end users, especially when the rules' complexity increases. Users have to decide about various aspects: which triggers and actions to select, how to combine multiple triggers or actions, and whether some previously defined rule can help in the composition process. We propose a visual environment, Block Rule Composer, to address these problems. It consists of a tool for creating rules based on visual blocks, integrated with recommendation techniques in order to provide intelligent support during rule creation. We also report on a first test which provided positive indications and suggestions for further design improvements.",Tool Tech,YES,Unspecified,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3399715.3399833,,Italy,WEIRD,
11,10.1145/3292522.3326044,An Automated Cyclic Planning Framework Based on Plan-Do-Check-Act for Web of Things Composition,"Empowering end users to be directly involved in the development and composition of their smart devices surrounding them that achieves their goals is a major challenge for End User Development (EUD) in the context of Web of Things (WoT). This can be achieved through Artificial Intelligence (AI) planning. Planning is intended as the ability of a WoT system to construct a sequence of actions, that when executed by the smart devices, achieves an effect on the environment in response to an end user issued goal. The problem of planning specifically for the WoT domain has not been sufficiently dealt with in the existing literature. The existing planning approaches do not deal with one or more of the following important factors in the context of WoT: (1) random unexpected events (2) unpredictable device effects leading to side effects at runtime, and (3) durative effects. In this work, we propose a cyclic planning system which adopted a PDCA (Plan-Do-Check-Act) process solution to deal with the existing shortcomings for continuous improvement. The planner employs domain knowledge based on the WoTDL (Web of Things Description Language) ontology.The cyclic planner enables continuous plan monitoring to cope with inconsistencies with user issued goals. We demonstrate the feasibility of the proposed approach on our smart home testbed. The proposed planner further enhances the ease of use for end users in the context of our goal-oriented approach GrOWTH.",Tool Tech,NO,NA,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3292522.3326044,,Germany,WEIRD,
12,10.48550/arXiv.2203.06439,An end-user coding-based environment for programming an educational affective robot,"In this paper we present an open source educational robot,        designed both to engage children in an affective and social interaction, and to        be        programmable        also        in        its        social        and        affective        behaviour.        Indeed        the        robot,        in        addition        to        classic
programming tasks, can also be programmed as a social robot.        In addition to movements, the user can make the robot express
emotions and make it say things.        The robot can also be left in autonomous mode and greeting the user, recognizing biometric
user’s features and emotion, etc",Tool Tech,NO,NA,Robots,https://arxiv.org/pdf/2203.06439,,Italy,WEIRD,
13,10.1109/ETFA46521.2020.9212036,An Expert Review on the Applicability of Blockly for Industrial Robot Programming,"The paradigm shift triggered by Industry 4.0 leads to a fast rising number of industrial machinery and collaborative robots that increases the need for flexible customization of production processes and automation workflows. End-user programming of industrial robots has become an essential capability for all areas in industry. In this paper, we investigate the applicability of block-based programming languages for large and complex robot programs. Therefore, we implemented a real-world program for industrial robots using Blockly, a block-based visual language, and assessed the results regarding portability, readability, understandability, and maintainability. Our findings are, that (1) large and complex real-world robot programs can be expressed in Blockly, (2) that the readability and understandability of such programs is equal to conventional flow-chart based programming languages, and (3) that the maintainability of Blockly programs can even be considered better than in flowchart based languages. Our results and findings serve as basis for usability studies with end-users in robot programming.",Tool Tech,NO,NA,Robots,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9212036,,Austria,WEIRD,
15,10.1109/SPW.2019.00034,Analysis of the Susceptibility of Smart Home Programming Interfaces to End User Error,"Trigger-action platforms enable end-users to program their smart homes using simple conditional rules of the form: if ""condition"" then ""action"". Although these rules are easy to program, subtleties in their interpretation can cause users to make errors that have consequences ranging from incorrect and undesired functionality to security and privacy violations. Based on prior work, we enumerate a set of nine classes of errors that users can make, and we empirically study the relationship between these classes and the interface design of eight commercially available trigger-action platforms. Particularly, we examine whether each interface prevents (e.g., via good design) or allows each class of error. Based on this analysis, we develop a framework to classify errors and extract insights that lay a foundation for the design of future trigger-action programming interfaces where certain classes of errors can be mitigated by technical means or by alerting the user of the possibility of an error. For instance, we identify that an analysis of a dataset of functionally-similar trigger-action rules could be used to predict whether certain types of error patterns are about to occur.",Empirical Studies,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8844640,,USA,WEIRD,
16,10.1016/j.jss.2022.111547,Assessing industrial end-user programming of robotic production cells: A controlled experiment,"Adapting the behavior of robots and their interaction with other machines on the shop floor is typically
accomplished by non-programmers. Often these non-programmers use visual languages to specify the
robot’s and/or machine’s control logic. While visual languages are explored as a means to enable
novices to program, there is little understanding of what problems novices face when tasked with
realistic adaptation programming tasks on the shop floor. In this paper, we report the results of a
controlled experiment where domain experts in the injection molding industry inspected and changed
realistic programs involving a robot, injection molding machine, and additional external machines. We
found that participants were comparably quick to understand the program behavior with a familiar
sequential function chart-based language and a Blockly-based language used for the first time. We
also observed that these non-programmers had difficulty in multiple aspects independent of language
due to the interweaving of physical and software-centric interaction between robot and machine.
We conclude that assistance needs to go beyond optimizing available language elements to include
suggesting relevant programming elements and their sequence.",Empirical Studies,YES,Unspecified,Robots,https://www.sciencedirect.com/science/article/pii/S0164121222002230/pdfft?md5=963d9393ae4f83efbab7ae0c60d10acb&pid=1-s2.0-S0164121222002230-main.pdf,,Austria,WEIRD,
19,10.5555/3523760.3523864,Authoring Human Simulators via Probabilistic Functional Reactive Program Synthesis,"One of the core challenges in creating interactive behaviors for social robots is testing. Programs implementing the interactive behaviors require real humans to test and this requirement makes testing of the programs extremely expensive. To address this problem, human-robot interaction researchers in the past proposed using human simulators. However, human simulators are tedious to set up and context-dependent and therefore are not widely used in practice. We propose a program synthesis approach to building human simulators for the purpose of testing interactive robot programs. Our key ideas are (1) representing human simulators as probabilistic functional reactive programming programs and (2) using probabilistic inference for synthesizing human simulator programs. Programmers then will be able to build human simulators by providing interaction traces between a robot and a human or two humans which they can later use to test interactive robot programs and improve or tweak as needed.",Tool Tech,NO,NA,Robots,https://dl.acm.org/doi/pdf/10.5555/3523760.3523864,,USA,WEIRD,
20,10.1109/ISSREW55968.2022.00039,Automated Validation of Insurance Applications against Calculation Specifications,"Insurance companies rely on their Legacy Insurance System (LIS) to govern day-to-day operations. These LIS operate as per the company's business rules that are formally specified in Calculation Specification (CS) sheets. To meet ever-changing business demands, insurance companies are increasingly trans-forming their outdated LIS to modern Policy Administration Systems (PAS). Quality Assurance (QA) of such PAS involves manual validation of calculations' implementation against the corresponding CS sheets from the LIS. This manual QA approach is effort-intensive and error-prone, which may fail to detect inconsistencies in PAS implementations and ultimately result in monetary loss. To address this challenge, we propose a novel low-code/no-code technique to automatically validate PAS imple-mentation against CS sheets. Our technique has been evaluated on a digital transformation project of a large insurance company on 12 real-world calculations through 254 policies. The evaluation resulted in effort savings of approximately 92 percent against the conventional manual validation approach.",Tool Tech,NO,NA,Business management & automation,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9985149,,India,Non-WEIRD,
21,10.1109/ICSE.2019.00043,AutoTap: Synthesizing and Repairing Trigger-Action Programs Using LTL Properties,"End-user programming, particularly trigger-action programming (TAP), is a popular method of letting users express their intent for how smart devices and cloud services interact. Unfortunately, sometimes it can be challenging for users to correctly express their desires through TAP. This paper presents AutoTap, a system that lets novice users easily specify desired properties for devices and services. AutoTap translates these properties to linear temporal logic (LTL) and both automatically synthesizes property-satisfying TAP rules from scratch and repairs existing TAP rules. We designed AutoTap based on a user study about properties users wish to express. Through a second user study, we show that novice users made significantly fewer mistakes when expressing desired behaviors using AutoTap than using TAP rules. Our experiments show that AutoTap is a simple and effective option for expressive end-user programming.",Tool Tech,YES,YES,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1109/ICSE.2019.00043,USA,USA,WEIRD,Yes
22,10.1109/SPW.2019.00036,When Smart Devices Are Stupid: Negative Experiences Using Home Smart Devices,"Household smart devices - internet-connected thermostats, lights, door locks, and more - have increased greatly in popularity. These devices provide convenience, yet can introduce issues related to safety, security, and usability. To better understand device owners' recent negative experiences with widely deployed smart devices and how those experiences impact the ability to provide a safe environment for users, we conducted an online, survey-based study of 72 participants who have smart devices in their own home. Participants reported struggling to diagnose and recover from power outages and network failures, misattributing some events to hacking. For devices featuring built-in learning, participants reported difficulty avoiding false alarms, communicating complex schedules, and resolving conflicting preferences. Finally, while many smart devices support end-user programming, participants reported fears of breaking the system by writing their own programs. To address these negative experiences, we propose a research agenda for improving the transparency of smart devices.",Empirical Studies,YES,Unspecified,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8844630,,USA,WEIRD,
24,10.1145/3563835.3567668,Bridging the Syntax-Semantics Gap of Programming,"Computer programming typically requires people to describe operations in a formally specified textual language. Unfortunately, working with syntax is a significant cognitive load, making programming difficult for beginners and time-consuming for professional developers. In response to this, contemporary research often focuses on abstracting or improving the process of composing code. We believe, however, that one fundamental reason why programming is difficult is the disconnect between the symbols and metaphors used in code and the mechanics they represent. Programming languages use abstractions whose superficial similarities to natural language neither effectively help users understand programs nor enable them to work creatively. To tackle this fundamental limitation, this paper introduces a new language based on a novel programming-by-demonstration paradigm that (i) enables users to experiment and test their programs, (ii) allows describing complex operations without the need to learn any syntax, and (iii) always displays an approximation of the program state while programming a new operation. We explain the rationales behind our new approach and present our design and implementation using illustrative examples and a supplemental video recording.",Tool Tech,NO,NA,Programming,https://dl.acm.org/doi/pdf/10.1145/3563835.3567668,,Switzerland,WEIRD,
26,10.1109/SBGAMES56371.2022.9961073,Building your own games: A platform for authoring digital games,"End-User Development (EUD) solutions is a resource that empowers professionals from different domains to create their tools. However, the design of this type of solution must be well-thought-out so that such professionals can interact with the solution, creating your applications in a simple and intuitive way, without the presence of an IT specialist. Game design and development brings with it the inherent challenges of the media type. When creating a solution to make authoring viable, you should use holistic approaches that bring the target user to the focus of the process. This paper presents a platform for digital authoring games, named RUFUS, created with the precepts of EUD, Organizational Semiotics, and Participatory Design. The platform offers a guided walkthrough for professionals to create their own games. A previous evaluation pointed to the tool's advantages, but also revealed aspects that the tool should improve, such as help and documentation.",Tool Tech,YES,Unspecified,Games & arts,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9961073,,Brazil,Non-WEIRD,
27,10.1145/3532512.3535221,Calling Cards: Concrete Visual End-User Programming,"Creating a program that performs even a simple task and shows the result is unapproachable to most people, and even trained programmers face a burden to create a new program. In this paper, we introduce a prototype system and model for live visual dataflow programming where intermediate steps are visible and all components are tangible and manifest. Our system aims to allow a user to dive in and immediately have a working program that can be incrementally extended.",Tool Tech,NO,NA,Programming,https://dl.acm.org/doi/pdf/10.1145/3532512.3535221,,New zealand,WEIRD,
28,10.1145/3379337.3415815,CAPturAR: An Augmented Reality Tool for Authoring Human-Involved Context-Aware Applications,"Recognition of human behavior plays an important role in context-aware applications. However, it is still a challenge for end-users to build personalized applications that accurately recognize their own activities. Therefore, we present CAPturAR, an in-situ programming tool that supports users to rapidly author context-aware applications by referring to their previous activities. We customize an AR head-mounted device with multiple camera systems that allow for non-intrusive capturing of user's daily activities. During authoring, we reconstruct the captured data in AR with an animated avatar and use virtual icons to represent the surrounding environment. With our visual programming interface, users create human-centered rules for the applications and experience them instantly in AR. We further demonstrate four use cases enabled by CAPturAR. Also, we verify the effectiveness of the AR-HMD and the authoring workflow with a system evaluation using our prototype. Moreover, we conduct a remote user study in an AR simulator to evaluate the usability.",Tool Tech,YES,Unspecified,AR/VR,https://dl.acm.org/doi/pdf/10.1145/3379337.3415815,,USA,WEIRD,
29,10.1109/ACCESS.2022.3227093,CATtalk: An IoT-Based Interactive Art Development Platform,"Interactive art has been significant advanced by the Internet of Things (IoT) and cyber physical interaction technologies, which enables the participants to engage with the art devices. Several tools and platforms have been proposed to create the art devices. However, the interactive artworks are typically developed with these art devices in ad hoc approaches, and the artists need to spend significant programming efforts to integrate the art devices. This paper proposes CATtalk, a platform to create and maintain interactive artworks. The novel idea is to treat all art devices in an interactive artwork as IoT devices that can be transparently reused by reconfiguration in CATtalk. Therefore, the artworks developed independently by individual artists can be quickly integrated to create new interactive applications. Through CATtalk’s no-code and low-code mechanisms, the artists can manipulate CATtalk with little or no programing efforts. CATtalk offers a built-in mechanism so that any person in the audience can play with an interactive artwork with his/her smartphone. We also conduct analytic analysis, simulation and measurements to ensure that the interactive art performance in cross-country remote stages are not affected by the communications delays. In our measurements, the average local and remote communication delays are about 0.01 and 0.05 seconds, respectively. If the art performance is designed such that the average delay between two actions of a local (remote) performer is longer than 0.1 seconds, then the probability of out-of-sequence actions is less than 0.01%. That is, the local dancer should perform slower than the remote dancer. Such delay analysis for remote interactive art performance has not been conducted in the literature.",Tool Tech,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9970740,,Taiwan,Non-WEIRD,
31,10.1145/3417990.3420204,Challenges & Opportunities in Low-Code Testing,"Low-code is a growing development approach supported by many platforms. It fills the gap between business and IT by supporting the active involvement of non-technical domain experts, named Citizen Developer, in the application development lifecycle.Low-code introduces new concepts and characteristics. However, it is not investigated yet in academic research to point out the existing challenges and opportunities when testing low-code software. This shortage of resources motivates this research to provide an explicit definition to this area that we call it Low-Code Testing.In this paper, we initially conduct an analysis of the testing components of five commercial Low-Code Development Platforms (LCDP) to present low-code testing advancements from a business point of view. Based on the low-code principles as well as the result of our analysis, we propose a feature list for low-code testing along with possible values for them. This feature list can be used as a baseline for comparing low-code testing components and as a guideline for building new ones. Accordingly, we specify the status of the testing components of investigated LCDPs based on the proposed features. Finally, the challenges of low-code testing are introduced considering three concerns: the role of citizen developer in testing, the need for high-level test automation, and cloud testing. We provide references to the state-of-the-art to specify the difficulties and opportunities from an academic perspective. The results of this research can be used as a starting point for future research in low-code testing area.",Empirical Studies,NO,NA,Business management & automation,https://dl.acm.org/doi/pdf/10.1145/3417990.3420204,,France,WEIRD,
33,10.1109/ACCESS.2021.3051043,Characterizing Visual Programming Approaches for End-User Developers: A Systematic Review,"Recently many researches have explored the potential of visual programming in Robotics, the Internet of Things (IoT), and education. However, there is a lack of studies that analyze the recent evidence-based visual programming approaches that are applied in several domains. This study presents a systematic review to understand, compare, and reflect on recent visual programming approaches using twelve dimensions: visual programming classification, interaction style, target users, domain, platform, empirical evaluation type, test participants' type, number of test participants, test participants' programming skills, evaluation methods, evaluation measures, and accessibility of visual programming tools. The results show that most of the selected articles discussed tools that target IoT and education, while other fields such as data science, Robotics are emerging. Further, most tools use abstractions to hide implementation details and use similar interaction styles. The predominant platforms for the tools are web and mobile, while desktop-based tools are on the decline. Only a few tools were evaluated with a formal experiment, whilst the remaining ones were evaluated with evaluation studies or informal feedback. Most tools were evaluated with students with little to no programming skills. There is a lack of emphasis on usability principles in the design stage of the tools. Additionally, only one of the tools was evaluated for expressiveness. Other areas for exploration include supporting end users throughout the life cycle of applications created with the tools, studying the impact of tutorials on improving learnability, and exploring the potential of machine learning to improve debugging solutions developed with visual programming.",Literature Review ,NO,NA,No specific domain,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9320477,,"UAE, UK",WEIRD + Non-WEIRD,
37,10.1145/3487553.3524848,Citizens as Developers and Consumers of Smart City Services: A Drone Tour Guide Case,"The trend of urbanization has started over two centuries ago and is no longer limited to high-income countries. As a result, city population growth has led to the emergence of applications that manage complex processes within cities by utilizing recent technological advances, thereby transforming them into smart cities. Besides automating complex processes within a city, technology also enables a simplified integration of citizens into identifying problems and creating corresponding solutions. This paper discusses an approach that enables citizens to design and later execute their own services within a smart city environment by employing conceptual modeling and microservices. The overall aim is to establish the role of a citizen developer. The proposed approach is then discussed within our proof of concept environment based on a drone tour guide case.",Literature Review ,NO,NA,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3487553.3524848,,Austria,WEIRD,
39,10.1145/3313831.3376205,Clinical Documentation as End-User Programming,"As healthcare providers have transitioned from paper to electronic health records they have gained access to increasingly sophisticated documentation aids such as custom note templates. However, little is known about how providers use these aids. To address this gap, we examine how 48 ophthalmologists and their staff create and use content-importing phrases — a customizable and composable form of note template — to document office visits across two years. In this case study, we find 1) content-importing phrases were used to document the vast majority of visits (95%), 2) most content imported by these phrases was structured data imported by data-links rather than boilerplate text, and 3) providers primarily used phrases they had created while staff largely used phrases created by other people. We conclude by discussing how framing clinical documentation as end-user programming can inform the design of electronic health records and other documentation systems mixing data and narrative text.",Empirical Studies,YES,YES,Healthcare,https://dl.acm.org/doi/pdf/10.1145/3313831.3376205,USA,USA,WEIRD,Yes
40,10.1109/VLHCC.2019.8818950,Code Quality Improvement for All: Automated Refactoring for Scratch,"Block-based programming has been overwhelmingly successful in revitalizing introductory computing education and in facilitating end-user development. However, poor code quality makes block-based programs hard to understand, modify, and reuse, thus hurting the educational and productivity effectiveness of blocks. There is great potential benefit in empowering programmers in this domain to systematically improve the code quality of their projects. Refactoring--improving code quality while preserving its semantics--has been widely adopted in traditional software development. In this work, we introduce refactoring to Scratch. We define four new Scratch refactorings: Extract Custom Block, Extract Parent Sprite, Extract Constant, and Reduce Variable Scope. To automate the application of these refactorings, we enhance the Scratch programming environment with powerful program analysis and transformation routines. To evaluate the utility of these refactorings, we apply them to remove the code smells detected in a representative dataset of 448 Scratch projects. We also conduct a between-subjects user study with 24 participants to assess how our refactoring tools impact programmers. Our results show that refactoring improves the subjects' code quality metrics, while our refactoring tools help motivate programmers to improve code quality.",Tool Tech,YES,unspecified,Games & arts,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8818950,,USA,WEIRD,
41,10.1109/CIC48465.2019.00011,Collaborative Creation and Training of Social Bots in Learning Communities,"The interaction between instructors and students is one of the key concepts to improve the student's learning process. To personalize learning on a massive scale, social bots can be used as supporting technology. However, their development for virtual learning environments currently requires deep technical knowledge. This leaves learner communities relying on highly-skilled developers to generate and tailor these social bots. Participatory design, end-user development and model-driven principles bear the potential to close this technical gap. In this paper, we propose a model-driven approach for creating social bots. Using our framework, learners can create, train and utilize these for self-hosted virtual learning environments relying on OpenAPI specifications offered, e.g. by Blackboard. We support both retrieval-based bots that react to certain events in predefined ways, as well as generative bots by utilizing open source deep learning technologies. Our first evaluation shows the usefulness of model-driven generation and utilization of social bots. We see the potential of this approach to move the development closer to the actual learner.",Tool Tech,YES,YES,Education,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8998476,Germany,Germany,WEIRD,Yes
43,10.1145/3313831.3376547,Collaborative or Simply Uncaged? Understanding Human-Cobot Interactions in Automation,"Collaborative robots, or cobots, represent a breakthrough technology designed for high-level (e.g. collaborative) interactions between workers and robots with capabilities for flexible deployment in industries such as manufacturing. Understanding how workers and companies use and integrate cobots is important to inform the future design of cobot systems and educational technologies that facilitate effective worker-cobot interaction. Yet, little is known about typical training for collaboration and the application of cobots in manufacturing. To close this gap, we interviewed nine experts in manufacturing about their experience with cobots. Our thematic analysis revealed that, contrary to the envisioned use, experts described most cobot applications as only low-level (e.g. pressing start/stop buttons) interactions with little flexible deployment, and experts felt traditional Robotics skills were needed for collaborative and flexible interaction with cobots. We conclude with design recommendations for improved future robots, including programming and interface designs, and educational technologies to support collaborative use.",Empirical Studies,YES,YES,Robots,https://dl.acm.org/doi/pdf/10.1145/3313831.3376547,USA,USA,WEIRD,Yes
44,10.1109/VL/HCC50065.2020.9127253,Collaborative Visual Programming Workspace for Blockly,"The increasing need for programming tasks performed by non-programmers has resulted in various end-user development tools. In this context, visual programming is currently the prevalent paradigm. However, comprehensive collaboration facilities are missing, although necessary, especially in the domains such as teaching and learning. In this paper, we present an integrated workspace supporting collaborative visual programming. Our system allows end-users to easily cooperate on shared visual programming projects. Peer roles, access and edit privileges for project items are supported. Additional features include: personal project items, toggling live syncing during editing and viewing peer action history. Finally, the workspace’s supported collaboration models are discussed.",Tool Tech,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9127253,,Greece,WEIRD,
45,10.1109/RO-MAN46459.2019.8956315,Combining Interactive Spatial Augmented Reality with Head-Mounted Display for End-User Collaborative Robot Programming,"This paper proposes an intuitive approach for collaborative robot end-user programming using a combination of interactive spatial augmented reality (ISAR) and headmounted display (HMD). It aims to reduce user's workload and to let the user program the robot faster than in classical approaches (e.g. kinesthetic teaching). The proposed approach, where user is using a mixed-reality HMD - Microsoft HoloLens - and touch-enabled table with SAR projected interface as input devices, is compared to a baseline approach, where robot's arms and a touch-enabled table are used as input devices. Main advantages of the proposed approach are the possibility to program the collaborative workspace without the presence of the robot, its speed in comparison to the kinesthetic teaching and an ability to quickly visualize learned program instructions, in form of virtual objects, to enhance the users' orientation within those programs. The approach was evaluated on a set of 20 users using the within-subject experiment design. Evaluation consisted of two pick and place tasks, where users had to start from the scratch as well as to update the existing program. Based on the experiment results, the proposed approach is better in qualitative measures by 33.84% and by 28.46% in quantitative measures over the baseline approach for both tasks.",Tool Tech,YES,YES,Robots,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8956315,Czech republic,Czech republic,WEIRD,Yes
46,10.1109/PERCOMW.2019.8730786,ComPOS: Composing Oblivious Services,"Future internet-of-things systems need to be able to combine heterogeneous services and support weak connectivity. In this paper, we introduce ComPOS, a new domain-specific language for composing services in IoT systems. We show how Maria, a bird watcher, can use ComPOS to build a system that allows her to spy on birds in the garden while she is not at home. We demonstrate how ComPOS handles the unpredictable nature of IoT system by analysing in what cases Maria's system is still useful when some devices are unavailable.",Tool Tech,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8730786,,Sweden,WEIRD,
47,10.1109/RoSE52553.2021.00008,Considerations for using Block-Based Languages for Industrial Robot Programming - a Case Study,"The paradigm shift triggered by Industry 4.0 leads to a fast rising number of industrial machinery and collaborative robots that increases the need for flexible customization of production processes and automation workflows. End-user programming of industrial robots has become an essential capability for all areas in industry. Consequently, different visual programming languages have found their way into the domain of industrial robot programming. In this paper, we investigate the applicability of block-based programming languages for large and complex robot programs in realistic environments. Here, a key aspect of robot programming is not only the interaction with the physical environment, but also the robot's interaction with other shopfloor participants at the software control level. To this end, we analysed the requirements for programming a robot based a real world production cell and implemented the necessary programming constructs using Blockly, an open-source block-based visual language. We assessed the results comparing the implementation of a change in Blockly and the Sequential Function Chart-based language. We find that while Blockly is able to express large and complex real-world robot programs, a major contributing factor is not just the language itself but the presentation of the robot's run-time environment as well as support by the development environment (i.e., editor). Our preliminary user experiment has identified a set of challenges in understanding and changing such programs that we now plan to follow-up with a larger user study.",Empirical Studies,YES,Unspecified,Robots,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9474529,,Austria,WEIRD,
49,10.1145/3313831.3376722,"Creating Augmented and Virtual Reality Applications: Current Practices, Challenges, and Opportunities","Augmented Reality (AR) and Virtual Reality (VR) devices are becoming easier to access and use, but the barrier to entry for creating AR/VR applications remains high. Although the recent spike in HCI research on novel AR/VR tools is promising, we lack insights into how AR/VR creators use today's state-of-the-art authoring tools as well as the types of challenges that they face. We interviewed 21 AR/VR creators, which we grouped into hobbyists, domain experts, and professional designers. Despite having a variety of motivations and skillsets, they described similar challenges in designing and building AR/VR applications. We synthesize 8 key barriers that AR/VR creators face nowadays, starting from prototyping the initial experiences to dealing with the many unknowns during implementation, to facing difficulties in testing applications. Based on our analysis, we discuss the importance of considering end-user developers as a growing population of AR/VR creators, how we can build learning opportunities into AR/VR tools, and the need for building AR/VR toolchains that integrate debugging and testing.",Empirical Studies,YES,YES,AR/VR,https://dl.acm.org/doi/pdf/10.1145/3313831.3376722,"USA, Canada","USA, Canada",WEIRD,Yes
51,10.1007/978-3-030-24781-2_8,Cuscus: An End User Programming Tool for Data Visualisation,"We present Cuscus, a tool for data visualisation that is informed by ethnographic fieldwork across different professional sectors. Cuscus allows end-users to create novel visualisations by defining visual properties in a spreadsheet. We also report on user studies in the contexts of data journalism and business analytics, and discuss further extensions to this new interaction paradigm.",Tool Tech,YES,Unspecified,"Data sciences, analysis & viz.","https://link.springer.com/chapter/10.1007/978-3-030-24781-2_8#:~:text=Cuscus%20allows%20end%2Dusers%20to,to%20this%20new%20interaction%20paradigm.",,UK,WEIRD,
52,10.1145/3534517,Defining Configurable Virtual Reality Templates for End Users,"This paper proposes a solution for supporting end users in configuring Virtual Reality environments by exploiting reusable templates created by experts. We identify the roles participating in the environment development and the means for delegating part of the behaviour definition to the end users. We focus in particular on enabling end users to define the environment behaviour. The solution exploits a taxonomy defining common virtual objects having high-level actions for specifying event-condition-action rules readable as natural language sentences. End users exploit such actions to define the environment behaviour. We report on a proof-of-concept implementation of the proposed approach, on its validation through two different case studies (virtual shop and museum), and on evaluating the approach with expert users.",Tool Tech,YES,YES,AR/VR,https://dl.acm.org/doi/pdf/10.1145/3534517,Italy,Italy,WEIRD,Yes
53,10.1007/978-3-031-20706-8_17,Democratizing Software Development: A Systematic Multivocal Literature Review and Research Agenda on Citizen Development,"While the ongoing digital transformation is boosting the demand for digital solutions and digital skills, organizations worldwide experience a shortage of IT professionals and particularly software developers. At the same time, the increasing prevalence of low-code development platforms (LCDP) allows organizations to introduce citizen development initiatives to promote and accelerate their digital transformations. Citizen development represents a novel software engineering paradigm which enables and supports the development of software by non-IT professionals, consequently referred to as ‘citizen developers’. While there is a vivid discourse on citizen development in the practice community, research on this phenomenon is still scarce. We conducted a systematic multivocal literature review including research and practice publications, and identified six key themes: 1) definition and characteristics of citizen development, 2) enablers and expected benefits of citizen development, 3) challenges of and criticism towards citizen development, 4) citizen development strategy and implementation, 5) citizen development governance, and 6) citizen developers’ profiles and skills. Moreover, we propose a research agenda for future work on citizen development. Our research contribution is to synthesize the existing knowledge on citizen development and to point out future avenues to propel research on this emerging and contemporary phenomenon.",Literature Review ,NO,NA,No specific domain,https://link.springer.com/epdf/10.1007/978-3-031-20706-8_17?sharing_token=usMTod5P5pM-GRaeG7hbefe4RwlQNchNByi7wbcMAY4Ta5cd_ZQuORiTXXPSwx_7nMHASFdvsyaHSmqkiXHRkeYBx8bRo0r5HgDCI8-sv8DK3xCaAA8bMBgHDMIqqT_wdaaa6Ouxi0xaI-KStmvvM46y_JiqHK7NsKaTOeN1q68%3D,,"Denmark, Germany",WEIRD,
54,10.1145/3475964,Design and Deployment of Expressive and Correct Web of Things Applications,"Consumer Internet of Things (IoT) applications are largely built through end-user programming in the form of event-action rules. Although end-user tools help simplify the building of IoT applications to a large extent, there are still challenges in developing expressive applications in a simple yet correct fashion. In this context, we propose a formal development framework based on the Web of Things specification. An application is defined using a composition language that allows users to compose the basic event-action rules to express complex scenarios. It is transformed into a formal specification that serves as the input for formal analysis, where the application is checked for functional and quantitative properties at design time using model checking techniques. Once the application is validated, it can be deployed and the rules are executed following the composition language semantics. We have implemented these proposals in a tool built on top of the Mozilla WebThings platform. The steps from design to deployment were validated on real-world applications.",Tool Tech,YES,Unspecified,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3475964,,France,WEIRD,
55,10.1145/3531706.3536452,Design and Evaluation of AR-Assisted End-User Robot Path Planning Strategies,"Nowadays, robots play an increasingly important role but still usually have to be programmed by highly skilled professionals. Therefore, end-user solutions supporting users in solving (simple) robot programming tasks without expert knowledge are a promising research field. A possibility for these solutions is the inclusion of Augmented Reality (AR) to enable users to work in the robot space, reducing the amount of mentally taxing coordinate space conversions. Approaches for this mainly rely on the waypoint-based robot path programming strategy. To explore an alternative solution, we propose an AR-assisted approach with different possible path-planning strategies, such as drawing paths or selecting single waypoints directly in the real world. This enables end-users without a programming background to program paths for a wheeled mobile robot. They can also see and edit their programmed paths in a Blockly-like representation. Furthermore, we offer AR in-place program simulation and direct building of finished programs to the real robot. We evaluated our approach regarding usability compared to existing non-AR end-user software as well as comparing the two different path-planning strategies to each other. The evaluation showed that our approach is more usable and faster than the conventional method, while the differences between the path-planning methods are more nuanced and show qualities in both versions.",Tool Tech,YES,Unspecified,Robots,https://dl.acm.org/doi/pdf/10.1145/3531706.3536452,,Germany,WEIRD,
59,10.3390/s22134942,DeviceTalk: A No-Code Low-Code IoT Device Code Generation,"The deployment of a client–server-based distributed intelligent system involves application development in both the network domain and the device domain. In the network domain, an application server (typically in the cloud) is deployed to execute the network applications. In the device domain, several Internet of Things (IoT) devices may be configured as, for example, wireless sensor networks (WSNs), and interact with each other through the application server. Developing the network and the device applications are tedious tasks that are the major costs for building a distributed intelligent system. To resolve this issue, a low-code or no-code (LCNC) approach has been purposed to automate code generation. As traditional LCNC solutions are highly generic, they tend to generate excess code and instructions, which will lack efficiency in terms of storage and processing. Fortunately, optimization of automated code generation can be achieved for IoT by taking advantage of the IoT characteristics. An IoT-based distributed intelligent system consists of the device domain (IoT devices) and the network domain (IoT server). The software of an IoT device in the device domain consists of the Device Application (DA) and the Sensor Application (SA). Most IoT LCNC approaches provide code generation in the network domain. Very few approaches automatically generate the DA code. To our knowledge, no approach supports the SA code generation. In this paper, we propose DeviceTalk, an LCNC environment for the DA and the SA code development. DeviceTalk automatically generates the code for IoT devices to speed up the software development in the device domain for a distributed intelligent system. We propose the DeviceTalk architecture, design and implementation of the code generation mechanism for the IoT devices. Then, we show how a developer can use the DeviceTalk Graphical User Interface (GUI) to exercise LCNC development of the device software.",Tool Tech,NO,NA,Smart objects and environments,https://www.researchgate.net/publication/361726704_DeviceTalk_A_No-Code_Low-Code_IoT_Device_Code_Generation,,Taiwan,Non-WEIRD,
62,10.1145/3554364.3559137,Diving in the Story: Exploring Tailoring in Narrative Data Visualizations,"End-User Development is a research topic aimed at empowering end-users to tailor their daily applications. With time, many researchers proposed methods, tools, taxonomies, and other approaches to enable the users and the applications to deal with un-predicted demands within software development. As the research developed, researchers started investigating the application of EUD concepts in other fields, such as data visualization. In this context, this study draws attention to the intersection of End-User Development concepts with exploratory narrative data visualization. To drive our investigation, we performed a focus group with data visualization professionals to understand how designers could employ narrative concepts and exploratory resources to allow readers to customize their story experience within the narrative. To analyze our findings, we use the semiotic engineering for End-User Development. As a result, we present this analysis and drive design implications for narrative data visualizations with customizable facilities.",Empirical Studies,YES,Unspecified,"Data sciences, analysis & viz.",https://dl.acm.org/doi/pdf/10.1145/3554364.3559137,,Brazil,Non-WEIRD,
63,10.1145/3453483.3454046,DIY Assistant: A Multi-Modal End-User Programmable Virtual Assistant,"While Alexa can perform over 100,000 skills, its capability covers only a fraction of what is possible on the web. Individuals need and want to automate a long tail of web-based tasks which often involve visiting different websites and require programming concepts such as function composition, conditional, and iterative evaluation. This paper presents DIYA (Do-It-Yourself Assistant), a new system that empowers users to create personalized web-based virtual assistant skills that require the full generality of composable control constructs, without having to learn a formal programming language. With DIYA, the user demonstrates their task of interest in the browser and issues a few simple voice commands, such as naming the skills and adding conditions on the action. DIYA turns these multi-modal specifications into voice-invocable skills written in the ThingTalk 2.0 programming language we designed for this purpose. DIYA is a prototype that works in the Chrome browser. Our user studies show that 81% of the proposed routines can be expressed using DIYA. DIYA is easy to learn, and 80% of users surveyed find DIYA useful.",Tool Tech,YES,Unspecified,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3453483.3454046,,USA,WEIRD,
64,10.1145/3405755.3406140,Don't Believe The Hype! White Lies of Conversational User Interface Creation Tools,"Following the initial hype and high expectations of conversational user interfaces (CUIs), a number of creation tools have emerged to simplify development of these complex systems. These have the potential to democratise and expand application development to those without programming skills. However, while such tools allow end-user developers to build language understanding and dialog management capability into a CUI application, actually fulfilling or executing an action still requires programmatic API integration. In this paper, we look at how CUI builders that claim to be no code required struggle to yield more than toy examples, with an aim to provoke the community to develop better tools for CUI creation.",Literature Review ,NO,NA,Business management & automation,https://dl.acm.org/doi/pdf/10.1145/3405755.3406140,,Ireland,WEIRD,
65,10.1109/CBI54897.2022.00028,Drivers and Inhibitors of Low Code Development Platform Adoption,"When done right, the use of low code development promises a significant competitive advantage in the software development process for organizations. Thus, multiple vendors have created low code development platforms to ease the use of low code development. However, current research on low code development platforms mainly focuses on the technological aspects of the platforms but not on their adoption. Hence, it remains unclear what drives and inhibits the adoption of low code development platforms. We conducted a literature review and identified thirteen factors that inhibit the adoption and seven factors that drive it. We structure these factors along with the diffusion of innovation framework that helps to disentangle drivers and inhibitors. As a result, we provide an initial explanation of the adoption of low code development platforms. Nevertheless, we conclude that existing research on the adoption of low code development platforms is not specific enough to understand the phenomenon substantially. Further, for some factors (e.g., cost), there is a disagreement in the academic literature on whether they are drivers or inhibitors. Hence, we identify gaps and derive avenues for future research.",Literature Review ,NO,NA,No specific domain,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9944731,,Germany,WEIRD,
68,10.24251/HICSS.2022.575,"Empower the Workforce, Empower the Company? Citizen Development Adoption","IT departments today face a substantial backlog of business innovation-related activities and struggle with a shortage of software developers. Low-code development platforms can help solve these issues by using technology to empower end-users without programming background to participate in the software development process. This trend is referred to as “citizen development.” Through six case studies, this study advances our understanding of the factors that influence organizational citizen development adoption decisions. We use an extended technology–organization–environment (TOE) framework, which enhances the explanatory power of the base TOE framework. Our results show that multiple risk perceptions, active top management support, project-based business-IT alignment, centralized IT governance, and business network systems influence organizational citizen development adoption decisions. Based on the results, we discuss academic and practical implications and suggestions for future research.",Empirical Studies,YES,Unspecified,Business management & automation,https://www.researchgate.net/publication/357741848_Empower_the_Workforce_Empower_the_Company_Citizen_Development_Adoption,,Netherlands,WEIRD,
69,10.1145/3526114.3558530,Empowering Domain Experts to Author Valid Statistical Analyses,"Reliable statistical analyses are critical for making scientific discoveries, guiding policy, and informing decisions. To author reliable statistical analyses, integrating knowledge about the domain, data, statistics, and programming is necessary. However, this is an unrealistic expectation for many analysts who may possess domain expertise but lack statistical or programming expertise, including many researchers, policy makers, and other data scientists. How can our statistical software help these analysts? To address this need, we first probed into the cognitive and operational processes involved in authoring statistical analyses and developed the theory of hypothesis formalization. Authoring statistical analyses is a dual-search process that requires grappling with assumptions about conceptual relationships and iterating on statistical model implementations. This led to our key insight: statistical software needs to help analysts translate what they know about their domain and data into statistical modeling programs. To do so, statistical software must provide programming interfaces and interaction models that allow statistical non-experts to express their analysis goals accurately and reflect on their domain knowledge and data. Thus far, we have developed two such systems that embody this insight: Tea and Tisane. Ongoing work on rTisane explores new semantics for more accurately eliciting analysis intent and conceptual knowledge. Additionally, we are planning a summative evaluation of rTisane to assess our hypothesis that this new way of authoring statistical analyses makes domain experts more aware of their implicit assumptions, able to author and understand nuanced statistical models that answer their research questions, and avoid previous analysis mistakes.",Tool Tech,NO,NA,"Data sciences, analysis & viz.",https://dl.acm.org/doi/pdf/10.1145/3526114.3558530,,USA,WEIRD,
71,10.1145/3536220.3558072,Enabling Non-Technical Domain Experts to Create Robot-Assisted Therapeutic Scenarios via Visual Programming,"In this paper, we present a visual programming software for enabling non-technical domain experts to create robot-assisted therapy scenarios for multiple robotic platforms. Our new approach is evaluated by comparing it with Choregraphe, the standard visual programming framework for the often used Robotics platforms Pepper and NAO. We could show that our approach receives higher usability values and allows users to perform better in some practical tasks, including understanding, changing and creating small robot-assisted therapy scenarios.",Tool Tech,YES,Unspecified,Robots,https://dl.acm.org/doi/pdf/10.1145/3536220.3558072,,Germany,WEIRD,
72,10.1109/ACCESS.2019.2916142,Enabling Sophisticated Lifecycle Support for Mobile Healthcare Data Collection Applications,"The widespread dissemination of smart mobile devices enables new ways of collecting longitudinal data sets in a multitude of healthcare scenarios. On the one hand, mobile data collection can be accomplished more effectively and quicker compared with validated paper-based instruments. On the other hand, it can increase the data quality significantly and enable data collection in scenarios not covered by existing approaches so far. Previous attempts to utilize smart mobile devices for collecting data in these scenarios, however, often struggle with high costs for developing and maintaining mobile applications, which need to run on a multitude of mobile operating systems. Therefore, in the QuestionSys project, we are developing a generic (i.e., platform-independent) framework for enabling mobile data collection and sensor data integration in healthcare scenarios. The latter, in turn, is addressed by a model-driven approach, which is shown this paper along with the core components of the QuestionSys framework. In particular, it is shown how healthcare experts are empowered to create mobile data collection and sensing applications on their own and with reasonable efforts.",Tool Tech,YES,Unspecified,Healthcare,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8712531,,"Germany, Austria",WEIRD,
73,10.1145/3308557.3308724,End User Programing of Intelligent Agents Using Demonstrations and Natural Language Instructions,"End-user programmable intelligent agents that can learn new tasks and concepts from users' explicit instructions are desired. This paper presents our progress on expanding the capabilities of such agents in the areas of task applicability, task generalizability, user intent disambiguation and support for IoT devices through our multi-modal approach of combining programming by demonstration (PBD) with learning from natural language instructions. Our future directions include facilitating better script reuse and sharing, and supporting greater user expressiveness in instructions.",Tool Tech,NO,NA,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3308557.3308724,,USA,WEIRD,
74,10.1145/3319499.3328236,End-User Composition of Graphical User Interfaces by Composite Pattern,"We present ComPat, an open source visual editor enabling end users to compose graphical user interfaces based on the composite pattern, a common software engineering design pattern: any widget or group of widgets is treated the same way as a single instance of the same type of widget. ComPat exploits a grid of rows and columns, where each cell, regulated by layout constraints, is populated either by direct import of widgets from a palette or by pattern application. In order to compose graphical user interfaces, any portion could be cut, copied, pasted, and treated as a single object thanks to the composite pattern, thus facilitating reusability. Any portion becomes a pattern that can be applied either by direct instantiation or by rewriting. ComPat automatically generates a Java Swing graphical user interface corresponding to the composition and stores its definition in a User Interface Description Language based on a XML Schema.",Tool Tech,NO,NA,Interaction design,https://dl.acm.org/doi/pdf/10.1145/3319499.3328236,,Belgium,WEIRD,
76,10.5220/0010983200003203,End-user Development for Smart Spaces: A Comparison of Block and Data-flow Programming,"Block and data-flow programming are well-known concepts for enabling end users to visually create their own customized solutions. They both offer comprehensive visual interfaces and are becoming popular within the smart spaces domain. However, there is currently no systematic, comparative evaluation of the two concepts in the domain. In this user study, we implemented two prototypes for block and data-flow programming and compared their performance on typical usage scenarios in common smart spaces. We used a mixed methods approach of quantitative and qualitative analysis to gain an in-depth understanding of the user experience. Our results show that data-flow programming is overall better received by users than block programming and is considered being state-of-the art and visually more appealing. For block programming, our results reveal that participants appreciate the playful character and the feedback provided. Our study contributes to the improvement of block and data-flow solutions in place and discusses aspects relevant to the future advancement of end-user development in smart spaces.",Empirical Studies,YES,YES,Smart objects and environments,https://www.scitepress.org/Papers/2022/109832/,Germany,Germany,WEIRD,Yes
77,10.1109/PerComWorkshops48775.2020.9156123,End-user development of activity-supporting services for smart homes,"Independent living often requires assistive computing support to be tailored to the specific needs of each older adult. We propose a tool-based approach to allowing caregivers to define services for in-home daily living activities, leveraging their knowledge and expertise on the older adult they care for. This approach consists of two stages: 1) a wizard allows caregivers to define an assistive service, which supports aspects of a daily activity, specific to an older adult; 2) the wizard-generated service is uploaded in an existing smart home platform and interpreted by a dedicated component, carrying out the caregiver-defined service.",Tool Tech,no,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9156123,,France,WEIRD,
78,10.1145/3397307,End-User Development of Experience Sampling Smartphone Apps -Recommendations and Requirements,"Professional programmers are significantly outnumbered by end-users of software, making it problematic to predict the diverse, dynamic needs of these users in advance. An end-user development (EUD) approach, supporting the creation and modification of software independent of professional developers, is one potential solution. EUD activities are applicable to the work practices of psychology researchers and clinicians, who increasingly rely on software for assessment of participants and patients, but must also depend on developers to realise their requirements. In practice, however, the adoption of EUD technology by these two end-user groups is contingent on various contextual factors that are not well understood. In this paper, we therefore establish recommendations for the design of EUD tools allowing non-programmers to develop apps to collect data from participants in their everyday lives, known as experience sampling apps. We first present interviews conducted with psychology researchers and practising clinicians on their current working practices and motivation to adopt EUD tools. We then describe our observation of a chronic disease management clinic. Finally, we describe three case studies of psychology researchers using our EUD tool Jeeves to undertake experience sampling studies, and synthesise recommendations and requirements for tools allowing the EUD of experience sampling apps.",Empirical Studies,YES,YES,Healthcare,https://dl.acm.org/doi/pdf/10.1145/3397307,"UK/Australia; Germany, nearby university","Australia, Scotland",WEIRD,No
79,10.1080/0144929X.2021.1921028,End-user development of smart home rules using block-based programming: a comparative usability evaluation with programmers and non-programmers,"The use of Smart Homes has grown considerably in the past decade. Enabling end-users to develop rules to program their homes and devices is very important to empower them. Several studies have analysed trigger-action programming tools, primarily using form-based and data-flow approaches for programming interfaces. This study evaluated the usability of a block-based tool for end-user development of rules to control smart homes and compared the difficulties encountered by non-programmers and programmers. Evaluations involved 10 programmers and 10 non-programmers in Brazil. A thematic analysis of 247 problem instances (80 from programmers and 167 from non-programmers) yielded the following themes, with problems related to condition blocks, action blocks, states and actions, time-related tasks, block configuration and personalisation, information architecture, programming logic, conceptual model of smart homes, simulator and debugging, help and technical problems. Despite most non-programmers being able to experiment with blocks, their task completion rates were significantly lower than programmers. The analysis showed aspects where block-based programming can enhance the use for non-programmers. They also confirmed interaction aspects revealed by previous studies using form-based and data-flow approaches that also occur with block-based programming to design smart home rules, with important contributions to improve end-user development tools for smart homes.",Empirical Studies,YES,NO,Smart objects and environments,https://www.researchgate.net/publication/354327825_End-user_development_of_smart_home_rules_using_block-based_programming_a_comparative_usability_evaluation_with_programmers_and_non-programmers,Brazil,Brazil,Non-WEIRD,Yes
80,10.1016/j.jss.2018.11.041,"End-user development, end-user programming and end-user software engineering: A systematic mapping study","End-User Development (EUD), End-Programming (EUP) and End-User Software Engineering (EUSE) are three related research fields that study methods and techniques for empowering end users to modify and create digital artifacts. This paper presents a systematic mapping study aimed at identifying and classifying scientific literature about EUD, EUP and EUSE in the time range January 2000–May 2017. We selected 165 papers found through a manual selection of papers from specific conferences, journal special issues, and books, integrated with an automatic search on the most important digital libraries. The answer to our research question was built through a classification of the selected papers on seven dimensions: type of approach, interaction technique, phase in which the approach is adopted, application domain, target use, class of users, and type of evaluation. Our findings suggest that EUD, EUP and EUSE are active research topics not only in Human–Computer Interaction, but also in other research communities. However, little cross-fertilization exists among the three themes, as well as unifying frameworks and approaches for guiding novice designers and practitioners. Other findings highlight trends and gaps related to the analysis’ dimensions, which have implications on the design of future tools and suggest open issues for further investigations.",Literature Review ,NO,NA,No specific domain,https://www.sciencedirect.com/science/article/pii/S0164121218302577,,Italy,WEIRD,
81,10.1145/3472301.3484332,End-User Highlighted: Featuring Tailorable Systems Development,"Software varies in the domain and has different target users. Also, it is not possible to predict all users' requirements at the system development stage. This situation sheds light on the need to support end-users to adapt their applications to cope with new demands. End-User Development (EUD) is a research area that intends to permit end-users to perform activities beyond application usage. Such activities may involve software tailoring. Considering this, we aim to map EUD towards supporting software with tailoring capabilities. To achieve this goal, we conducted a literature review using a snowballing procedure on the subject, and we found 42 studies in the time range 1997-2020. We analyzed the topic's development in terms of concepts, methodologies to building tailorable software, tools, and we treat issues and implications of tailorable systems development. Finally, we present future works to research and develop tailorable systems based on gaps and opportunities identified.",Literature Review ,NO,NA,No specific domain,https://dl.acm.org/doi/pdf/10.1145/3472301.3484332,,Brazil,Non-WEIRD,
82,10.1007/978-3-030-30281-8_1,End-User Probabilistic Programming,"Probabilistic programming aims to help users make decisions under uncertainty. The user writes code representing a probabilistic model, and receives outcomes as distributions or summary statistics. We consider probabilistic programming for end-users, in particular spreadsheet users, estimated to number in tens to hundreds of millions. We examine the sources of uncertainty actually encountered by spreadsheet users, and their coping mechanisms, via an interview study. We examine spreadsheet-based interfaces and technology to help reason under uncertainty, via probabilistic and other means. We show how uncertain values can propagate uncertainty through spreadsheets, and how sheet-defined functions can be applied to handle uncertainty. Hence, we draw conclusions about the promise and limitations of probabilistic programming for end-users.",Empirical Studies,YES,Unspecified,"Data sciences, analysis & viz.",https://www.researchgate.net/publication/335596608_End-User_Probabilistic_Programming,,UK,WEIRD,
83,10.1109/VLHCC.2019.8818824,End-User Programmers Repurposing End-User Programming Tools to Foster Diversity in Adult End-User Programming Education,"Efforts to improve diversity in computing have mostly focused on K-12 and university student populations, so there is a lack of research on how to provide these benefits to adults who are not in school. To address this knowledge gap, we present a case study of how a nine-member team of end-user programmers designed an educational program to bring job-relevant computing skills to adult populations that have traditionally not been reached by existing efforts. This team conceived, implemented, and delivered Cloud Based Data Science (CBDS), a data science course designed for adults in their local community in historically marginalized groups that are underrepresented in computing fields. Notably, nobody on the course development team was a full-time educator or software engineer. To reduce the amount of time and cost required to launch their program, they repurposed end-user programming skills and tools from their professions, such as data-analytic programming and reproducible scientific research workflows. This case study demonstrates how the spirit of end-user programming can be a vehicle to drive social change through grassroots efforts.",Tool Tech,YES,yes,Education,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8818824,USA,USA,WEIRD,Yes
84,10.1145/3531073.3534493,End-User Programming and Math Teachers: An Initial Study,This paper presents a pilot study for an initial assessment of a tangible tool to support end-user programming (EUP) by teachers to facilitate learning mathematics in primary school. The study aimed to explore teachers’ reasoning strategies and mental representations during trigger-action rules composition. The pilot study provided initial insight into the strengths and weaknesses of this approach and useful hints for designing a larger and more robust study,Empirical Studies,YES,Unspecified,Education,https://dl.acm.org/doi/pdf/10.1145/3531073.3534493,,Italy,WEIRD,
85,10.1007/978-3-030-49904-4_25,End-User Programming Architecture for Physical Movement Assessment: An Interactive Machine Learning Approach,"In this article, we propose an end-user adaptive architecture for movement assessment from RGB videos. Our method allows physiotherapists to add customized exercises for patients from only a few video training examples. The main idea is to take leverage of Deep learning-based pose estimation frameworks to track in real-time the key-body joints from the image data. Our system mimics the traditional physical rehabilitation process, where the therapist guides patients through demonstrative examples, and the patients repeat these examples while the physiotherapist monitors their movements. We evaluate our proposed method on four physiotherapeutic exercises for shoulder strengthening. Results indicate that our approach contributes both to reduce physiotherapist time needed to train the system, and to automatically assess the patients’ movements without direct monitoring from the physiotherapist.",Tool Tech,YES,Unspecified,Healthcare,https://link.springer.com/content/pdf/10.1007/978-3-030-49904-4.pdf?pdf=button%20sticky,,Italy,WEIRD,
86,10.1109/RO-MAN46459.2019.8956327,End-User Programming of Low-and High-Level Actions for Robotic Task Planning,"Programming robots for general purpose applications is extremely challenging due to the great diversity of end-user tasks ranging from manufacturing environments to personal homes. Recent work has focused on enabling end-users to program robots using Programming by Demonstration. However, teaching robots new actions from scratch that can be reused for unseen tasks remains a difficult challenge and is generally left up to robotic experts. We propose iRoPro, an interactive Robot Programming framework that allows end-users to teach robots new actions from scratch and reuse them with a task planner. In this work we provide a system implementation on a two-armed Baxter robot that (i) allows simultaneous teaching of low-and high-level actions by demonstration, (ii) includes a user interface for action creation with condition inference and modification, and (iii) allows creating and solving previously unseen problems using a task planner for the robot to execute in real-time. We evaluate the generalisation power of the system on six benchmark tasks and show how taught actions can be easily reused for complex tasks. We further demonstrate its usability with a user study (N=21), where users completed eight tasks to teach the robot new actions that are reused with a task planner. The study demonstrates that users with any programming level and educational background can easily learn and use the system.",Tool Tech,YES,yes,Robots,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8956327,France,France,WEIRD,Yes
88,10.1145/3371382.3378266,End-User Robot Programming Case Study: Augmented Reality vs. Teach Pendant,"The work presents a preliminary experiment aimed for comparing a traditional method of programming an industrial collaborative robot using a teach pendant, with a novel method based on augmented reality and interaction on a high-level of abstraction. In the experiment, three participants programmed a visual inspection task. Subjective and objective metrics are reported as well as selected usability-related issues of both interfaces. The main purpose of the experiment was to get initial insight into the problematic of comparing highly different user interfaces and to provide a basis for a more rigorous comparison, that is going to be taken out.",Empirical Studies,YES,yes,Robots,https://dl.acm.org/doi/pdf/10.1145/3371382.3378266,Czech republic,Czech Republic,WEIRD,Yes
90,10.1109/ICRA.2019.8793988,End-User Robot Programming Using Mixed Reality,"Mixed Reality (MR) is a promising interface for robot programming because it can project an immersive 3D visualization of a robot's intended movement onto the real world. MR can also support hand gestures, which provide an intuitive way for users to construct and modify robot motions. We present a Mixed Reality Head-Mounted Display (MRHMD) interface that enables end-users to easily create and edit robot motions using waypoints. We describe a user study where 20 participants were asked to program a robot arm using 2D and MR interfaces to perform two pick-and-place tasks. In the primitive task, participants created typical pickand-place programs. In the adapted task, participants adapted their primitive programs to address a more complex pickand-place scenario, which included obstacles and conditional reasoning. Compared to the 2D interface, a higher number of users were able to complete both tasks in significantly less time, and reported experiencing lower cognitive workload, higher usability, and higher naturalness with the MR-HMD interface.",Tool Tech,YES,yes,Robots,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8793988,USA,USA,WEIRD,Yes
91,10.1145/3426428.3426914,End-User Software Customization by Direct Manipulation of Tabular Data,"Customizing software should be as easy as using it. Unfortunately, most customization methods require users to abruptly shift from using a graphical interface to writing scripts in a programming language. We introduce data-driven customization, a new way for end users to extend software by direct manipulation without doing traditional programming. We augment existing user interfaces with a table view showing the structured data inside the application. When users edit the table, their changes are reflected in the original UI. This simple model accommodates a spreadsheet formula language and custom data-editing widgets, providing enough power to implement a variety of useful extensions. We illustrate the approach with Wildcard, a browser extension that implements data-driven customization on the web using web scraping. Through concrete examples, we show that this paradigm can support useful extensions to many real websites, and we share reflections from our experiences using the tool. Finally, we share our broader vision for data-driven customization: a future where end users have more access to the data inside their applications, and can more flexibly repurpose that data as part of everyday software usage.",Tool Tech,NO,NA,Interaction design,https://dl.acm.org/doi/pdf/10.1145/3426428.3426914,,USA,WEIRD,
92,10.1109/ICSESS54813.2022.9930146,ERP Low-Code Cloud Development,"Constructing ERP business process as required has always been focused by manufacturing enterprises. Nowadays the low-code development is expected to provide an ability to develop ERP systems with high efficiency, using well-established component/service and cloud platform technologies. And nonprofessional staff who understand business can easily participate in ERP development. Any change of ERP process is always driven by that of business requirements. So, requirement-driven business process design was discussed in this paper to implement the ERP low-code development. And a framework was proposed to demonstrate the implementation of such development, in which any change of business requirement was decomposed into that of composing parts, process nodes and the involved cloud services/components.",Literature Review ,NO,NA,Business management & automation,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9930146,,China,Non-WEIRD,
93,10.1109/ACCESS.2019.2905619,EUDoptimizer: Assisting End Users in Composing IF-THEN Rules Through Optimization,"Nowadays, several interfaces for end-user development (EUD) empower end users to jointly program the behavior of their smart devices and online services, typically through trigger-action rules. Despite their popularity, such interfaces often expose too much functionality and force the user to search among a large number of supported technologies disposed of confused grid menus. This paper contributes to the EUD with the aim of interactively assisting end users in composing IF-THEN rules with an optimizer in the loop. The goal, in particular, is to automatically redesign the layout of the EUD interfaces to facilitate the users in defining triggers and actions. For this purpose, we define a predictive model to characterize the composition of trigger-action rules on the basis of their final functionality, we adopt different optimization algorithms to explore the design space, and c) we present EUDoptimizer, the integration of our approach in IFTTT, one of the most popular EUD interfaces. We demonstrate that good layout solutions can be obtained in a reasonable amount of time. Furthermore, an empirical evaluation with 12 end users shows evidence that EUDoptimizer reduces the efforts needed to compose trigger-action rules.",Tool Tech,YES,yes,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8668390,Italy,Italy,WEIRD,Yes
94,10.1145/3526071.3527519,Evaluating PDDL for programming production cells: a case study,"A unique selling point for cyber-physical production system manufacturers becomes the easy with which machines and cells can be adapted to new products and production processes. Adaptations, however, are often done by domain experts without in-depth programming know-how. We investigate in this paper, the implications of using a planning-based approach for using a domain expert's knowledge to control the sequences of a robot and injection molding machine (IMM). We find that current engineering support is insufficient to address testing, understanding, and change impact assessment concerns during the evolution of a PDDL/HDDL domain specification.",Tool Tech,no,NA,Robots,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9814833,,Austria,WEIRD,
97,10.1145/3543758.3543778,FADER: An Authoring Tool for Creating Augmented Reality-Based Avatars from an End-User Perspective,"Although augmented reality (AR) is becoming more common in our society, there are few specialized end-user tools for appropriate AR content creation. Most tools are focused on creating entire 3D applications or require extensive knowledge in programming and 3D modeling. With reference to End-User Development (EUD), we present a design case study for an end-user-friendly authoring tool that allows domain experts to create individual AR avatars in the field of Human-Food Interaction. After reviewing current approaches and design guidelines, we designed and implemented FADER, a web-based tool for creating AR-based food avatars. Our evaluation shows that playful design fosters immersion, and that abstract placeholders and highly simplified controls empower non-developers to create AR content. Our study contributes to a better understanding of end-user needs and practices during the AR creation process and informs the design of future AR authoring tools.",Tool Tech,YES,YES,AR/VR,https://dl.acm.org/doi/pdf/10.1145/3543758.3543778,Germany,Germany,WEIRD,Yes
99,10.1145/3526113.3545707,FLEX-SDK: An Open-Source Software Development Kit for Creating Social Robots,"We present FLEX-SDK: an open-source software development kit that allows creating a social robot from two simple tablet screens. FLEX-SDK involves tools for designing the robot face and its facial expressions, creating screens for input/output interactions, controlling the robot through a Wizard-of-Oz interface, and scripting autonomous interactions through a simple text-based programming interface. We demonstrate how this system can be used to replicate an interaction study and we present nine case studies involving controlled experiments, observational studies, participatory design sessions, and outreach activities in which our tools were used by researchers and participants to create and interact with social robots. We discuss common observations and lessons learned from these case studies. Our work demonstrates the potential of FLEX-SDK to lower the barrier to entry for Human-Robot Interaction research.",Tool Tech,yes,yes,Robots,https://dl.acm.org/doi/pdf/10.1145/3526113.3545707,USA,USA,WEIRD,Yes
100,10.1145/3532106.3533541,FLEXI: A Robust and Flexible Social Robot Embodiment Kit,"The social Robotics market is appealing yet challenging. Though social robots are built few remain on the market for long. Many reasons account for their short lifespan with costs and context-specificity ranking high amount them. In this work, we designed, fabricated, and developed FLEXI, a social robot embodiment kit that enabled unlimited customization, making it applicable for a broad range of use cases. The hardware and software of FLEXI were entirely developed by this research team from scratch. FLEXI includes a rich set of materials and attachment pieces to allow for a diverse range of hardware customizations that ensure the embodiment is appropriate for specific customer/researcher projects. It also includes an open-source end-user programming interface to lower the barrier of Robotics access to interdisciplinary teams that populate the field of Human-Robot Interaction. We present an iterative development of this cost-effective kit through the lenses of case studies, conceptual research, and soft deployment of FLEXI in three application scenarios: community-support, mental health, and education. Additionally, we provide in open-access the full list of materials and a tutorial to fabricate FLEXI, making it accessible to any maker space, research lab, or workshop space interested in working with or learning about social robots.",Tool Tech,NO,NA,Robots,https://dl.acm.org/doi/pdf/10.1145/3532106.3533541,,USA,WEIRD,
103,10.1109/SBGames54170.2021.00018,Games by End-Users: Analyzing Development Environments,"Digital games are increasingly present in people's lives, especially in younger people's lives. At times, users want to do more than just play games produced by specialized companies, but would also like to customize them or create and play their own games and share them with their friends. Enabling users with no programming knowledge to develop their games raises several challenges, that range from game design to technical aspects. In this paper, our goal was to investigate the following research question “What strategies and constructs do game engines use to allow users with no previous knowledge of programming to create games?”. To do so, we used the Semiotic Inspection Method to analyze two game engines aimed mainly at this audience - GDevelop and Stencyl. As a result, we have identified the main strategies and constructs used in the tools to support game programming by end-users.",Empirical Studies,NO,NA,Games & arts,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9637526,,Brazil,Non-WEIRD,
104,10.1109/AGENTS.2019.8929177,Goal-Oriented Modelling for Virtual Assistants,"Virtual assistants are used in a wide variety of environments by different types of users. Giving users the ability to build and customize virtual assistants' skills and capabilities would enable them to create virtual assistants that can fit the needs of different scenarios. We propose a model for virtual assistants, based on Goal Net, with the aim of empowering users without programming experience to personalize and customize their virtual assistants. Goal Net separates the design of agent mental models from their low-level implementation. Developers contribute to a library of functions which can be used designers to develop functionality for their virtual assistants. The Multi- Agent Development Environment (MADE) is a graphical tool for creating Goal Net agents and allows users to easily deploy their agents for usage without the need to compile code. A case study is performed to show how Goal Net can be used to develop virtual assistant skills. The proposed model provides a foundation for future work, which would involve human computer interaction and natural language processing.",Tool Tech,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8929177,,Singapore,Non-WEIRD,
105,10.1145/3490099.3511161,GridBook: Natural Language Formulas for the Spreadsheet Grid,"Writing formulas on the spreadsheet grid is arguably the most widely practiced form of programming. Still, studies highlight the difficulties experienced by end-user programmers when learning and using traditional formulas, especially for slightly complex tasks. The purpose of GridBook is to ease these difficulties by supporting formulas expressed in natural language within the grid; it is the first system to do so.GridBook builds on a parser utilizing deep learning to understand analysis intents from the natural language input within a spreadsheet cell. GridBook also leverages the spatial context between cells to infer the analysis parameters underspecified in the natural language input. Natural language enables users to analyze data easily and flexibly, to build queries on the results of previous analyses, and to view results intelligibly within the grid—thus taking spreadsheets one step closer to computational notebooks.We evaluated GridBook via two comparative lab studies, with 20 data analysts new only to GridBook. In our studies, there were no significant differences, in terms of time and cognitive load, in participants’ data analysis using GridBook and spreadsheets; however, data analysis with GridBook was significantly faster than with computational notebooks. Our study uncovers insights into the application of natural language as a special purpose programming language for end-user programming in spreadsheets.",Tool Tech,YES,Unspecified,"Data sciences, analysis & viz.",https://dl.acm.org/doi/pdf/10.1145/3490099.3511161,,"UK, China",WEIRD + Non-WEIRD,
106,10.1145/3334480.3382806,Gridlets: Reusing Spreadsheet Grids,"Spreadsheets allow end users to blend calculations with arbitrary layout and formatting. However, when it comes to reusing groups of formulae along with layout and formatting, spreadsheets provide only limited support. Most users rely on copy and paste, which is easy to learn and use, but maintaining several copies can be tedious and error-prone. We present the concept of Gridlets, an abstraction over calculation and presentation applicable in common use case scenarios. Using the Cognitive Dimensions of Notations framework, we compare Gridlets to copy/paste and sheet-defined functions. We find that Gridlets are consistent with the spreadsheet paradigm, enable users to take advantage of secondary notation, and make common edit operations less viscous and less error-prone.",Tool Tech,NO,NA,Business management & automation,https://dl.acm.org/doi/pdf/10.1145/3334480.3382806,,UK,WEIRD,
107,10.1145/3555051.3555070,HelloArduBot: A DSL For Teaching Programming To Incoming Students With Open-Source Robotic (OSR) Projects,"Block-based languages have been used as a facilitator to teach programming to newcomer and end-user programming students. Another alternative is to abstract the programming domain by using educational robots. Such approaches face some challenges. Block-based languages are far different than conventional programming languages, resulting in an abrupt transition between the two paradigms. On the other hand, commercial educational robots are limited to predesigned projects, which bounds students’ creativity. In this work, we propose an intermediate language (between blocks and traditional language that focuses on Arduino, allowing a wide range and student-designed projects. Preliminary results show that our language is simpler than the native Arduino language and that it would be a preferred alternative for beginner students of a computer science undergraduate course.",Tool Tech,YES,Unspecified,"Robots, education",https://dl.acm.org/doi/pdf/10.1145/3555051.3555070,,Brazil,Non-WEIRD,
108,10.1145/3569506,Helping Users Debug Trigger-Action Programs,"Trigger-action programming (TAP) empowers a wide array of users to automate Internet of Things (IoT) devices. However, it can be challenging for users to create completely correct trigger-action programs (TAPs) on the first try, necessitating debugging. While TAP has received substantial research attention, TAP debugging has not. In this paper, we present the first empirical study of users' end-to-end TAP debugging process, focusing on obstacles users face in debugging TAPs and how well users ultimately fix incorrect automations. To enable this study, we added TAP capabilities to an existing 3-D smart home simulator. Thirty remote participants spent a total of 84 hours debugging TAPs using this simulator. Without additional support, participants were often unable to fix buggy TAPs due to a series of obstacles we document. However, we also found that two novel tools we developed helped participants overcome many of these obstacles and more successfully debug TAPs. These tools collect either implicit or explicit feedback from users about automations that should or should not have happened in the past, using a SAT-solving-based algorithm we developed to automatically modify the TAPs to account for this feedback.",Tool Tech,YES,yes,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3569506,USA,USA,WEIRD,Yes
109,10.1145/3369838,HeyTeddy: Conversational Test-Driven Development for Physical Computing,"Physical computing is a complex activity that consists of different but tightly coupled tasks: programming and assembling hardware for circuits. Prior work clearly shows that this coupling is the main source of mistakes that unfruitfully take a large portion of novices' debugging time. While past work presented systems that simplify prototyping or introduce novel debugging functionalities, these tools either limit what users can accomplish or are too complex for beginners. In this paper, we propose a general-purpose prototyping tool based on conversation. HeyTeddy guides users during hardware assembly by providing additional information on requests or by interactively presenting the assembly steps to build a circuit. Furthermore, the user can program and execute code in real-time on their Arduino platform without having to write any code, but instead by using commands triggered by voice or text via chat. Finally, the system also presents a set of test capabilities for enhancing debugging with custom and proactive unit tests. We codesigned the system with 10 users over 6 months and tested it with realistic physical computing tasks. With the result of two user studies, we show that conversational programming is feasible and that voice is a suitable alternative for programming simple logic and encouraging exploration. We also demonstrate that conversational programming with unit tests is effective in reducing development time and overall debugging problems while increasing users' confidence. Finally, we highlight limitations and future avenues of research.",Tool Tech,YES,NO,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3369838,Korea,Korea,Non-WEIRD,Yes
110,10.55612/s-5002-045-010,"Home Smart Home: Approachable Interfaces for Intelligibility, Modification, and End-User Programming","End-user programming concepts are increasingly employed in smart home research to address the growing complexity of controlling smart home environments. Different approaches and visual styles of end-user programming have been proposed and implemented within this context. Smart home control does however not only necessitate end-user programming but also understanding and modifying existing program structures. In this study, we compare three different approaches regarding their suitability for this application context with a specific focus on intelligibility and modification performance. We conducted an empirical study with 39 users performing three types of tasks (understanding, configuring, and programming), using three different approaches for end-user programming (form-filling, data-flow, and grid-canvas). The results of our study found no significant differences regarding the intelligibility of the three different implementations but clear differences in the subjective preference of users as well as configuration and programming performance.",Empirical Studies,YES,Unspecified,Smart objects and environments,https://www.researchgate.net/publication/345240713_Home_Smart_Home_Approachable_Interfaces_for_Intelligibility_Modification_and_End-User_Programming,,Austria,WEIRD,
111,10.1007/978-3-031-21707-4_25,How Can No/Low Code Platforms Help End-Users Develop ML Applications? - A Systematic Review,"With the increasing popularity of machine learning, the demand for users to develop machine learning applications has grown rapidly, which brings about a rising growth for end-user development (EUD) method research. Based on previous works, EUD can be roughly divided into two categories: methods with coding and without coding (i.e. no-code). In recent years, no-code and low-code methods have become the mainstream EUD methods that have been widely concerned by the education and business community, due to their low technical barriers. However, there lacks a comprehensive summary of existing research to answer some fundamental questions, such as: How can no/low-code platform help end-users develop ML applications? what are their effects, design methods, and user experience? This paper answers the above questions through a systematic literature review. Two experienced researchers carefully read, coded, analyzed, and checked the literature by using MAXQDA, the results showed:

1. No-code or low-code tools can already support the development pipeline of ML applications that traditionally requires coding. 2. No-code or low-code methods are preferred by users. 3. For design purposes, the visual development method is the most commonly used form, especially in the field of education. 4. In terms of interactive experience, a few design principles were recognized from the reviewed pieces of literature, including the interactive process should provide a low threshold, high ceiling, and wide walls; the information architecture should meet the mental model of the novice user's cognitive process; the platform functions should support rapid prototyping, iterations, and timely feedbac",Literature Review ,NO,NA,"Data sciences, analysis & viz.",https://link.springer.com/chapter/10.1007/978-3-031-21707-4_25,,China,Non-WEIRD,
112,10.1145/3290605.3300782,How Users Interpret Bugs in Trigger-Action Programming,"Trigger-action programming (TAP) is a programming model enabling users to connect services and devices by writing if-then rules. As such systems are deployed in increasingly complex scenarios, users must be able to identify programming bugs and reason about how to fix them. We first systematize the temporal paradigms through which TAP systems could express rules. We then identify ten classes of TAP programming bugs related to control flow, timing, and inaccurate user expectations. We report on a 153-participant online study where participants were assigned to a temporal paradigm and shown a series of pre-written TAP rules. Half of the rules exhibited bugs from our ten bug classes. For most of the bug classes, we found that the presence of a bug made it harder for participants to correctly predict the behavior of the rule. Our findings suggest directions for better supporting end-user programmers.",Empirical Studies,YES,yes,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3290605.3300782,USA,USA,WEIRD,Yes
113,10.1007/978-3-030-64619-6_17,IFTTT Rely Based a Semantic Web Approach to Simplifying Trigger-Action Programming for End-User Application with IoT Applications,"Introducing semantics into the Internet of Things (IoT) has been attracting increasing attention from researchers and industrial practitioners. Interoperability stays a critical weight to the engineers of the Internet of Things Systems. This is because of the way that the IoT gadgets are exceptionally heterogeneous as far as fundamental correspondence protocol, information organizations, and advances. Our spotlight in this section is on information semantics, liable for definition, the board, and preparing of information. The Internet of Things (IoT), true to form the foundation for the imagined idea of Smart structure, brings new conceivable outcomes for the structure of the executives. IoT vision presents promising and practical answers for gigantic information assortment and its investigation which can be applied in numerous areas thus cause them to work all the more productively. End-user development programming environments in the IoT enable end-users to customize their IoT objects’ joint behavior, typically via IFTTT trigger-action rules. Aim of the chapter to propose an IoT based Semantic Interoperability Model with EUPont Semantic Web ontology to provide Semantic Interoperability among heterogeneous IoT devices for control of end-user applications.",Tool Tech,NO,NA,Smart objects and environments,https://link.springer.com/chapter/10.1007/978-3-030-64619-6_17,,India,Non-WEIRD,
114,10.1109/HCCAI49649.2020.00018,Intelligent Assistance for End-Users in creating Point and Click Games Storylines,"In this paper, we present an intelligent support End-User Developers (EUDevs) in creating plot lines for Point and Click games on the web. We introduce a story generator and the associated user interface, which help the EUDev in defining the game plot starting from the images providing the game setting. Such suggestions can be further developed by the EUDev, modifying the generated text and saving the result. The interface supports the control of different parameters of the story generator using a user-friendly vocabulary. The results of a user study show good effectiveness and usability of the proposed interface.",Tool Tech,YES,Unspecified,Games & arts,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9230421,,Italy,WEIRD,
116,10.1145/3379337.3415900,Interactive Program Synthesis by Augmented Examples,"Programming-by-example (PBE) has become an increasingly popular component in software development tools, human-robot interaction, and end-user programming. A long-standing challenge in PBE is the inherent ambiguity in user-provided examples. This paper presents an interaction model to disambiguate user intent and reduce the cognitive load of understanding and validating synthesized programs. Our model provides two types of augmentations to user-given examples: 1) semantic augmentation where a user can specify how different aspects of an example should be treated by a synthesizer via light-weight annotations, and 2) data augmentation where the synthesizer generates additional examples to help the user understand and validate synthesized programs. We implement and demonstrate this interaction model in the domain of regular expressions, which is a popular mechanism for text processing and data wrangling and is often considered hard to master even for experienced programmers. A within-subjects user study with twelve participants shows that, compared with only inspecting and annotating synthesized programs, interacting with augmented examples significantly increases the success rate of finishing a programming task with less time and increases users? confidence of synthesized programs.",Tool Tech,YES,YES,Programming,https://dl.acm.org/doi/pdf/10.1145/3379337.3415900,USA,USA,WEIRD,Yes
117,10.1145/3319502.3374784,Interactive Tuning of Robot Program Parameters via Expected Divergence Maximization,"Enabling diverse users to program robots for different applications is critical for robots to be widely adopted. Most of the new collaborative robot manipulators come with intuitive programming interfaces that allow novice users to compose robot programs and tune their parameters. However, parameters like motion speeds or exerted forces cannot be easily demonstrated and often require manual tuning, resulting in a tedious trial-and-error process. To address this problem, we formulate tuning of one-dimensional parameters as an Active Learning problem where the learner iteratively refines its estimate of the feasible range of parameter values, by selecting informative queries. By executing the parametrized actions, the learner gathers the user's feedback, in the form of directional answers (higher,'' lower,'' or fine''), and integrates it in the estimate. We propose an Active Learning approach based on Expected Divergence Maximization for this setting and compare it against two baselines with synthetic data. We further compare the approaches on a real-robot dataset obtained from programs written with a simple Domain-Specific Language for a robot arm and manually tuned by expert users (N=8) to perform four manipulation tasks. We evaluate the effectiveness and usability of our interactive tuning approach against manual tuning with a user study where novice users (N=8) tuned parameters of a human-robot hand-over program.",Empirical Studies,YES,YES,Robots,https://dl.acm.org/doi/pdf/10.1145/3319502.3374784,Finland / USA,"Finland, USA",WEIRD,Yes
118,10.1109/MODELS-C53483.2021.00057,IoT Cooking Workflows for End-Users: A Comparison Between Behaviour Trees and the DX-MAN Model,"A kitchen underpinned by the Internet of Things (IoT) requires the management of complex procedural processes. This is due to the fact that when supporting an end-user in the preparation of even only one dish, various devices may need to coordinate with each other. Additionally, it is challenging— yet desirable—to enable an end-user to program their kitchen devices according to their preferred behaviour and to allow them to visualise and track their cooking workflows. In this paper, we compared two semantic representations, namely, Behaviour Trees and the DX-MAN model. We analysed these representations based on their suitability for a range of end-users (i.e., novice to experienced). The methodology required the analysis of smart kitchen user requirements, from which we inferred that the main architectural requirements for IoT cooking workflows are variability and compositionality. Guided by the user requirements, we examined various scenarios and analysed workflow complexity and feasibility for each representation. On the one hand, we found that execution complexity tends to be higher on Behaviour Trees. However, due to their fallback node, they provide more transparency on how to recover from unprecedented circumstances. On the other hand, parameter complexity tends to be somewhat higher for the DX-MAN model. Nevertheless, the DX-MAN model can be favourable due to its compositionality aspect and the ease of visualisation it can offer.",Empirical Studies,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9643758,,UK,WEIRD,
119,10.1109/SERP4IoT.2019.00008,IoT End User Programming Models,"The advent of smart devices and sensors (the Internet of Things or IoT) will create increasing demands for the automation of devices based on sensor, time, and other inputs. This is essentially a programming task with all the problems and difficulties that programming entails, for example, modularity, feature interaction, debugging, and understanding. Moreover, much of the programming for smart devices is going to be done not by professional programmers but by end users, often end users without any programming experience or computational literacy. Our research is aimed at exploring the programming space and the associated issues using a case study of a smart sign that can be controlled using a variety of sensors. We have developed a general system for programming smart devices and, in this paper, explore a variety of different user interfaces for programming this system for our smart sign.",Tool Tech,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8900747,,USA,WEIRD,
120,10.1109/SMARTCOMP52413.2021.00083,IoT End-User Service Composition via a Visual Programming Interface,"Sensory data generated around us in the context of IoT is huge and heterogeneous. To fully unleash the potential of IoT Open Data there is a need for service infrastructures that facilitate the interaction of users with such data, especially when they are able to customize such services to fit their needs. In this paper we propose to use our tool SenSquare for IoT End-User Service Composition, by presenting its main features and its recent advances towards providing a data historian and importing other services, as well as evaluating the performance of its implementation in parallel.",Tool Tech,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9556272,,Italy,WEIRD,
121,10.1145/3343055.3360751,ISAR: An Authoring System for Interactive Tabletops,"Despite more than three decades of research in augmented reality and shown positive effect of AR in educational settings, we still don't witness spread of this technology in the schools. Complex technology and limited educational content are among the reasons for this absence. Authoring systems can play a positive role in introduction of AR into the school settings. In this paper we introduce ISAR, a domain-independent authoring system for a camera-projector based interactive tabletop. ISAR allows teachers to create learning content and define interactions for the tabletop themselves, without the need for programming, and hence reduces the entrance barrier of educational practitioners for experimenting with augmented reality and tangible interactions.",Tool Tech,NO,NA,Education,https://dl.acm.org/doi/pdf/10.1145/3343055.3360751,,Germany,WEIRD,
123,10.1145/3526114.3558776,IThem: Programming Internet of Things Beyond Trigger-Action Pattern,"With emerging technologies bringing Internet of Things (IoT) devices into domestic environments, trigger-action programming such as IFTTT with its simple if-this-then-that pattern provides an effective way for end-users to connect fragmented intelligent services and program their own smart home/work space automation. While the simplicity of trigger-action programming can be effective for non-programmers with its straightforward concepts and graphical user interface, it does not allow the algorithmic expressivity that a programming language has. For instance, the simple if-this-then-that structure cannot cover complex algorithms that arise from real world scenarios involving multiple conditions or keeping track of a sequence of conditions (e.g., incrementing counters, triggering one action if two conditions are both true). In this exploratory work, we take an alternative approach by creating a programmable channel between application programming interfaces (APIs), which allows programmers to preserve states and to use them to write complex algorithms. We propose iThem, which stands for intelligence of them—internet of things, that allow programmers to author any complex algorithms that can connect different IoT services and fully unleash the freedom of a general programming language. In this poster, we share the design, development, and ongoing validation progress of iThem, which piggybacks on existing programmable IoT system IFTTT, and which allows for a programmable channel that connects triggers and actions in IFTTT with versatility.",Tool Tech,NO,NA,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3526114.3558776,,USA,WEIRD,
127,10.1109/VL/HCC51201.2021.9576449,Linear Programming Meets Block-based Languages,"Linear programming is a mathematical optimization technique used in numerous fields including mathematics, economics, and computer science, with numerous industrial contexts, including solving optimization problems such as planning routes, allocating resources, and creating schedules. As a result of its wide breadth of applications, a considerable amount of its user base is lacking in terms of programming knowledge and experience and thus often resorts to using graphical software such as Microsoft Excel. However, despite its popularity amongst less technical users, the methodologies used by these tools are often ad-hoc and prone to errors. To counteract this problem we propose creating a block-based language that allows users to create linear programming models using data contained inside spreadsheets. This language will guide the users to write syntactically and semantically correct programs and thus aid them in a way that current languages do not.",Tool Tech,NO,NA,Programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9576449,,Portugal,WEIRD,
128,10.1145/3469595.3469632,Low-Code from Frontend to Backend: Connecting Conversational User Interfaces to Backend Services via a Low-Code IoT Platform,"Current chatbot development platforms and frameworks facilitate setting up the language and dialog part of chatbots, while connecting it to backend services and business functions requires substantial manual coding effort and programming skills. This paper proposes an approach to overcome this situation. It proposes an architecture with a chatbot as frontend using an IoT (Internet of Things) platform as a middleware for connections to backend services. Specifically, it elaborates and demonstrates how to combine a chatbot developed on the open source development platform Rasa with the open source platform Node-RED, allowing low-code or no-code development of a transactional conversational user interface from frontend to backend.",Tool Tech,NO,NA,Business management & automation,https://dl.acm.org/doi/pdf/10.1145/3469595.3469632,,Germany,WEIRD,
132,10.1145/3397537.3397557,MATLAB Doesn't Love Me: An Essay,"Programming is everywhere, and is becoming an increasingly essential component of knowledge work outside the realms of traditional software development. Examples include data journalism, scientific computing, machine control, machine learning, financial management, and others. A key aspect of this trend is that users have to use programming tools, but typically lack programming education, let alone a computer science background. In this short paper we revisit potential assumptions and preconceptions underlying traditional programming system design, from the perspective of practicing scientists using tools like MATLAB, R, Bash, Python, C++, and others. Specifically, we aim to peel off some ingrained assumptions that have informed programming language and system design for decades. Without giving a lot of answers, we hope some of our contrarian observations may turn out to be controversial, and stimulate a meaningful discussion towards a better programmer experience in the domain of science.",Literature Review ,NO,NA,Programming,https://dl.acm.org/doi/pdf/10.1145/3397537.3397557,,Nethelands,WEIRD,
133,10.1145/3526113.3545639,Mimic: In-Situ Recording and Re-Use of Demonstrations to Support Robot Teleoperation,"Remote teleoperation is an important robot control method when they cannot operate fully autonomously. Yet, teleoperation presents challenges to effective and full robot utilization: controls are cumbersome, inefficient, and the teleoperator needs to actively attend to the robot and its environment. Inspired by end-user programming, we propose a new interaction paradigm to support robot teleoperation for combinations of repetitive and complex movements. We introduce Mimic, a system that allows teleoperators to demonstrate and save robot trajectories as templates, and re-use them to execute the same action in new situations. Templates can be re-used through (1) macros—parametrized templates assigned to and activated by buttons on the controller, and (2) programs—sequences of parametrized templates that operate autonomously. A user study in a simulated environment showed that after initial set up time, participants completed manipulation tasks faster and more easily compared to traditional direct control.",Tool Tech,YES,Unspecified,Robots,https://dl.acm.org/doi/pdf/10.1145/3526113.3545639,,"USA, Canada",WEIRD,
134,THESIS,Multi-Modal End-User Programming of Web-Based Virtual Assistant Skills,"While Alexa can perform over 100,000 skills on paper, its capability covers only a fraction of what is possible on the web. To reach the full potential of an assistant, it is desirable that individuals can create skills to automate their personal web browsing routines. Many seemingly simple routines, however, such as monitoring COVID-19 stats for their hometown, detecting changes in their child's grades online, or sending personally-addressed messages to a group, cannot be automated without conventional programming concepts such as conditional and iterative evaluation. This paper presents VASH (Voice Assistant Scripting Helper), a new system that empowers users to create useful web-based virtual assistant skills without learning a formal programming language. With VASH, the user demonstrates their task of interest in the browser and issues a few voice commands, such as naming the skills and adding conditions on the action. VASH turns these multi-modal specifications into skills that can be invoked invoice on a virtual assistant. These skills are represented in a formal programming language we designed called WebTalk, which supports parameterization, function invocation, conditionals, and iterative execution. VASH is a fully working prototype that works on the Chrome browser on real-world websites. Our user study shows that users have many web routines they wish to automate, 81% of which can be expressed using VASH. We found that VASH Is easy to learn, and that a majority of the users in our study want to use our system",Tool Tech,YES,Unspecified,Smart objects and environments,https://arxiv.org/pdf/2008.13510,,USA,WEIRD,
136,10.1109/RO-MAN46459.2019.8956248,Natural language interface for programming sensory-enabled scenarios for human-robot interaction,"Previous research has shown that robot-mediated therapy may be effective in improving different mental or physical conditions, but this effectiveness strongly depends on how well the therapy can be translated to robot training. The goal of this study is to assist the end-users such as occupational and rehabilitation therapists to create without help of technical professional therapy-specific and sensory-enabled scenarios for the robotic assistant for use in an unstructured environment. The Cognitive Dimension of Notations framework was applied to assess the usability of the programming interface and the Cyclomatic complexity method was used to evaluate the complexity of the created robot scenarios. Eleven therapists with a mean age of 39 years working in the care for persons with visual-and-intellectual disabilities participated. The results show good usability of the interface, as measured via the CDN framework and the cyclomatic complexity analysis showed an increased complexity of the created by the occupational and rehabilitation therapist's scenarios. The participants did not request for very specifically defined behaviors for the robot, and therefore descriptions in natural text can be successfully used for robot programming.",Empirical Studies,YES,YES,Robots,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8956248,Netherlands,Netherlands,WEIRD,Yes
137,10.1109/3ICT56508.2022.9990622,New perspectives for cyber security in software development: when End-User Development meets Artificial Intelligence,"Current research faces a ""war"" between Human-Computer Interaction and Artificial Intelligence. Despite the shared goal to support the user in his/her choices, researchers seem to be unable to find a common point between the two topics. While one tends to demonstrate that the user needs to have total control of the system he/she is using, the other aims to create mathematical models that automate as much as possible, to give the user the ""feeling"" that the system has a brain and can think on its own. In the current work, we want to demonstrate that there is more than one possible meeting point between those two research fields, without diminishing the two ideologies. To do so we propose both the adoption of End-User Development techniques (that is a branch of the Human-Computer Interaction) to collect data, and the adoption of Artificial Intelligence models, to support the user in performing the right choice. Additionally, we also propose and discuss a couple of scenarios, specifically the programming of internet of things devices in a smart home environment, and check that the related configurations do not expose the user to potential external cyber-attacks. We will not provide any specific solution (with data and/or simulations), rather we want to discuss the potential collaboration between EUD and AI.",Literature Review ,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9990622,,Italy,WEIRD,
138,10.1109/HORA55278.2022.9800018,On cobot programming in industrial tasks: a test case,"Collaborative robots open the way to new applications where industrial robots currently cannot be used. They are perfect for craft, non-industrial environments or schools, and to people who don't know how to program robots, like artists, designers, or students. A simplified end-user programming of the cobots allows a more flexible deployment of these machines. Originally, they were developed to contain the effort, the complexity and the cost of the robotic solutions, allowing the adoption of robots specially by small and medium-sized enterprises. However, when a cobot has to be used in an industrial environment some issues arise. This article presents an industrial application that uses a collaborative robot. The focus is on the use of the latest methods for cobot programming and on how to deal with their limitations and advantages when exploiting them in an industrial application.",Empirical Studies,No,NA,Robots,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9800018,,Italy,WEIRD,
139,10.1145/3308557.3308710,PAC-PAC: Intelligent Storytelling for Point-and-Click Games on the Web,"Point and click games are a more interactive and engaging alternative to usual photo galleries and video players for promoting tourist locations on the web. The PAC-PAC project aims at supporting users without programming knowledge in creating such games starting from real photos and videos. In this paper, we discuss an intelligent support and the related user interface for supporting them in developing the game story. The user selects a set of photos and a deep-learning based generator returns a story draft for each scene. The user can regenerate the story controlling some net parameters or tailor the text to his or her own tastes.",Tool Tech,NO,NA,Games & arts,https://dl.acm.org/doi/pdf/10.1145/3308557.3308710,,Italy,WEIRD,
141,10.1145/3301275.3302326,PATI: A Projection-Based Augmented Table-Top Interface for Robot Programming,"As robots begin to provide daily assistance to individuals in human environments, their end-users, who do not necessarily have substantial technical training or backgrounds in Robotics or programming, will ultimately need to program and re-task their robots to perform a variety of custom tasks. In this work, we present PATI---a Projection-based Augmented Table-top Interface for robot programming---through which users are able to use simple, common gestures (e.g., pinch gestures) and tools (e.g., shape tools) to specify table-top manipulation tasks (e.g., pick-and-place) for a robot manipulator. PATI allows users to interact with the environment directly when providing task specifications; for example, users can utilize gestures and tools to annotate the environment with task-relevant information, such as specifying target landmarks and selecting objects of interest. We conducted a user study to compare PATI with a state-of-the-art, standard industrial method for end-user robot programming. Our results show that participants needed significantly less training time before they felt confident in using our system than they did for the industrial method. Moreover, participants were able to program a robot manipulator to complete a pick-and-place task significantly faster with PATI. This work indicates a new direction for end-user robot programming.",Tool Tech,YES,Yes,Robots,https://dl.acm.org/doi/pdf/10.1145/3301275.3302326,USA,USA,WEIRD,Yes
142,10.1145/3319008.3319028,Perceived Relevance of Automatic Code Inspection in End-User Development: A Study on VBA,"Microsoft VBA (Visual Basic for Applications) is a programming language widely used by end-user programmers, often alongside the popular spreadsheet software Excel. Together they form the popular Excel-VBA application ecosystem. Despite being popular, spreadsheets are known to be fault-prone, and to minimize risk of faults in the overall Excel-VBA ecosystem, it is important to support end-user programmers in improving the code quality of their VBA programs also, in addition to improving spreadsheet technology and practices. In traditional software development, automatic code inspection using static analysis tools has been found effective in improving code quality, but the practical relevance of this technique in an end-user development context remains unexplored. With the aim of popularizing it in the end-user community, in this paper we examine the relevance of automatic code inspection in terms of how inspection rules are perceived by VBA programmers. We conduct a qualitative study consisting of interviews with 14 VBA programmers, who share their perceptions about 20 inspection rules that most frequently detected code quality issues in an industrial dataset of 25 VBA applications, obtained from a financial services company. Results show that the 20 studied inspection rules can be grouped into three categories of user perceptions based on the type of issues they warn about: i) 11 rules that warn about serious problems which need fixing, ii) 7 rules that warn about bad practices which do not mandate fixing, and iii) 2 rules that warn about purposeful code elements rather than issues. Based on these perceptions, we conclude that automatic code inspection is considerably relevant in an end-user development context such as VBA. The perceptions also indicate which inspection rules deserve the most attention from interested researchers and tool developers. Lastly, our results also reveal 3 additional issue types that are not covered by the existing inspection rules, and are therefore impetus for creating new rules.",Empirical Studies,YES,Yes,Business management & automation,https://dl.acm.org/doi/pdf/10.1145/3319008.3319028,"Europe, UK, US",Netherlands,WEIRD,No
143,10.1145/3546155.3546642,PONI: A Personalized Onboarding Interface for Getting Inspiration and Learning About AR/VR Creation,"New creators of augmented reality (AR) and virtual reality (VR) applications often face a steep learning curve during the onboarding stage of creation and struggle in identifying suitable learning materials that are appropriate for their skillsets. To support the initial learning needs of new AR/VR creators from different backgrounds, we designed and implemented a novel personalized onboarding interface (PONI) that allows users to locate relevant projects based on their programming and 3D modeling skills, development goals, and any constraints, such as time or budget. Our usability evaluation (n=16) showed that most creators found PONI to be intuitive, useful, and saw its potential to be used as a knowledge hub for inspiration and self-directed exploratory learning. We discuss ways in which the personalization could be further enhanced and how the potential of PONI could be explored to improve onboarding in contexts beyond AR/VR development.",Tool Tech,YES,Yes,AR/VR,https://dl.acm.org/doi/pdf/10.1145/3546155.3546642,Canada,Canada,WEIRD,Yes
144,10.1109/BB48857.2019.8941201,Position: Manual Refactoring (by Novice Programmers) Considered Harmful,"In recent years, the issue of quality in introductory and end-user programming has become increasingly prominent. In particular, the poor quality of block-based programs has been shown to harm the educational effectiveness in this programming domain. As a result, there has been a growing interest in code quality and its improvement practices among researchers and educators. Refactoring-transforming code to remove quality problems while preserving semantics-is taught as a common and practical technique for improving code quality. To maximize pedagogical effectiveness, some educators advocate teaching students to refactor by hand to elucidate the mechanics behind refactoring instead of relying on tools that transform code automatically. In this position paper, we argue that this pedagogical approach is counterproductive. We advocate teaching refactoring similarly to compilation, a technique that students start applying automatically right away, but learn its inner workings only much later in the curriculum. Even professional developers are advised to avoid carrying out complex refactoring transformations by hand, as this activity leads to hard-to-trace bugs as well as wastes time and effort. To put appropriate tools for improving software quality into the hands of Scratch programmers, we created an automated refactoring infrastructure for Scratch, and we argue that such facility should become a mainstay of programming environments for blocks.",Tool Tech,NO,NA,education,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8941201,,USA,WEIRD,
145,10.1109/VL/HCC50065.2020.9127267,Poster: APIs for IPAs? Towards End-User Tailoring of Intelligent Personal Assistants,"Integrated into smartphones or smart speakers, Intelligent Personal Assistants (IPAs) have grown into the most prevalent example of speech-based interfaces today. Enabling hands-free completion of tasks such as checking the weather, playing music, or controlling smart devices, IPAs have become a central feature of millions of homes. Yet, end-users are faced with barriers to understanding their ‘black box’ devices, and a lack of opportunity to engage in end-user development (EUD) activities. Our current work considers the state of existing tools and platforms for development of IPAs, the key challenges to be overcome, and the potential benefits of doing so.",Literature Review ,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9127267,,Ireland,WEIRD,
146,10.1145/3392869,Privacy-Preserving Script Sharing in GUI-Based Programming-by-Demonstration Systems,"An important concern in end user development (EUD) is accidentally embedding personal information in program artifacts when sharing them. This issue is particularly important in GUI-based programming-by-demonstration (PBD) systems due to the lack of direct developer control of script contents. Prior studies reported that these privacy concerns were the main barrier to script sharing in EUD. We present a new approach that can identify and obfuscate the potential personal information in GUI-based PBD scripts based on the uniqueness of information entries with respect to the corresponding app GUI context. Compared with the prior approaches, ours supports broader types of personal information beyond explicitly pre-specified ones, requires minimal user effort, addresses the threat of re-identification attacks, and can work with third-party apps from any task domain. Our approach also recovers obfuscated fields locally on the script consumer's side to preserve the shared scripts' transparency, readability, robustness, and generalizability. Our evaluation shows that our approach (1) accurately identifies the potential personal information in scripts across different apps in diverse task domains; (2) allows end-user developers to feel comfortable sharing their own scripts; and (3) enables script consumers to understand the operation of shared scripts despite the obfuscated fields.",Tool Tech,YES,YES,Business management & automation,https://dl.acm.org/doi/pdf/10.1145/3392869,USA,USA,WEIRD,Yes
148,10.1145/3411764.3445770,Programmable Smart Home Toolkits Should Better Address Households’ Social Needs,"End-user-programmable smart-home toolkits have engendered excitement in recent years. However, modern homes already cater quite well to users’ needs, and genuinely new needs for smart-home automation seldom arise. Acknowledging this challenging starting point, we conducted a six-week in-the-wild study of smart-home toolkits with four carefully recruited technology-savvy families. Interleaved with free toolkit use in the home were several creativity workshops to facilitate ideation and programming. We evaluated use experiences at the end of the six weeks. Even with extensive facilitation, families faced difficulties in identifying needs for smart-home automation, except for social needs that emerged in all the families. We present analysis of those needs and discuss how end-user-programmable toolkits could better engage with both those household members who design new automated functions and those who merely ‘use’ them.",Empirical Studies,YES,Yes,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3411764.3445770,"Finland, Spain","Finland, Spain",WEIRD,Yes
149,10.1109/MODELS-C53483.2021.00020,Proposing a Framework for Impact Analysis for Low-Code Development Platforms,"Low-code development platforms accelerate software development by facilitating end-user programming. Through higher-level abstractions citizen developers are enabled to develop increasingly complex software systems. While this improves productivity and efficiency it also introduces new challenges in the development process. The evolution of the low-code development platform and the applications built on top of it is one of those challenges. Understanding the impact of changes on the software system is crucial for both the maintenance as well as the improvement of running software. Citizen developers can be supported by direct feedback that reflects how their changes impact the system. Professional developers can use the impact analysis to correctly migrate existing data. Finally, the operations engineers that are responsible for the availability of the platform and the applications can plan seamless upgrades of new versions. Impact analysis should be at the foundations of the development of low-code development platforms. This paper proposes the Impact Analysis for Low-Code Development Platforms framework, a conceptual framework that supports the discussion, research, and implementation of impact analysis. The proposed framework describes the different subsystems and artifacts in a low-code development platform, the different types of professionals involved, and how these professionals can use impact analysis to support their engineering decisions. Through a descriptive case study we discuss the role of impact analysis in an industry low-code development platform. Through the feedback acquired by impact analysis, professionals can stay in control of the evolution of both the applications as well as the low-code development platform itself.",Tool Tech,YES,Yes,No specific domain,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9643766,"Netherlands, Belgium, Aruba",Netherlands,WEIRD,No
150,10.1145/3332165.3347899,PUMICE: A Multi-Modal Agent That Learns Concepts and Conditionals from Natural Language and Demonstrations,"Natural language programming is a promising approach to enable end users to instruct new tasks for intelligent agents. However, our formative study found that end users would often use unclear, ambiguous or vague concepts when naturally instructing tasks in natural language, especially when specifying conditionals. Existing systems have limited support for letting the user teach agents new concepts or explaining unclear concepts. In this paper, we describe a new multi-modal domain-independent approach that combines natural language programming and programming-by-demonstration to allow users to first naturally describe tasks and associated conditions at a high level, and then collaborate with the agent to recursively resolve any ambiguities or vagueness through conversations and demonstrations. Users can also define new procedures and concepts by demonstrating and referring to contents within GUIs of existing mobile apps. We demonstrate this approach in PUMICE, an end-user programmable agent that implements this approach. A lab study with 10 users showed its usability.",Tool Tech,YES,Unspecified,Business management & automation,https://dl.acm.org/doi/pdf/10.1145/3332165.3347899,,USA,WEIRD,
151,10.1145/3331152,PWA-EU: Extending PWA Approach for Promoting Customization Based on User Preferences,"Progressive Web App (PWA) is a new approach to the development of mobile applications (apps) which was proposed by Google in 2015. It combines technology resources of both web and native apps. Meta-design is an End-User Development (EUD) approach from which end-users participate actively in a system's design process. Yet, PWAs are a recent technology and the impacts of associating EUD and PWAs has been little exploited. As the traditional PWA approach is limited regarding users acting as co-designers, we propose the PWA-EU approach, an extension of the traditional PWA architecture that includes EUD concepts. PWA-EU provides contributions in two lenses. First, the proposal was designed to be used by developers on the design/development time. Second, the app developed using PWA-EU approach will allow end-users to select design preferences, which makes them participants of the app's design. This active participation of end-users on the design is possible due to the meta-design concepts present on the PWA-EU approach. In this article, we present the PWA-EU approach and its evaluation in the perspective of developers/designers. For the evaluation, we grouped participants according to their professional background. The results also indicate that novice developers had a reasonable performance with only one hour of training.We conclude that even novice developers could achieve better performance in a real-life environment, in which they would have more time.",Tool Tech,YES,No,Interaction design,https://dl.acm.org/doi/pdf/10.1145/3331152,Brazil,Brazil,Non-WEIRD,Yes
152,10.1145/3359619.3359743,Python Programmers Have GPUs Too: Automatic Python Loop Parallelization with Staged Dependence Analysis,"Python is a popular language for end-user software development in many application domains. End-users want to harness parallel compute resources effectively, by exploiting commodity manycore technology including GPUs. However, existing approaches to parallelism in Python are esoteric, and generally seem too complex for the typical end-user developer. We argue that implicit, or automatic, parallelization is the best way to deliver the benefits of manycore to end-users, since it avoids domain-specific languages, specialist libraries, complex annotations or restrictive language subsets. Auto-parallelization fits the Python philosophy, provides effective performance, and is convenient for non-expert developers. Despite being a dynamic language, we show that Python is a suitable target for auto-parallelization. In an empirical study of 3000+ open-source Python notebooks, we demonstrate that typical loop behaviour ‘in the wild’ is amenable to auto-parallelization. We show that staging the dependence analysis is an effective way to maximize performance. We apply classical dependence analysis techniques, then leverage the Python runtime’s rich introspection capabilities to resolve additional loop bounds and variable types in a just-in-time manner. The parallel loop nest code is then converted to CUDA kernels for GPU execution. We achieve orders of magnitude speedup over baseline interpreted execution and some speedup (up to 50x, although not consistently) over CPU JIT-compiled execution, across 12 loop-intensive standard benchmarks.",Empirical Studies,NO,NA,Programming,https://dl.acm.org/doi/pdf/10.1145/3359619.3359743,,UK,WEIRD,
153,10.1145/3344211,RecRules: Recommending IF-THEN Rules for End-User Development,"Nowadays, end users can personalize their smart devices and web applications by defining or reusing IF-THEN rules through dedicated End-User Development (EUD) tools. Despite apparent simplicity, such tools present their own set of issues. The emerging and increasing complexity of the Internet of Things, for example, is barely taken into account, and the number of possible combinations between triggers and actions of different smart devices and web applications is continuously growing. Such a large design space makes end-user personalization a complex task for non-programmers, and motivates the need of assisting users in easily discovering and managing rules and functionality, e.g., through recommendation techniques. In this article, we tackle the emerging problem of recommending IF-THEN rules to end users by presenting RecRules, a hybrid and semantic recommendation system. Through a mixed content and collaborative approach, the goal of RecRules is to recommend by functionality: it suggests rules based on their final purposes, thus overcoming details like manufacturers and brands. The algorithm uses a semantic reasoning process to enrich rules with semantic information, with the aim of uncovering hidden connections between rules in terms of shared functionality. Then, it builds a collaborative semantic graph, and it exploits different types of path-based features to train a learning to rank algorithm and compute top-N recommendations. We evaluate RecRules through different experiments on real user data extracted from IFTTT, one of the most popular EUD tools. Results are promising: they show the effectiveness of our approach with respect to other state-of-the-art algorithms and open the way for a new class of recommender systems for EUD that take into account the actual functionality needed by end users.",Tool Tech,NO,NA,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3344211,,Italy,WEIRD,
154,10.1145/3576036,Refactoring in Computational Notebooks,"Due to the exploratory nature of computational notebook development, a notebook can be extensively evolved even though it is small, potentially incurring substantial technical debt. Indeed, in interview studies notebook authors have attested to performing on-going tidying and big cleanups. However, many notebook authors are not trained as software developers, and environments like JupyterLab possess few features to aid notebook maintenance. As software refactoring is traditionally a critical tool for reducing technical debt, we sought to better understand the unique and growing ecology of computational notebooks by investigating the refactoring of public Jupyter notebooks. We randomly selected 15,000 Jupyter notebooks hosted on GitHub and studied 200 with meaningful commit histories. We found that notebook authors do refactor, favoring a few basic classic refactorings as well as those involving the notebook cell construct. Those with a computing background refactored differently than others, but not more so. Exploration-focused notebooks had a unique refactoring profile compared to more exposition-focused notebooks. Authors more often refactored their code as they went along, rather than deferring maintenance to big cleanups. These findings point to refactoring being intrinsic to notebook development.",Empirical Studies,NO,NA,Programming,https://dl.acm.org/doi/pdf/10.1145/3576036,,USA,WEIRD,
155,10.1145/3555774,Why Users Hack: Conflicting Interests and the Political Economy of Software,"It is often assumed that the interests of users and developers coincide, sharing a common goal of good design. Yet users often desire functionality that goes beyond what designers, and the organisations they work in, are willing to supply. Analysing online forums, complemented with interviews, we document how users, hackers and software developers worked together to discover and apply system exploits in hardware and software. We cover four cases: users of CPAP breathing assistance machines getting access to their own sleep data, 'hacking' the Nintendo switch game console to run non-authorised software, end-users building their own insulin supply system, and farmers repairing their own agriculture equipment against suppliers terms and conditions. We propose the concept of the 'gulf of interests' to understand how differing interests can create conflicts between end-users, designers, and the organisations they work in. This points us in the direction of researching further the political and economic situations of technology development and use.",Literature Review ,NO,NA,"Games & arts, Healthcare, Business management & automation",https://dl.acm.org/doi/pdf/10.1145/3555774,,"Denmark, Sweden",WEIRD,
156,10.1145/3371382.3378387,Robotic Limb Repositioning with Supervised Autonomy,"This paper presents the initial efforts towards developing a robotic limb repositioning system. We aim to combine programming by demonstration and end-user programming in a tele-manipulation system that includes the user in the loop. We propose an approach based on a general-purpose mobile manipulator and a web-based interface where a user can select, edit, preview and execute different repositioning exercises based on the selected limb. This approach shows the potential to empower people who have mobility impairments to be more involved in an activity of daily living.",Tool Tech,NO,NA,Robots,https://dl.acm.org/doi/pdf/10.1145/3371382.3378387,,USA,WEIRD,
157,10.1109/ICSC.2020.00020,Roger that! Learning How Laypersons Teach New Functions to Intelligent Systems,"Intelligent systems are rather smart today but still limited to built-in functionality. To break through this barrier, future systems must allow users to easily adapt the system by themselves. For humans the most natural way to communicate is talking. But what if users want to extend the systems' functionality with nothing but natural language? Then intelligent systems must understand how laypersons teach new skills. To grasp the semantics of such teaching sequences, we have defined a hierarchical classification task. On the first level, we consider the existence of a teaching intent in an utterance; on the second, we classify the distinct semantic parts of teaching sequences: declaration of a new function, specification of intermediate steps, and superfluous information. We evaluate twelve machine learning techniques with multiple configurations tailored to this task ranging from classical approaches such as naïve-bayes to modern techniques such as bidirectional LSTMs and task-oriented adaptations. On the first level convolutional neural networks achieve the best accuracy (96.6%). For the second task, bidirectional LSTMs are the most accurate (98.8%). With the additional adaptations we are able to improve both classifications distinctly (up to 1.8%).",Empirical Studies,No,NA,Robots,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9031481,,Germany,WEIRD,
160,10.1109/I4Tech48345.2020.9102703,Sagitec Software Studio (S3) - A Low Code Application Development Platform,"Building an application using full-stack development model was the strategy of the past. A low code platform allows organization to build enterprise level software with minimal coding (mainly drag and drop) and focusing more on business functionality. Sagitec's low code platform is a domain neutral entity which provides a rich graphical interface with various building blocks like form design, data integration, business rule creator, Business Process Modelling (BPM), File Processing, Report, Correspondence generator and analytics. One can build very large enterprise level application using this platform, all these capabilities are attached to core as an engine. Similarly, Big Data features can also be added as another engine.Platform allows even citizen developer to build application in rapid speed which in turns reduce the cost of building application and improves Return on Investment (ROI). In addition, Sagitec also provides low code platform for comprehensive quality assurance activity, requirement tracking, analytics for fraud detection and many more.",Tool Tech,NO,NA,Business management & automation,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9102703,,India,Non-WEIRD,
162,10.1007/978-3-030-85623-6_36,Simplifying Robot Programming Using Augmented Reality and End-User Development,"Robots are widespread across diverse application contexts. Teaching robots to perform tasks, in their respective contexts, demands a high domain and programming expertise. However, robot programming faces high entry barriers due to the complexity of robot programming itself. Even for experts robot programming is a cumbersome and error-prone task where faulty robot programs can be created, causing damage when being executed on a real robot. To simplify the process of robot programming, we combine Augmented Reality (AR) with principles of end-user development. By combining them, the real environment is extended with useful virtual artifacts that can enable experts as well as non-professionals to perform complex robot programming tasks. Therefore, Simple Programming Environment in Augmented Reality with Enhanced Debugging (SPEARED) was developed as a prototype for an AR-assisted robot programming environment. SPEARED makes use of AR to project a robot as well as a programming environment onto the target working space. To evaluate our approach, expert interviews with domain experts from the area of industrial automation, Robotics, and AR were performed. The experts agreed that SPEARED has the potential to enrich and ease current robot programming processes.",Tool Tech,YES,Unspecified,Robots,https://arxiv.org/pdf/2106.07944.pdf,,Germany,WEIRD,
163,10.1145/3472749.3474773,Situated Live Programming for Human-Robot Collaboration,"We present situated live programming for human-robot collaboration, an approach that enables users with limited programming experience to program collaborative applications for human-robot interaction. Allowing end users, such as shop floor workers, to program collaborative robots themselves would make it easy to “retask” robots from one process to another, facilitating their adoption by small and medium enterprises. Our approach builds on the paradigm of trigger-action programming (TAP) by allowing end users to create rich interactions through simple trigger-action pairings. It enables end users to iteratively create, edit, and refine a reactive robot program while executing partial programs. This live programming approach enables the user to utilize the task space and objects by incrementally specifying situated trigger-action pairs, substantially lowering the barrier to entry for programming or reprogramming robots for collaboration. We instantiate situated live programming in an authoring system where users can create trigger-action programs by annotating an augmented video feed from the robot’s perspective and assign robot actions to trigger conditions. We evaluated this system in a study where participants (n = 10) developed robot programs for solving collaborative light-manufacturing tasks. Results showed that users with little programming experience were able to program HRC tasks in an interactive fashion and our situated live programming approach further supported individualized strategies and workflows. We conclude by discussing opportunities and limitations of the proposed approach, our system implementation, and our study and discuss a roadmap for expanding this approach to a broader range of tasks and applications.",Tool Tech,YES,YES,Robots,https://dl.acm.org/doi/pdf/10.1145/3472749.3474773,USA,USA,WEIRD,Yes
164,10.1145/3550356.3561560,Situational Development of Low-Code Applications in Manufacturing Companies,"Companies show an increasing interest in low-code development platforms to facilitate application development by domain experts without sophisticated software development knowledge. Thus, companies aim for a more efficient development of more effective applications since domain experts as so-called citizen developers are no longer limited by the availability and domain knowledge of trained software developers. Nevertheless, efficiency and effectiveness of application development is traditionally also largely influenced by the use of a suitable software development method. Domain experts are, however, not trained in software development methods. This introduces a risk of domain experts creating unusable applications or exceeding the designated time frame of a project (or both). In this paper, we therefore propose an initial version of a situational software development method which supports domain experts in manufacturing companies during the low-code development of applications. The method can be tailored based on situational factors, considering application requirements, features of the used low-code development platform, and characteristics of the development team. We also present feedback corroborating the usefulness of our method and future extension points based on expert interviews.",Tool Tech,YES,Yes,Business management & automation,https://dl.acm.org/doi/pdf/10.1145/3550356.3561560,Germany,Germany,WEIRD,Yes
165,10.1109/TSE.2022.3228308,Sketch2Process: End-to-end BPMN Sketch Recognition Based on Neural Networks,"Process models play an important role in various software engineering contexts. Among others, they are used to capture business-related requirements and provide the basis for the development of process-oriented applications in low-code/no-code settings. To support modelers in creating, checking, and maintaining process models, dedicated tools are available. While these tools are generally considered as indispensable to capture process models for their later use, the initial version of a process model is often sketched on a whiteboard or a piece of paper. This has been found to have great advantages, especially with respect to communication and collaboration. It, however, also creates the need to subsequently transform the model sketch into a digital counterpart that can be further processed by modeling and analysis tools. Therefore, to automate this task, various so-called sketch recognition approaches have been defined in the past. Yet, these existing approaches are too limited for use in practice, since they, for instance, require sketches to be created on a digital device or do not address the recognition of edges or textual labels. Against this background, we use this paper to introduce Sketch2Process, the first end-to-end sketch recognition approach for process models captured using BPMN. Sketch2Process uses a neural network-based architecture to recognize the shapes, edges, and textual labels of highly expressive process models, covering 25 types of BPMN elements. To train and evaluate our approach, we created a dataset consisting of 704 hand-drawn and manually annotated BPMN models. Our experiments demonstrate that our approach is highly accurate and consistently outperforms the state of the art.",Tool Tech,yes,YES,Business management & automation,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9980425,Germany,Germany,WEIRD,Yes
167,10.1145/3397537.3397541,Wildcard: Spreadsheet-Driven Customization of Web Applications,"Many Web applications do not meet the precise needs of their users. Browser extensions offer a way to customize web applications, but most people do not have the programming skills to implement their own extensions. In this paper, we present spreadsheet-driven customization, a technique that enables end users to customize software without doing any traditional programming. The idea is to augment an application’s UI with a spreadsheet that is synchronized with the application’s data. When the user manipulates the spreadsheet, the underlying data is modified and the changes are propagated to the UI, and vice versa. We have implemented this technique in a prototype browser extension called Wildcard. Through concrete examples, we demonstrate that Wildcard can support useful customizations—ranging from sorting lists of search results to showing related data from web APIs—on top of existing websites. We also present the design principles underlying our prototype. Customization can lead to dramatically better experiences with software. We think that spreadsheet-driven customization offers a promising new approach to unlocking this benefit for all users, not just programmers.",Tool Tech,NO,NA,Interaction design,https://dl.acm.org/doi/pdf/10.1145/3397537.3397541,,USA,WEIRD,
169,10.1145/3531073.3534467,SMARTER: An IoT Learning Game to Teach Math,"In this paper, we present the preliminary implementation of SMARTER, a tangible tool for supporting children in learning the basics of mathematics, which has been loosely inspired by the Cuisenaire rods. The tool exploits the power of tangible manipulation offered by physical materials coupled with the possibility of providing contextual and engaging feedback provided by digital tools. An original and important goal of the SMARTER tool is to allow teachers to fully customize the experience of use by exploiting end-user development.",Tool Tech,NO,NA,Education,https://dl.acm.org/doi/pdf/10.1145/3531073.3534467,,Italy,WEIRD,
170,10.1109/RO-MAN46459.2019.8956336,Spatially Situated End-User Robot Programming in Augmented Reality,"Nowadays, industrial robots are being programmed using proprietary tools developed by robot manufacturer. A skilled robot programmer is needed to create even as simple task as pick a well-known object and put it somewhere else. Contrary, in every-day life people are using end-user programming to make different electronic devices work in expected manner, without even noticing they are actually programming. We propose augmented reality-enabled end-user programming system allowing regular shop-floor workers to program industrial robotic tasks. The user interface prototype for this system was evaluated in the user study with 7 participants with respect to usability, mental workload and user experience.",Tool Tech,YES,YES,Robots,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8956336,Czech republic,Czech republic,WEIRD,Yes
171,10.1145/3411764.3445634,"Spreadsheet Comprehension: Guesswork, Giving Up and Going Back to the Author","Spreadsheet users routinely read, and misread, others' spreadsheets, but literature offers only a high-level understanding of users’ comprehension behaviors. This limits our ability to support millions of users in spreadsheet comprehension activities. Therefore, we conducted a think-aloud study of 15 spreadsheet users who read others’ spreadsheets as part of their work. With qualitative coding of participants’ comprehension needs, strategies and difficulties at 20-second granularity, our study provides the most detailed understanding of spreadsheet comprehension to date.Participants comprehending spreadsheets spent around 40% of their time seeking additional information needed to understand the spreadsheet. These information seeking episodes were tedious: around 50% of participants reported feeling overwhelmed. Moreover, participants often failed to obtain the necessary information and worked instead with guesses about the spreadsheet. Eventually, 12 out of 15 participants decided to go back to the spreadsheet's author for clarifications. Our findings have design implications for reading as well as writing spreadsheets.",Empirical Studies,YES,Unspecified,Business management & automation,https://dl.acm.org/doi/pdf/10.1145/3411764.3445634,,UK,WEIRD,
172,10.1145/3334480.3382807,Spreadsheet Use and Programming Experience: An Exploratory Survey,"We report results from a survey on spreadsheet use and experience with textual programming languages (n=49). We find significant correlations between self-reported formula experience, programming experience, and overall spreadsheet experience. We discuss the implications of our findings for spreadsheet research and end-user programming research, more generally.",Empirical Studies,YES,YES,Business management & automation,https://dl.acm.org/doi/pdf/10.1145/3334480.3382807,"UK, USA","USA, UK, Netherlands",WEIRD,Yes
173,10.1145/3397537.3397545,Spreadsheets as Notational Environment for Paper Weaving,"This work explores how spreadsheets can serve as the foundation for the creation of a hybrid design medium for paper weaving. The case for using spreadsheets as a model for the development of environments for designing paper weaving patterns is made. Firstly, because both spreadsheets as well as the woven form of paper weaving designs have cells as their elementary substrate. Secondly, because it allows for exploration of the design space. And thirdly, as it enables use by end-users with varying levels of experience. An environment, VisiWeave, implementing the points mentioned is presented and explored.",Tool Tech,NO,NA,Games & arts,https://dl.acm.org/doi/pdf/10.1145/3397537.3397545,,UK,WEIRD,
175,10.1145/3491102.3501931,Stylette: Styling the Web with Natural Language,"End-users can potentially style and customize websites by editing them through in-browser developer tools. Unfortunately, end-users lack the knowledge needed to translate high-level styling goals into low-level code edits. We present Stylette, a browser extension that enables users to change the style of websites by expressing goals in natural language. By interpreting the user’s goal with a large language model and extracting suggestions from our dataset of 1.7 million web components, Stylette generates a palette of CSS properties and values that the user can apply to reach their goal. A comparative study (N=40) showed that Stylette lowered the learning curve, helping participants perform styling changes 35% faster than those using developer tools. By presenting various alternatives for a single goal, the tool helped participants familiarize themselves with CSS through experimentation. Beyond CSS, our work can be expanded to help novices quickly grasp complex software or programming languages.",Tool Tech,YES,NO,Interaction design,https://dl.acm.org/doi/pdf/10.1145/3491102.3501931,Korea,Korea,Non-WEIRD,Yes
178,10.1109/TIFS.2022.3214084,TAPInspector: Safety and Liveness Verification of Concurrent Trigger-Action IoT Systems,"Trigger-action programming (TAP) is a popular end-user programming framework that can simplify the Internet of Things (IoT) automation with simple trigger-action rules. However, it also introduces new security and safety threats. A lot of advanced techniques have been proposed to address this problem. Rigorously reasoning about the security of a TAP-based IoT system requires a well-defined model and verification method both against rule semantics and physical-world features, e.g., concurrency, rule latency, extended action, tardy attributes, and connection-based rule interactions, which has been missing until now. By analyzing these features, we find 9 new types of rule interaction vulnerabilities and validate them on two commercial IoT platforms. We then present TAPInspector, a novel system to detect these interaction vulnerabilities in concurrent TAP-based IoT systems. It automatically extracts TAP rules from IoT apps, translates them into a hybrid model by model slicing and state compression, and performs semantic analysis and model checking with various safety and liveness properties. Our experiments corroborate that TAPInspector is practical: it identifies 533 violations related to rule interaction from 1108 real-world market IoT apps and is at least 60000 times faster than the baseline without optimization.",Tool Tech,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9916292,,China,Non-WEIRD,
179,10.1145/3377325.3377499,TAPrec: Supporting the Composition of Trigger-Action Rules through Dynamic Recommendations,"Nowadays, users can personalize the joint behavior of their connected entities, i.e., smart devices and online service, by means of trigger-action rules. As the number of supported technologies grows, however, so does the design space, i.e., the combinations between different triggers and actions: without proper support, users often experience difficulties in discovering rules and their related functionality. In this paper, we introduce TAPrec, an End-User Development platform that supports the composition of trigger-action rules with dynamic recommendations. By exploiting a hybrid and semantic recommendation algorithm, TAPrec suggests, at composition time, either a) new rules to be used or b) actions for auto-completing a rule. Recommendations, in particular, are computed to follow the user's high-level intention, i.e., by focusing on the rules' final purpose rather than on low-level details like manufacturers and brands. We compared TAPrec with a widely used trigger-action programming platform in a study on 14 end users. Results show evidence that TAPrec is appreciated and can effectively simplify the personalization of connected entities: recommendations promoted creativity by helping users personalize new functionality that are not easily noticeable in existing platforms.",Empirical Studies,YES,YES,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3377325.3377499,Italy,Italy,WEIRD,Yes
180,10.1145/3359146,Technological Frames and User Innovation: Exploring Technological Change in Community Moderation Teams,Management of technological change in organizations is one of the most enduring topics in the literature on computer-supported cooperative work. The successful navigation of technological change is both more challenging and more critical in online communities that are entirely mediated by technology than it is in traditional organizations. This paper presents an analysis of 14 in-depth interviews with moderators of subcommunities of one technological platform (Reddit) that added communities on a new technological platform (Discord). Moderation teams experienced several problems related to moderating content at scale as well as a disconnect between the affordances of Discord and their assumptions based on their experiences on Reddit. We found that moderation teams used Discord's API to create scripts and bots that augmented Discord to make the platform work more like tools on Reddit. These tools were particularly important in communities struggling with scale. Our findings suggest that increasingly widespread end user programming allow users of social computing systems to innovate and deploy solutions to unanticipated design problems by transforming new technological platforms to align with their past expectations.,Empirical Studies,YES,YES,Business management & automation,https://dl.acm.org/doi/pdf/10.1145/3359146,"USA, UK, NL",USA,WEIRD,No
182,10.1109/VLHCC.2019.8818687,The Ceptre Editor: A Structure Editor for Rule-Based System Simulation,"Systems understanding is a skill required to solve many of the world’s most important problems, from climate change to immunotherapy to social decision-making. However, these problems also require communication among experts with diverse skill sets and academic backgrounds. Our long-term goal is to facilitate systems understanding across a range of disciplines through end-user computational modeling tools. This paper presents the Ceptre Editor, a structure editor for the rule-based programming language Ceptre. The Ceptre Editor runs in the browser and offers a visual interface and integrated development environment for Ceptre, following design recommendations from end-user programming, with the goal of providing discoverable affordances for program construction and maintaining syntactic well-formedness at each edit state. We performed a preliminary evaluation of the tool through a qualitative study, assessing the editors effectiveness at helping users understand and extended a system model, and found promising results regarding learnability and mental model accuracy.",Tool Tech,YES,YES,Business management & automation,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8818687,USA,USA,WEIRD,Yes
183,10.1109/VL/HCC50065.2020.9127201,The Design Space of Computational Notebooks: An Analysis of 60 Systems in Academia and Industry,"Computational notebooks such as Jupyter are now used by millions of data scientists, machine learning engineers, and computational researchers to do exploratory and end-user programming. In recent years, dozens of different notebook systems have been developed across academia and industry. However, we still lack an understanding of how their individual designs relate to one another and what their tradeoffs are. To provide a holistic view of this rapidly-emerging landscape, we performed, to our knowledge, the first comprehensive design analysis of dozens of notebook systems. We analyzed 60 notebooks (16 academic papers, 29 industry products, and 15 experimental/R&D projects) and formulated a design space that succinctly captures variations in system features. Our design space covers 10 dimensions that include diverse ways of importing data, editing code and prose, running code, and publishing notebook outputs. We conclude by suggesting ways for researchers to push future projects beyond the current bounds of this space.",Empirical Studies,NO,NA,Programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9127201,,USA,WEIRD,
187,,Therapists as designers: an initial investigation of end-user programming of a tangible tool for therapeutic interventions,"This paper presents a pilot study on end-user programming by therapists of a tangible tool for
children on the autism spectrum. The core design ideas were to use detailed natural language
descriptions of states and events, and an incremental process to facilitate the programming task.
Our study provides initial evidence of the feasibility of this approach.",Tool Tech,YES,Unspecified,Healthcare,https://ceur-ws.org/Vol-3053/paper_8.pdf,,Italy,WEIRD,
188,10.23919/MIPRO52101.2021.9597111,Three-Layer IoT Node Model for Simpler Custom IoT Deployments,"This paper presents a node model designed for simpler deployment of custom Internet of Things systems. Proposed node model consists of three layers: sensor, logic, and cloud layer. Sensor layer abstract communication with attached sensors and actuators. Similarly, cloud layer abstract communication with servers, usually in cloud. Sensor and cloud layers use configuration files with definitions of its interfaces. Logic layer execute end-user made program that represent node's behavior. Simple syntax is proposed for program so it can be created or adapted by some end-users, not just professional programmers but also automation enthusiasts. Program uses abstractions defined in sensor's and cloud's layers to perform required operations. Proposed node model is compared to other solutions in the IoT field. Advantages of proposed model include simpler design of custom IoT node and system, flexibility in network design, not relaying on Internet connection, while its downsides include complexity of middleware, capabilities when compared to implementation in a programming language, simplicity of creation when compared to solutions with graphical user interface.",Tool Tech,NO,NA,Smart objects and environments,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9597111,,Croatia,WEIRD,
189,10.1109/RO-MAN53752.2022.9900856,Timing-Specified Controllers with Feedback for Human-Robot Handovers,"We develop and evaluate two human-robot handover controllers that allow end-users to specify timing parameters for the robot reach motion, and that provide feedback if the robot cannot satisfy those constraints. End-user tuning with feedback is a useful controller feature in settings where robots have to be re-programmed for varying task requirements but end-users do not have programming knowledge. The two controllers we propose are both receding-horizon controllers that differ in their objective function, and their user specified parameters, and subsequently their user-interface: One controller uses a minimum cumulative jerk (MCJ) objective function, and the other a minimum cumulative error (MCE) objective function. We implemented the controllers on a collaborative robot and conducted two controlled experiments to compare the user experience and performance of these controllers vis-à-vis a baseline proportional velocity (PV) controller. In each experiment, participants (n = 30) interactively tuned the controller parameters, and collaborated with a robot to perform a time-constrained repetitive task. We found that the timing controller with the MCE implementation can provide a better user experience, both while setting the parameters (p =0.011) and performing the handovers with the robot (p < 0.001), and fewer failures (p =0.016) compared to the PV controller, however the MCJ implementation did not provide better user experience compared to the PV controller. The MCJ controller also resulted in more failures than the PV controller. These results could inform the design of usable and effective end-user configurable controllers for human-robot interaction.",Tool Tech,YES,YES,Robots,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9900856,USA,USA,WEIRD,Yes
190,10.1145/3491102.3501888,Tisane: Authoring Statistical Models via Formal Reasoning from Conceptual and Data Relationships,"Proper statistical modeling incorporates domain theory about how concepts relate and details of how data were measured. However, data analysts currently lack tool support for recording and reasoning about domain assumptions, data collection, and modeling choices in an integrated manner, leading to mistakes that can compromise scientific validity. For instance, generalized linear mixed-effects models (GLMMs) help answer complex research questions, but omitting random effects impairs the generalizability of results. To address this need, we present Tisane, a mixed-initiative system for authoring generalized linear models with and without mixed-effects. Tisane introduces a study design specification language for expressing and asking questions about relationships between variables. Tisane contributes an interactive compilation process that represents relationships in a graph, infers candidate statistical models, and asks follow-up questions to disambiguate user queries to construct a valid model. In case studies with three researchers, we find that Tisane helps them focus on their goals and assumptions while avoiding past mistakes.",Tool Tech,YES,Unspecified,"Data sciences, analysis & viz.",https://dl.acm.org/doi/pdf/10.1145/3491102.3501888,,USA,WEIRD,
191,10.1145/3417990.3420196,Towards a low-code solution for monitoring machine learning model performance,"As the use of machine learning techniques by organisations has become more common, the need for software tools that provide the robustness required in a production environment has become apparent. In this paper, we review relevant literature and outline a research agenda for the development of a low-code solution for monitoring the performance of a deployed machine learning model on a continuous basis.",Literature Review ,NO,NA,"Data sciences, analysis & viz.",https://dl.acm.org/doi/pdf/10.1145/3417990.3420196,,UK,WEIRD,
192,10.1109/ACCESS.2021.3051605,Towards a Modular and Distributed End-User Development Framework for Human-Robot Interaction,"In an effort towards the democratization of Robotics, this article presents a novel End-User Development framework called Robot Interfaces From Zero Experience (RIZE). The framework provides a set of useful software tools for the creation of robot-oriented software architectures and programming interfaces, as well as the modeling and execution of robot behaviors, with a specific emphasis on social behaviors. Programming interfaces built on top of RIZE enable professionals with different backgrounds and interests to design, adapt, and scale-up Robotics applications. As an example of a programming interface, we present Open RIZE, which exploits an End-User Programming paradigm combining blocks, tables, and forms-filling interfaces. Unlike previous approaches, robot behavioral code generated by Open RIZE is intrinsically modular, re-usable, scalable, neutral to the employed programming language, and platform-agnostic. In the article, we present the main design guidelines and features of Open RIZE. Additionally, we perform an initial usability evaluation of the Open RIZE interface in an online workshop. Preliminary results using the System Usability Scale with 10 novice end-users indicate that Open RIZE is easy-to-use and learn.",Tool Tech,YES,YES,Robots,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9323043,Australia,"Japan, France, Australia, Italy",WEIRD + Non-WEIRD,Yes
193,10.1145/3464432.3464437,Towards End-User Web Scraping for Customization,"Websites are malleable: users can run code in the browser to customize them. However, this malleability is typically only accessible to programmers with knowledge of HTML and Javascript. Previously, we developed a tool called Wildcard which empowers end-users to customize websites through a spreadsheet-like table interface without doing traditional programming. However, there is a limit to end-user agency with Wildcard, because programmers need to first create site-specific adapters mapping website data to the table interface. This means that end-users can only customize a website if a programmer has written an adapter for it, and cannot extend or repair existing adapters. In this paper, we extend Wildcard with a new system for end-user web scraping for customization. It enables end-users to create, extend and repair adapters, by performing concrete demonstrations of how the website user interface maps to a data table. We describe three design principles that guided our system’s development and are applicable to other end-user web scraping and customization systems: (a) users should be able to scrape data and use it in a single, unified environment, (b) users should be able to extend and repair the programs that scrape data via demonstration and (c) users should receive live feedback during their demonstrations. We have successfully used our system to create, extend and repair adapters by demonstration on a variety of websites and we provide example usage scenarios that showcase each of our design principles. Our ultimate goal is to empower end-users to customize websites in the course of their daily use in an intuitive and flexible way, and thus making the web more malleable for all of its users.",Tool Tech,NO,NA,Interaction design,https://dl.acm.org/doi/pdf/10.1145/3464432.3464437,,USA,WEIRD,
195,10.1109/ICICT52872.2021.00046,Towards Wide-Spectrum Spreadsheet Computing,"with the recent additions of dynamic arrays and user-defined functions, Microsoft Research has taken two important steps towards the unification of spreadsheets and general purpose programming environments. We offer our perspective on that quest, reiterating that the full potential of the spreadsheet computing paradigm can only be realized after removing the entanglement of the computational model and its visualization. Our experimental findings suggest this can be done without detracting from the live and user-friendly nature of the spreadsheet programming experience.",Tool Tech,NO,NA,Business management & automation,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9476942,,"USA, Spain, Germany, France, Costa Rica",WEIRD + Non-WEIRD,
196,10.1145/3411838,Trace2TAP: Synthesizing Trigger-Action Programs from Traces of Behavior,"Two common approaches for automating IoT smart spaces are having users write rules using trigger-action programming (TAP) or training machine learning models based on observed actions. In this paper, we unite these approaches. We introduce and evaluate Trace2TAP, a novel method for automatically synthesizing TAP rules from traces (time-stamped logs of sensor readings and manual actuations of devices). We present a novel algorithm that uses symbolic reasoning and SAT-solving to synthesize TAP rules from traces. Compared to prior approaches, our algorithm synthesizes generalizable rules more comprehensively and fully handles nuances like out-of-order events. Trace2TAP also iteratively proposes modified TAP rules when users manually revert automations. We implemented our approach on Samsung SmartThings. Through formative deployments in ten offices, we developed a clustering/ranking system and visualization interface to intelligibly present the synthesized rules to users. We evaluated Trace2TAP through a field study in seven additional offices. Participants frequently selected rules ranked highly by our clustering/ranking system. Participants varied in their automation priorities, and they sometimes chose rules that would seem less desirable by traditional metrics like precision and recall. Trace2TAP supports these differing priorities by comprehensively synthesizing TAP rules and bringing humans into the loop during automation.",Tool Tech,YES,YES,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3411838,USA,USA,WEIRD,Yes
197,10.1145/3290605.3300675,Trigger-Action Programming for Personalising Humanoid Robot Behaviour,"In the coming years humanoid robots will be increasingly used in a variety of contexts, thereby presenting many opportunities to exploit their capabilities in terms of what they can sense and do. One main challenge is to design technologies that enable those who are not programming experts to personalize robot behaviour. We propose an end user development solution based on trigger-action personalization rules. We describe how it supports editing such rules and its underlying software architecture, and report on a user test that involved end user developers. The test results show that users were able to perform the robot personalization tasks with limited effort, and found the trigger-action environment usable and suitable for the proposed tasks. Overall, we show the potential for using trigger-action programming to make robot behaviour personalization possible even to people who are not professional software developers.",Tool Tech,YES,YES,Robots,https://dl.acm.org/doi/pdf/10.1145/3290605.3300675,Italy,Italy,WEIRD,Yes
198,10.1145/3411764.3445265,TweakIt: Supporting End-User Programmers Who Transmogrify Code,"End-user programmers opportunistically copy-and-paste code snippets from colleagues or the web to accomplish their tasks. Unfortunately, these snippets often don’t work verbatim, so these people—who are non-specialists in the programming language—make guesses and tweak the code to understand and apply it successfully. To support their desired workflow and facilitate tweaking and understanding, we built a prototype tool, TweakIt, that provides users with a familiar live interaction to help them understand, introspect, and reify how different code snippets would transform their data. Through a usability study with 14 data analysts, participants found the tool to be useful to understand the function of otherwise unfamiliar code, to increase their confidence about what the code does, to identify relevant parts of code specific to their task, and to proactively explore and evaluate code. Overall, our participants were enthusiastic about incorporating TweakIt in their own day-to-day work.",Tool Tech,YES,Unspecified,Programming,https://dl.acm.org/doi/pdf/10.1145/3411764.3445265,,"UK, USA",WEIRD,
200,10.1145/3359287,Understanding Family Collaboration Around Lightweight Modification of Everyday Objects in the Home,"The internet-of-things (IoT) carries substantial costs by urging households to replace their possessions with new, internet connected versions of everyday objects. Beyond financial, these costs include waste, work to arrange and orchestrate objects to suit households, and that of acquiring new skills. Upcycling domestic objects could offer households greater discretion and control over these costs by supporting the ability to tailor IoT to the home. To understand how households might do this, we conducted a home study with 10 diverse American households over 7 days to surface the approaches families are likely to use when tailoring IoT to their existing possessions. We asked family members to enact their process using endowed sticker props---IoT Stickers---to modify objects in their home. We develop a framework of how families make light weight modifications of domestic possessions, summarize trends of their object modifications, and describe the burdens such a system could impose.",Empirical Studies,YES,YES,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3359287,USA,USA,WEIRD,Yes
201,10.1007/978-3-031-21388-5_27,Understanding Low-Code or No-Code Adoption in Software Startups: Preliminary Results from a Comparative Case Study,"Low-code or no-code application development is a new jargon in the software development community. In response, large and medium-sized companies, are seen triggered to join the bandwagon. Existing research on why small and innovative companies, like software startups, apply this paradigm is limited. The current literature shows that software startups are different from established software companies in terms of their focus on innovation, market-driven context, limited resources, and uncertainty. Therefore, in this paper, we study and report our initial understanding of why software startups apply low-code or no-code. We studied two cases, in the first phase, to address the research question. Our preliminary results show that software startups apply this paradigm in an ad-hoc manner and use it for experimentation, prototyping, and idea validation. On the flip side, large companies enjoy a stable workflow of low-code or no-code development. The motivations include achieving rapid product development, fast feedback, and empowering business users. These results provide a good starting point for discussion and demand for further research. Including additional data, particularly, more cases, therefore, is our essential next step to get a deeper understanding and report final results.",Empirical Studies,NO,NA,"Healthcare, Business management & automation",https://link.springer.com/chapter/10.1007/978-3-031-21388-5_27,,Italy,WEIRD,
202,10.1145/3411764.3445567,Understanding Trigger-Action Programs Through Novel Visualizations of Program Differences,"Trigger-action programming (if-this-then-that rules) empowers non-technical users to automate services and smart devices. As a user’s set of trigger-action programs evolves, the user must reason about behavior differences between similar programs, such as between an original program and several modification candidates, to select programs that meet their goals. To facilitate this process, we co-designed user interfaces and underlying algorithms to highlight differences between trigger-action programs. Our novel approaches leverage formal methods to efficiently identify and visualize differences in program outcomes or abstract properties. We also implemented a traditional interface that shows only syntax differences in the rules themselves. In a between-subjects online experiment with 107 participants, the novel interfaces better enabled participants to select trigger-action programs matching intended goals in complex, yet realistic, situations that proved very difficult when using traditional interfaces showing syntax differences.",Tool Tech,YES,YES,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3411764.3445567,USA,"USA, Singapore",WEIRD + Non-WEIRD,Yes
203,10.1109/VLHCC.2019.8818834,Unmixing Remixes: The How and Why of Not Starting Projects from Scratch,"One of the greatest achievements of Scratch as an educational tool is the eager willingness of programmers to use existing projects as the starting point for their own projects, a practice known as remixing. Despite the importance of remixing as a foundation of collaborative and communal learning, the practice remains poorly understood, with the Scratch programming community remaining in the dark about which programming practices encourage and facilitate remixing. Scratch designers lack feedback on how the remixing facility is used in the wild. To gain a deeper insight into remixing, this paper investigates heretofore unexplored dimensions of remixing: (1) the prevailing modifications that remixes perform on existing projects, (2) the impact of the original project's code quality on the granularity, extent, and development time of the modifications in the remixes, and (3) the propensity of the dominant programming practices in the original project to remain so in the remixes. Our findings can encourage remixing and improve its effectiveness, benefiting the educational and end-user programming communities.",Empirical Studies,NO,NA,Education,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8818834,,USA,WEIRD,
204,10.1145/3371382.3378300,User Needs and Design Opportunities in End-User Robot Programming,We report on a user study that sought to understand how users program robot tasks by direct demonstration and what problems they encounter when using a state-of-the-art robot programming interface to create and edit robot programs. We discuss how our findings translate to design opportunities in end-user robot programming.,Empirical Studies,YES,Unspecified,Robots,https://dl.acm.org/doi/pdf/10.1145/3371382.3378300,,USA,WEIRD,
205,10.1145/3419249.3420136,User-Driven Design Guidelines for the Authoring of Cross-Device and Internet of Things Applications,"Recently we see an increasing number of solutions for the authoring of cross-device and Internet of Things (IoT) applications. While most of these authoring tools have been realised based on existing metaphors and evaluated in subsequent user studies, there is no consensus on how to best enable end users to manage and interact with their devices, IoT objects and services. In order to establish some common guidelines for the development of cross-device and IoT authoring tools, we conducted an elicitation study exploring a user’s mental model when defining cross-device interactions in IoT environments. Existing authoring solutions have further been checked for compliance with our guidelines and we developed a fully-compliant end-user authoring tool for cross-device and IoT applications. The presented guidelines may inform the design of new as well as the improvement of existing solutions and form a foundation for discussion, future studies and refinements within the HCI community.",Empirical Studies,YES,Unspecified,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3419249.3420136,,Belgium,WEIRD,
206,10.1109/ACCESS.2020.3002591,Uvis: A Formula-Based End-User Tool for Data Visualization,"Existing approaches to data visualization are one of these two: accessible to end-user developers but limited in customizability, or inaccessible and expressive. For instance, commercial charting tools are easy to use, but support only predefined visualizations, while programmatic visualization tools support custom visualizations, but require advanced programming skills. We show that it is possible to combine the learnability of charting tools and the expressiveness of visualization tools. Uvis is an interactive visualization and user interface design tool that targets end-user developers with skills comparable to spreadsheet formulas. With Uvis, designers drag and drop visual objects, set visual properties to formulas, and see the result immediately. The formulas are declarative and similar to spreadsheet formulas. The formulas compute the property values and can refer to data from database, visual objects, and end-user input. To substantiate our claim, we compared Uvis with popular visualization tools. Further, we conducted usability studies that test the ability of designers to customize visualizations with our approach. Our results show that end-user developers can learn the basics of Uvis relatively fast.",Tool Tech,YES,Unspecified,"Data sciences, analysis & viz.",https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9117123,,"UAE, Denmark",WEIRD + Non-WEIRD,
207,10.1145/3397877,UX-Painter: An Approach to Explore Interaction Fixes in the Browser,"Usability and user interaction improvement is a central task in web development to guarantee the success of a web application. However, designers are barely able to keep up with the current development cycle because their practices are too costly, while interaction issues accumulate in applications that end-users keep suffering. In this work, we propose a method for designers to rapidly explore solutions through visual programming to the interaction problems of an application under development, even when it has been already deployed. The method is realized by a tool called UX-Painter, an exploratory tool for designers to apply quick fixes to interaction issues at the client-side of a web application without the need of any script programming knowledge. The palette of available fixes in UX-Painter are client-side web refactorings, i.e., changes to web page elements that solve specific user interaction problems without changing the underlying functionality. UX-Painter allows designers to quickly set up new versions of a web application by combining refactorings to create alternative designs for user testing or an inspection review. UX-Painter also provides the means to communicate design improvements, as a sequence of refactorings with clear semantics. We show the feedback provided by interviews with designers about UX-Painter's functionality and the results of a user test about its usability.",Tool Tech,YES,unspecified,Interaction design,https://dl.acm.org/doi/pdf/10.1145/3397877,,Argentina,Non-WEIRD,
208,10.1145/3301275.3302267,Vajra: Step-by-Step Programming with Natural Language,"Building natural language programming systems that are geared towards end-users requires the abstraction of formalisms inherently introduced by programming languages, capturing the intent of natural language inputs and mapping it to existing programming language constructs.We present a novel end-user programming paradigm for Python, which maps natural language commands into Python code. The proposed semantic parsing model aims to reduce the barriers for producing well-formed code (syntactic gap) and for exploring third-party APIs (lexico-semantic gap). The proposed method was implemented in a supporting system and evaluated in a usability study involving programmers as well as non-programmers. The results show that both groups are able to produce code with or without prior programming experience.",Tool Tech,YES,Unspecified,Programming,https://dl.acm.org/doi/pdf/10.1145/3301275.3302267,,"UK, Germany, Switzerland",WEIRD,
209,10.1109/ICET48972.2019.8994397,Version Detection in Spreadsheets Based on Headers Similarity,"In almost every company, institution, business, or even for personal use people employ spreadsheets to perform a variety of tasks. Spreadsheet programming is the most commonly used end-user programming language. Spreadsheets users create new spreadsheets based on existing ones and reuse data layout and computational logic, so there are multiple versions of spreadsheets. End-users have no background of professional programming skills. That is why they are not well aware of the importance of version control and keeping the record of previous documents. So, the version information is usually missing, and it creates a lot of mess when some error is found in one spreadsheet that needs to be resolved in all of its other versions, and it becomes almost impossible when users deal with a very large number of spreadsheets. In this paper, we propose an automatic approach to cluster spreadsheets and find different versions of spreadsheets based on the similarity of headers present in spreadsheets. The header detection is not done in a conventional way that is present in literature, but we use font attributes in order to detect headers. We applied our approach on 40 spreadsheets randomly selected from spreadsheet corpora like Enron, FUSE, and EUSES. The evaluation results showed that the proposed approach could detect versions of spreadsheets with higher precision and recall rates of 82.24% and 78.48% respectively. The F1-Measure achieved is 80.08%.",Empirical Studies,NO,NA,Business management & automation,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8994397,,Pakistan,Non-WEIRD,
210,10.1145/3464385.3464699,Virtual Assistants for Personalizing IoT Ecosystems: Challenges and Opportunities,"End-user development (EUD) is widely used today for the personalization of the most diffused commercial virtual assistants (VAs), both for the configuration of VA-controlled smart environments and the definition of automatic behaviours. However, EUD is not yet exploited to its potential. In this paper, we present the results of a long-time use of VAs in our homes: we compare the most known VAs and discuss a set of challenges that we identified and that can guide the future directions of Human-Computer Interaction research in this field.",Empirical Studies,NO,NA,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3464385.3464699,,Italy,WEIRD,
211,10.1016/j.cola.2020.100970,"Visual Programming Environments for End-User Development of intelligent and social robots, a systematic review","Robots are becoming interactive and robust enough to be adopted outside laboratories and in industrial scenarios as well as interacting with humans in social activities. However, the design of engaging robot-based applications requires the availability of usable, flexible and accessible development frameworks, which can be adopted and mastered by researchers and practitioners in social sciences and adult end users as a whole. This paper surveys Visual Programming Environments aimed at enabling a paradigm fostering the so-called End-User Development of applications involving robots with social capabilities. The focus of this article is on those Visual Programming Environments that are designed to support social research goals as well as to cater for professional needs of people not trained in more traditional text-based computer programming languages. This survey excludes interfaces aimed at supporting expert programmers, at allowing industrial robots to perform typical industrial tasks (such as pick and place operations), and at teaching children how to code. After having performed a systematic search, sixteen programming environments have been included in this survey. Our goal is two-fold: first, to present these software tools with their technical features and Authoring Artificial Intelligence modeling approaches, and second, to present open challenges in the development of Visual Programming Environments for end users and social researchers, which can be informative and valuable to the community. The results show that the most recent such tools are adopting distributed and Component-Based Software Engineering approaches and web technologies. However, few of them have been designed to enable the independence of end users from high-tech scribes. Moreover, findings indicate the need for (i) more objective and comparative evaluations, as well as usability and user experience studies with real end users; and (ii) validations of these tools for designing applications aimed at working “in-the-wild” rather than only in laboratories and structured settings.",Literature Review ,NO,NA,Robots,https://reader.elsevier.com/reader/sd/pii/S2590118420300307?token=2B86A330C66377F3E027764A8021D08D8E02C06219E2E9891FD1D71D034132696DA33FE8554CAA7F1AB20265BD394DA4&originRegion=eu-west-1&originCreation=20230224115349,,"Japan, Italy, Poland",WEIRD + Non-WEIRD,
212,10.1109/VL/HCC51201.2021.9576372,VREUD - An End-User Development Tool to Simplify the Creation of Interactive VR Scenes,"Recent advances in Virtual Reality (VR) technology and the increased availability of VR-equipped devices enable a wide range of consumer-oriented applications. For novice developers, however, creating interactive scenes for VR applications is a complex and cumbersome task that requires high technical knowledge which is often missing. This hinders the potential of enabling novices to create, modify, and execute their own interactive VR scenes. Although recent authoring tools for interactive VR scenes are promising, most of them focus on expert professionals as the target group and neglect the novices with low programming knowledge. To lower the entry barrier, we provide an open-source web-based End-User Development (EUD) tool, called VREUD, that supports the rapid construction and execution of interactive VR scenes. Concerning construction, VREUD enables the specification of the VR scene including interactions and tasks. Furthermore, VREUD supports the execution and immersive experience of the created interactive VR scenes on VR head-mounted displays. Based on a user study, we have analyzed the effectiveness, efficiency, and user satisfaction of VREUD which shows promising results to empower novices in creating their interactive VR scenes.",Tool Tech,YES,Unspecified,AR/VR,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9576372,,Germany,WEIRD,
213,10.1109/ACCESS.2021.3104187,Web Augmentation as a Technique to Diminish User Interactions in Repetitive Tasks,"The use of the World Wide Web has experienced extraordinary growth in the last decades. The Web has become the main source of information for millions of users. The number of websites offering content to users is countless. In order to personalise information according to their needs, users often have to visit multiple, unconnected pages. Users perform a number of actions to collect that information that requires concentration. If the number of Web resources is large, the activity becomes unpleasant. The problem increases when these tasks are performed frequently and repetitively. These tasks are time-consuming and lead users to experience frustration and disorientation during the activity, causing a loss of concentration that prolongs the activity over time. Web Augmentation combines different Web technologies to improve user experience on existing pages by adding content from different pages among other benefits. This article proposes Web Augmentation as a technique to reduce user interactions in repetitive tasks. To support the proposal, the paper introduces Excore, a browser extension for Web Augmentation that allows end-users to add content from different resources automatically. The article presents the benefits introduced by this approach as a response to the drawbacks experienced by users while performing their activities on the Web. The architecture of the platform and its operations are described by means of an example. A double evaluation of the extension is addressed, one qualitative and one quantitative. The results show that Excore reduces the number of interactions by 94.45% and the time to complete a task by 80.75%.",Tool Tech,YES,YES,Business management & automation,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9511488,Spain,Spain,WEIRD,Yes
214,10.1145/3411764.3445682,What We Can Learn From Visual Artists About Software Development,"This paper explores software’s role in visual art production by examining how artists use and develop software. We conducted interviews with professional artists who were collaborating with software developers, learning software development, and building and maintaining software. We found artists were motivated to learn software development for intellectual growth and access to technical communities. Artists valued efficient workflows through skilled manual execution and personal software development, but avoided high-level forms of software automation. Artists identified conflicts between their priorities and those of professional developers and computational art communities, which influenced how they used computational aesthetics in their work. These findings contribute to efforts in systems engineering research to integrate end-user programming and creativity support across software and physical media, suggesting opportunities for artists as collaborators. Artists’ experiences writing software can guide technical implementations of domain-specific representations, and their experiences in interdisciplinary production can aid inclusive community building around computational tools.",Empirical Studies,YES,NO,Games & arts,https://dl.acm.org/doi/pdf/10.1145/3411764.3445682,"USA, Israel, UK",USA,WEIRD,No
216,10.1145/3459990.3462463,When Children Program Intelligent Environments: Lessons Learned from a Serious AR Game,"While the body of research focusing on Intelligent Environments (IEs) programming by adults is steadily growing, informed insights about children as programmers of such environments are limited. Previous work already established that young children can learn programming basics. Yet, there is still a need to investigate whether this capability can be transferred in the context of IEs, since encouraging children to participate in the management of their intelligent surroundings can enhance responsibility, independence, and the spirit of cooperation. We performed a user study (N=15) with children aged 7-12, using a block-based, gamified AR spatial coding prototype allowing to manipulate smart artifacts in an Intelligent Living room. Our results validated that children understand and can indeed program IEs. Based on our findings, we contribute preliminary implications regarding the use of specific technologies and paradigms (e.g. AR, trigger-action programming) to inspire future systems that enable children to create enriching experiences in IEs.",Empirical Studies,YES,YES,AR/VR,https://dl.acm.org/doi/pdf/10.1145/3459990.3462463,Greece,Greece,WEIRD,Yes
217,10.1145/3350546.3352558,WoTDL: Web of Things Description Language for Automatic Composition,"Enabling end users to take a proactive role in the development of Web of Things (WoT) applications that achieves their goals is a challenge for End User Development (EUD) in the context of WoT. This can be achieved through Artificial Intelligence (AI) planning algorithms if the relevant WoT concepts and relationships are described in an interoperable way. Although similar, existing service description languages like WSDL or ontologies like OWL-S are not sufficient to represent all required characteristics of concrete WoT planning scenarios. To address these limitations, in this paper we present the Web of Things Description Language (WoTDL) ontology which is an extension of existing WoT models to describe the key concepts of AI planning for automatic WoT composition. To demonstrate the feasibility of our approach, we follow the best practices recommended by the semantic web community and describe the physical devices of our smart home testbed in an AI planning scenario using WoTDL.",Tool Tech,NO,NA,Smart objects and environments,https://dl.acm.org/doi/pdf/10.1145/3350546.3352558,,Germany,WEIRD,