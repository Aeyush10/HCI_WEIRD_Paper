S.NO,DOI,TITLE,Abstract,Contribution(TOOL TECH / Litretaure review / empirical studies,user study,user study is WEIRD(YES/NO),Is Contribution related to WEIRD (YES/NO),Domain,LINK,,,
1,10.1145/3531073.3531090,A Conversational Agent for Creating Flexible Daily Automation,"The spread of sensors and intelligent devices of the Internet of Things and their integration in daily environments are changing the way we interact with some of the most common objects in everyday life. Therefore, there is an evident need to provide non-expert users with the ability to customize in a simple but effective way the behaviour of these devices based on their preferences and habits. This paper presents RuleBot, a conversational agent that uses machine learning and natural language processing techniques to allow end users to create automations according to a flexible implementation of the trigger-action paradigm, and thereby customize the behaviour of devices and sensors using natural language. In particular, the paper describes the design and implementation of RuleBot, and reports on a user test and lessons learnt.",TOOL TECH,YES,Unspecified,NO,IOT,https://dl.acm.org/doi/fullHtml/10.1145/3531073.3531090,,,
2,10.1145/3567512.3567527,A Language-Parametric Approach to Exploratory Programming Environments,"Exploratory programming is a software development style in which code is a medium for prototyping ideas and solutions, and in which even the end-goal can evolve over time. Exploratory programming is valuable in various contexts such as programming education, data science, and end-user programming. However, there is a lack of appropriate tooling and language design principles to support exploratory programming. This paper presents a host language- and object language-independent protocol for exploratory programming akin to the Language Server Protocol. The protocol serves as a basis to develop novel (or extend existing) programming environments for exploratory programming such as computational notebooks and command-line REPLs. An architecture is presented on top of which prototype environments can be developed with relative ease, because existing (language) components can be reused. Our prototypes demonstrate that the proposed protocol is sufficiently expressive to support exploratory programming scenarios as encountered in literature within the software engineering, human-computer interaction and data science domains.",TOOL TECH,NO,NO,NO,Exploratory programming,https://dl.acm.org/doi/pdf/10.1145/3567512.3567527,,,
3,10.1145/3550356.3561588,A Low-Code Approach to Support Method Engineering,"Method engineering is defined as a discipline to design, construct and adapt methods, techniques and tools for the development of information systems. A method formalizes and structures the steps needed in order to achieve a specific goal. By executing a method step by step, users follow a systematic and well defined way to attain the results which the method was created for. However, method creation or the adaptation of existing methods to a specific domain or organization is challenging if one does not have method engineering skills. In addition, the adoption of a method may also be difficult if there is no tool to support these activities. Method engineers may not have the programming skills to implement such a tool. In this context, we propose an approach inspired by the low-code and end-user development paradigms for method engineering. The advantages are twofold. Firstly, it helps method engineers in creating and configuring new methods. Secondly, the approach automatically provides tool support so that method experts can actually execute the method. This position paper presents the approach through a proof of concept implementation.",TOOL TECH,NO,NA,NO,Unspecified,https://dl.acm.org/doi/pdf/10.1145/3550356.3561588,,,
4,10.1145/3531073.3531168,A Multi-Modal Approach to Creating Routines for Smart Speakers,"Smart speakers can execute user-defined routines, namely, sequences of actions triggered by specific events or conditions. This paper presents a new approach to the creation of routines, which leverages the multi-modal features (vision, speech, and touch) offered by Amazon Alexa running on Echo Show devices. It then illustrates how end users found easier to create routines with the proposed approach than with the usual interaction with the Alexa app.",TOOL TECH,YES,Unspecified,no,Alexa,https://dl.acm.org/doi/pdf/10.1145/3531073.3531168,,,
5,10.48550/arXiv.2207.10648,A No-Code Low-Code Paradigm for Authoring Business Automations Using Natural Language,"Most business process automation is still developed using traditional automation technologies such as workflow engines. These systems provide domain specific languages that require both business knowledge and programming skills to effectively use. As such, business users often lack adequate programming skills to fully leverage these code oriented environments. We propose a paradigm for the construction of business automations using natural language. The approach applies a large language model to translate business rules and automations described in natural language, into a domain specific language interpretable by a business rule engine. We compare the performance of various language model configurations, across various target domains, and explore the use of constrained decoding to ensure syntactically correct generation of output.",TOOL TECH,NO,NA,NO,BUSINESS AUTOMATION,https://arxiv.org/pdf/2207.10648.pdf,,,
6,10.1145/3466819,A Survey on End-User Robot Programming,"As robots interact with a broader range of end-users, end-user robot programming has helped democratize robot programming by empowering end-users who may not have experience in robot programming to customize robots to meet their individual contextual needs. This article surveys work on end-user robot programming, with a focus on end-user program specification. It describes the primary domains, programming phases, and design choices represented by the end-user robot programming literature. The survey concludes by highlighting open directions for further investigation to enhance and widen the reach of end-user robot programming systems.",Literature review,NO,NA,NO,robot Programming,https://dl.acm.org/doi/pdf/10.1145/3466819,,,
7,10.1109/RCIS.2019.8877048,A Unifying Reference Framework and Model for Adaptive Distributed Hybrid User Interfaces,"Over the last decade, research on adaptive and distributed user interfaces (DUIs) has increased. We also witness a growing number of Internet of Things (IoT) devices, allowing digital user interfaces (UIs) to communicate with physical objects and vice versa through so-called hybrid user interfaces. There exist various solutions to manage adaptive, distributed or hybrid UIs. However, none of them covers all three aspects and users have to deal with multiple applications and configurations when developing adaptive distributed hybrid user interfaces. We introduce the eSPACE reference framework and conceptual model unifying the domains of adaptive, distributed and hybrid interfaces. While our reference framework has been inspired by the CAMELEON reference framework, the conceptual model is based on the Resource-Selector-Link (RSL) hypermedia metamodel. We propose an approach for adaptive distributed hybrid user interfaces where users can author their user interfaces based on the different levels of abstraction introduced by our reference framework. We further present a use case illustrating the extensibility, flexibility and reusability offered by our unified approach and discuss potential future work.",TOOL TECH,NO,NA,NO,IoT,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8877048,,,
8,10.1145/3399715.3399833,A Visual Environment for End-User Creation of IoT Customization Rules with Recommendation Support,"Personalization rules based on the trigger-action paradigm have recently garnered increasing interest in Internet of Things (IoT) applications. However, composing trigger-action rules can be a challenging task for end users, especially when the rules' complexity increases. Users have to decide about various aspects: which triggers and actions to select, how to combine multiple triggers or actions, and whether some previously defined rule can help in the composition process. We propose a visual environment, Block Rule Composer, to address these problems. It consists of a tool for creating rules based on visual blocks, integrated with recommendation techniques in order to provide intelligent support during rule creation. We also report on a first test which provided positive indications and suggestions for further design improvements.",TOOL TECH,YES,Unspecified,NO,IOT,https://dl.acm.org/doi/pdf/10.1145/3399715.3399833,,,
9,10.1007/978-3-030-44322-1_23,Adopting Industry 4.0 Technologies in Citizens' Electronic-Engagement Considering Sustainability Development,"In today’s modern world, societies are utterly attached to internet and technologies to access more information, switching the traditional modes of communication to virtual – all at large scale simultaneously. Governments are using advanced innovative technologies to provide end-to-end integrated public services e.g. in the form of electronic government (e-Government); nevertheless, how effective and efficient their communication with public society are and where citizens engagement has been considered to deliver the services – these still remain unexplored. This developing paper is considering Industry 4.0 (I4.0), Society 5.0 (S5.0), sustainability and circular economy in order to review the impact of I4.0 on manufacturing, what various governments planned to adopt I4.0 technologies within public services and direct communication with citizens. Eventually introducing some of the opportunities, challenges and gaps within citizen’s electronic engagement (e-Engagement) which is a term of digital communication between citizens and public decision makers.
",We don't know currently DUE TO ACCESS ISSUE,We don't know currently DUE TO ACCESS ISSUE,We don't know currently DUE TO ACCESS ISSUE,We don't know currently DUE TO ACCESS ISSUE,We don't know currently DUE TO ACCESS ISSUE,https://link.springer.com/chapter/10.1007/978-3-030-44322-1_23,,,
10,10.1007/978-3-030-97986-7_5,Advocating for Educational Support to Develop Socially Disadvantaged Young People's Digital Skills and Competencies: Can Support Encourage Their Human Development as Digital Citizens?,"Digital skills and competencies, and civic participation based on such skills and competencies (i.e. digital citizenship), are recognised as a challenge for the coming digital society. This paper contends that educational support to develop socially disadvantaged young people’s digital skills and competencies has a positive impact on digital citizenship. Accordingly, findings based on four years of action research among a support group for socially disadvantaged youths in a provincial city in Japan and a discussion of the support’s impact are presented. Our results suggest that such educational support can expand one’s freedom to explore digital technology’s potential, self-determination as an active learner in a digital environment, and space to participate in a digital society as a digital citizen",Excluded(not relvant ),,,,,https://www.springerprofessional.de/en/advocating-for-educational-support-to-develop-socially-disadvant/20213998,,,
11,10.1145/3292522.3326044,An Automated Cyclic Planning Framework Based on Plan-Do-Check-Act for Web of Things Composition,"Empowering end users to be directly involved in the development and composition of their smart devices surrounding them that achieves their goals is a major challenge for End User Development (EUD) in the context of Web of Things (WoT). This can be achieved through Artificial Intelligence (AI) planning. Planning is intended as the ability of a WoT system to construct a sequence of actions, that when executed by the smart devices, achieves an effect on the environment in response to an end user issued goal. The problem of planning specifically for the WoT domain has not been sufficiently dealt with in the existing literature. The existing planning approaches do not deal with one or more of the following important factors in the context of WoT: (1) random unexpected events (2) unpredictable device effects leading to side effects at runtime, and (3) durative effects. In this work, we propose a cyclic planning system which adopted a PDCA (Plan-Do-Check-Act) process solution to deal with the existing shortcomings for continuous improvement. The planner employs domain knowledge based on the WoTDL (Web of Things Description Language) ontology.The cyclic planner enables continuous plan monitoring to cope with inconsistencies with user issued goals. We demonstrate the feasibility of the proposed approach on our smart home testbed. The proposed planner further enhances the ease of use for end users in the context of our goal-oriented approach GrOWTH.",TOOL TECH ,NO,NA,NO,WoT,https://dl.acm.org/doi/pdf/10.1145/3292522.3326044,,,
12,10.48550/arXiv.2203.06439,An end-user coding-based environment for programming an educational affective robot,"In this paper we present an open source educational robot,        designed both to engage children in an affective and social interaction, and to        be        programmable        also        in        its        social        and        affective        behaviour.        Indeed        the        robot,        in        addition        to        classic
programming tasks, can also be programmed as a social robot.        In addition to movements, the user can make the robot express
emotions and make it say things.        The robot can also be left in autonomous mode and greeting the user, recognizing biometric
user’s features and emotion, etc",TOOL TECH,NO,NA,NO,ROBOT TECHNOLOGY,https://arxiv.org/pdf/2203.06439,,,
13,10.1109/ETFA46521.2020.9212036,An Expert Review on the Applicability of Blockly for Industrial Robot Programming,"The paradigm shift triggered by Industry 4.0 leads to a fast rising number of industrial machinery and collaborative robots that increases the need for flexible customization of production processes and automation workflows. End-user programming of industrial robots has become an essential capability for all areas in industry. In this paper, we investigate the applicability of block-based programming languages for large and complex robot programs. Therefore, we implemented a real-world program for industrial robots using Blockly, a block-based visual language, and assessed the results regarding portability, readability, understandability, and maintainability. Our findings are, that (1) large and complex real-world robot programs can be expressed in Blockly, (2) that the readability and understandability of such programs is equal to conventional flow-chart based programming languages, and (3) that the maintainability of Blockly programs can even be considered better than in flowchart based languages. Our results and findings serve as basis for usability studies with end-users in robot programming.",TOOL TECH ,NO,NA,NO,ROBOT PROGRAMMING,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9212036,,,
14,10.1145/3466872,An Upcycled IoT: Building Tomorrow’s IoT out of Today’s Household Possessions,"An upcycled approach uses everyday objects as design material for IoT systems by enabling users to make their “dumb” objects “smart.” Adopting this approach, IoT Codex realizes a new socially informed, context-aware computing and end-user programming.",Excluded,,,,,https://dl.acm.org/doi/pdf/10.1145/3466872,,,
15,10.1109/SPW.2019.00034,Analysis of the Susceptibility of Smart Home Programming Interfaces to End User Error,"Trigger-action platforms enable end-users to program their smart homes using simple conditional rules of the form: if ""condition"" then ""action"". Although these rules are easy to program, subtleties in their interpretation can cause users to make errors that have consequences ranging from incorrect and undesired functionality to security and privacy violations. Based on prior work, we enumerate a set of nine classes of errors that users can make, and we empirically study the relationship between these classes and the interface design of eight commercially available trigger-action platforms. Particularly, we examine whether each interface prevents (e.g., via good design) or allows each class of error. Based on this analysis, we develop a framework to classify errors and extract insights that lay a foundation for the design of future trigger-action programming interfaces where certain classes of errors can be mitigated by technical means or by alerting the user of the possibility of an error. For instance, we identify that an analysis of a dataset of functionally-similar trigger-action rules could be used to predict whether certain types of error patterns are about to occur.",Empirical Studies,no ,NA,no,trigger-action programming ,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8844640,,,
16,10.1016/j.jss.2022.111547,Assessing industrial end-user programming of robotic production cells: A controlled experiment,"Adapting the behavior of robots and their interaction with other machines on the shop floor is typically
accomplished by non-programmers. Often these non-programmers use visual languages to specify the
robot’s and/or machine’s control logic. While visual languages are explored as a means to enable
novices to program, there is little understanding of what problems novices face when tasked with
realistic adaptation programming tasks on the shop floor. In this paper, we report the results of a
controlled experiment where domain experts in the injection molding industry inspected and changed
realistic programs involving a robot, injection molding machine, and additional external machines. We
found that participants were comparably quick to understand the program behavior with a familiar
sequential function chart-based language and a Blockly-based language used for the first time. We
also observed that these non-programmers had difficulty in multiple aspects independent of language
due to the interweaving of physical and software-centric interaction between robot and machine.
We conclude that assistance needs to go beyond optimizing available language elements to include
suggesting relevant programming elements and their sequence.",Empirical Studies,YES  ,unspecified,NO,ROBOT PROGRAMMING,https://www.sciencedirect.com/science/article/pii/S0164121222002230/pdfft?md5=963d9393ae4f83efbab7ae0c60d10acb&pid=1-s2.0-S0164121222002230-main.pdf,,,
17,10.1145/3462244.3481276,Assisted End-User Robot Programming,"End-user programming methods that enable users who may not have programming or robotics experience to program robots have helped lower the barrier of entry for everyday people to use robots for their needs. However, popular end-user robot programming methods such as kinesthetic teaching can still involve various user difficulties, from acclimating to an unfamiliar programming interface to maneuvering a robot effectively without encountering joint limits or singularities. Providing personalized, just-in-time assistance can help end-users avoid introducing errors and suboptimalities into their programs due to such difficulties while enhancing their overall experience during robot programming. My PhD thesis will focus on enabling assisted end-user robot programming to support users throughout the robot programming process, from authoring to editing, by leveraging users’ natural multimodal cues. This extended abstract details my past, current, and future work towards this goal.",Excluded because it is doctoral symposium,,,,,https://dl.acm.org/doi/pdf/10.1145/3462244.3481276,,,
18,10.1007/978-3-030-53956-6_49,Aula Touch Game: Digital Tablets and Their Incidence in the Development of Citizen Competences of Middle Education Students in the District of Barranquilla-Colombia,"Citizen competences are considered as a fundamental aspect in the social development of man with his environment, which allows him to carry out actions that are articulated with the different guidelines established by law, which leads the citizen to live in a coherent and peaceful way in a nation that tends for freedom of thought framed in a democratic society. That is why it is considered of high importance that in educational establishments there are spaces that tend for training in peaceful coexistence framed in the law of the educated. This article resulted from the research project: “Social Appropriation of citizen and mathematical competences making use of MIDTablets”, in which the mediation of Information and Communication Technologies is proposed to support the training of citizens with competences citizens who ensure adequate behavior in society. This project was developed in 31 educational institutions in the district of Barranquilla-Colombia, with support from resources of both the Ministry of Information Technology and Communications (MinTic), and the Secretariat of District Education of Barranquilla, in compliance with national goals, departmental and district regarding the quality of education of the national population",Not relevant,,,,,https://link.springer.com/content/pdf/10.1007/978-3-030-53956-6.pdf?pdf=button,,,
19,10.5555/3523760.3523864,Authoring Human Simulators via Probabilistic Functional Reactive Program Synthesis,"One of the core challenges in creating interactive behaviors for social robots is testing. Programs implementing the interactive behaviors require real humans to test and this requirement makes testing of the programs extremely expensive. To address this problem, human-robot interaction researchers in the past proposed using human simulators. However, human simulators are tedious to set up and context-dependent and therefore are not widely used in practice. We propose a program synthesis approach to building human simulators for the purpose of testing interactive robot programs. Our key ideas are (1) representing human simulators as probabilistic functional reactive programming programs and (2) using probabilistic inference for synthesizing human simulator programs. Programmers then will be able to build human simulators by providing interaction traces between a robot and a human or two humans which they can later use to test interactive robot programs and improve or tweak as needed.",tool tech,no,na,no,robot programming,https://dl.acm.org/doi/pdf/10.5555/3523760.3523864,,,
20,10.1109/ISSREW55968.2022.00039,Automated Validation of Insurance Applications against Calculation Specifications,"Insurance companies rely on their Legacy Insurance System (LIS) to govern day-to-day operations. These LIS operate as per the company's business rules that are formally specified in Calculation Specification (CS) sheets. To meet ever-changing business demands, insurance companies are increasingly trans-forming their outdated LIS to modern Policy Administration Systems (PAS). Quality Assurance (QA) of such PAS involves manual validation of calculations' implementation against the corresponding CS sheets from the LIS. This manual QA approach is effort-intensive and error-prone, which may fail to detect inconsistencies in PAS implementations and ultimately result in monetary loss. To address this challenge, we propose a novel low-code/no-code technique to automatically validate PAS imple-mentation against CS sheets. Our technique has been evaluated on a digital transformation project of a large insurance company on 12 real-world calculations through 254 policies. The evaluation resulted in effort savings of approximately 92 percent against the conventional manual validation approach.",tool tech,no,NA,NO,busniess automation,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9985149,,,
21,10.1109/ICSE.2019.00043,AutoTap: Synthesizing and Repairing Trigger-Action Programs Using LTL Properties,"End-user programming, particularly trigger-action programming (TAP), is a popular method of letting users express their intent for how smart devices and cloud services interact. Unfortunately, sometimes it can be challenging for users to correctly express their desires through TAP. This paper presents AutoTap, a system that lets novice users easily specify desired properties for devices and services. AutoTap translates these properties to linear temporal logic (LTL) and both automatically synthesizes property-satisfying TAP rules from scratch and repairs existing TAP rules. We designed AutoTap based on a user study about properties users wish to express. Through a second user study, we show that novice users made significantly fewer mistakes when expressing desired behaviors using AutoTap than using TAP rules. Our experiments show that AutoTap is a simple and effective option for expressive end-user programming.",tool tech,yes,yes,no,trigger action programming,https://dl.acm.org/doi/pdf/10.1109/ICSE.2019.00043,,,
22,10.1109/SPW.2019.00036,When Smart Devices Are Stupid: Negative Experiences Using Home Smart Devices,"Household smart devices - internet-connected thermostats, lights, door locks, and more - have increased greatly in popularity. These devices provide convenience, yet can introduce issues related to safety, security, and usability. To better understand device owners' recent negative experiences with widely deployed smart devices and how those experiences impact the ability to provide a safe environment for users, we conducted an online, survey-based study of 72 participants who have smart devices in their own home. Participants reported struggling to diagnose and recover from power outages and network failures, misattributing some events to hacking. For devices featuring built-in learning, participants reported difficulty avoiding false alarms, communicating complex schedules, and resolving conflicting preferences. Finally, while many smart devices support end-user programming, participants reported fears of breaking the system by writing their own programs. To address these negative experiences, we propose a research agenda for improving the transparency of smart devices.",empirical studies,yes,yes,no,iot,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8844630,,,
23,10.1109/TCST.2021.3132662,Battery Dispatching for End Users With On-Site Renewables and Peak Demand Charges - An Approximate Dynamic Programming Approach,"Battery energy storage systems (BESSs) have the potential to reduce end users’ electricity bills by shifting their
grid demand in response to price incentives. Some electricity retailers charge end users for their peak demand in the billing
cycle regardless of the time of occurrence. Yet, using BESSs to reduce demand charges is challenging, since the net demand of
end users can be highly uncertain due to low aggregation and on-site renewable generation. In this article, an approximate
dynamic programming (ADP) methodology is developed to control a BESS to minimize an end user’s electricity bill,
which includes both an energy charge and monthly peak demand charge. To address time-varying uncertainty, the net
demand is modeled using a periodic autoregressive (PAR) model, which is then used to formulate a Markov Decision
Process whose objective is to minimize the sum of energy, peak demand, and battery usage costs. A backward ADP strategy
is developed which is enabled by new closed-form expressions for the probability distribution of the expected stage and
tail costs when a radial basis function (RBF) value function approximation (VFA) is employed. The approach is applied
to real net demand data from a small Australian residential community and compared to two benchmark policies: a lookup
table VFA and a model predictive control (MPC) approach. The results show that the proposed approach reduces the average
monthly peak demand by about 25% (yielding an 8% reduction in the electricity bill), whereas the best-performing benchmark
policy reduced the peak demand by about 17%.",excluded,,,,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9655264,,,
24,10.1145/3563835.3567668,Bridging the Syntax-Semantics Gap of Programming,"Computer programming typically requires people to describe operations in a formally specified textual language. Unfortunately, working with syntax is a significant cognitive load, making programming difficult for beginners and time-consuming for professional developers. In response to this, contemporary research often focuses on abstracting or improving the process of composing code. We believe, however, that one fundamental reason why programming is difficult is the disconnect between the symbols and metaphors used in code and the mechanics they represent. Programming languages use abstractions whose superficial similarities to natural language neither effectively help users understand programs nor enable them to work creatively. To tackle this fundamental limitation, this paper introduces a new language based on a novel programming-by-demonstration paradigm that (i) enables users to experiment and test their programs, (ii) allows describing complex operations without the need to learn any syntax, and (iii) always displays an approximation of the program state while programming a new operation. We explain the rationales behind our new approach and present our design and implementation using illustrative examples and a supplemental video recording.",tool tech,no,NA,NO,PROGRAMMING,https://dl.acm.org/doi/pdf/10.1145/3563835.3567668,,,
25,10.1145/3472301.3484361,Building an IOT Programming Environment with and for Preschool Children,"Children are exposed to a set of Internet of Things (IOT) devices such as IOToys. Some of these devices are not only for use, but offer possibilities of customization through programming by children. Despite the existence of products and projects aimed at children, the initiatives presented to children of preschool age are generally educational or focused on entertainment and do not consider the possibility that children will control their functioning, programming the behavior of these products. This research aimed at investigating how children from 4 to 6 years old perceive the programming of IOT devices and, from the practice with them, build a prototype of a programming environment for them. To this end, 3 Participatory Design techniques were adapted and applied with 30 children. A final prototype was built and the usability was assessed by an analytical and an empirical method with the participation of 6 children. Lessons learned for the design of these solutions are discussed.","excluded, non english",,,,,https://dl.acm.org/doi/pdf/10.1145/3472301.3484361,,,
26,10.1109/SBGAMES56371.2022.9961073,Building your own games: A platform for authoring digital games,"End-User Development (EUD) solutions is a resource that empowers professionals from different domains to create their tools. However, the design of this type of solution must be well-thought-out so that such professionals can interact with the solution, creating your applications in a simple and intuitive way, without the presence of an IT specialist. Game design and development brings with it the inherent challenges of the media type. When creating a solution to make authoring viable, you should use holistic approaches that bring the target user to the focus of the process. This paper presents a platform for digital authoring games, named RUFUS, created with the precepts of EUD, Organizational Semiotics, and Participatory Design. The platform offers a guided walkthrough for professionals to create their own games. A previous evaluation pointed to the tool's advantages, but also revealed aspects that the tool should improve, such as help and documentation.",tool tech,yes,unspecified,no,Game design,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9961073,,,
27,10.1145/3532512.3535221,Calling Cards: Concrete Visual End-User Programming,"Creating a program that performs even a simple task and shows the result is unapproachable to most people, and even trained programmers face a burden to create a new program. In this paper, we introduce a prototype system and model for live visual dataflow programming where intermediate steps are visible and all components are tangible and manifest. Our system aims to allow a user to dive in and immediately have a working program that can be incrementally extended.",tool tech,no,na,no,programming,https://dl.acm.org/doi/pdf/10.1145/3532512.3535221,,,
28,10.1145/3379337.3415815,CAPturAR: An Augmented Reality Tool for Authoring Human-Involved Context-Aware Applications,"Recognition of human behavior plays an important role in context-aware applications. However, it is still a challenge for end-users to build personalized applications that accurately recognize their own activities. Therefore, we present CAPturAR, an in-situ programming tool that supports users to rapidly author context-aware applications by referring to their previous activities. We customize an AR head-mounted device with multiple camera systems that allow for non-intrusive capturing of user's daily activities. During authoring, we reconstruct the captured data in AR with an animated avatar and use virtual icons to represent the surrounding environment. With our visual programming interface, users create human-centered rules for the applications and experience them instantly in AR. We further demonstrate four use cases enabled by CAPturAR. Also, we verify the effectiveness of the AR-HMD and the authoring workflow with a system evaluation using our prototype. Moreover, we conduct a remote user study in an AR simulator to evaluate the usability.",tool tech,yes,unspecified,no,AR programming,https://dl.acm.org/doi/pdf/10.1145/3379337.3415815,,,
29,10.1109/ACCESS.2022.3227093,CATtalk: An IoT-Based Interactive Art Development Platform,"Interactive art has been significant advanced by the Internet of Things (IoT) and cyber physical interaction technologies, which enables the participants to engage with the art devices. Several tools and platforms have been proposed to create the art devices. However, the interactive artworks are typically developed with these art devices in ad hoc approaches, and the artists need to spend significant programming efforts to integrate the art devices. This paper proposes CATtalk, a platform to create and maintain interactive artworks. The novel idea is to treat all art devices in an interactive artwork as IoT devices that can be transparently reused by reconfiguration in CATtalk. Therefore, the artworks developed independently by individual artists can be quickly integrated to create new interactive applications. Through CATtalk’s no-code and low-code mechanisms, the artists can manipulate CATtalk with little or no programing efforts. CATtalk offers a built-in mechanism so that any person in the audience can play with an interactive artwork with his/her smartphone. We also conduct analytic analysis, simulation and measurements to ensure that the interactive art performance in cross-country remote stages are not affected by the communications delays. In our measurements, the average local and remote communication delays are about 0.01 and 0.05 seconds, respectively. If the art performance is designed such that the average delay between two actions of a local (remote) performer is longer than 0.1 seconds, then the probability of out-of-sequence actions is less than 0.01%. That is, the local dancer should perform slower than the remote dancer. Such delay analysis for remote interactive art performance has not been conducted in the literature.",tool tech,no,na,no,"iot, art",https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9970740,,,
30,,Celonis Studio - A Low-Code Development Platform for Citizen Developers,"Low-code development platforms (LCDPs) are attracting considerable interest because they
promise shorter development cycles, the inclusion of business knowledge in the development
process, and closing of talent gap in software development by citizen developers. With an evergrowing pressure on companies to accelerate their digital transformation, the next decade is
likely to witness a considerable rise in LCDPs for business applications. Especially in process
mining, close alignment between development and domain expertise is critical for success. The
aim of this demo paper is to introduce the Celonis Studio, a recently launched LCDP that
enables citizen developers to build, deploy, and maintain analytical and operational process
mining applications in one centralized space. In addition to the Studio, we also share best
practices that have been identified through the launch of Celonis Studio for empowering citizen
developers.",Excluded because it is doctoral symposium,,,,,https://ceur-ws.org/Vol-2973/paper_260.pdf,,,
31,10.1145/3417990.3420204,Challenges & Opportunities in Low-Code Testing,"Low-code is a growing development approach supported by many platforms. It fills the gap between business and IT by supporting the active involvement of non-technical domain experts, named Citizen Developer, in the application development lifecycle.Low-code introduces new concepts and characteristics. However, it is not investigated yet in academic research to point out the existing challenges and opportunities when testing low-code software. This shortage of resources motivates this research to provide an explicit definition to this area that we call it Low-Code Testing.In this paper, we initially conduct an analysis of the testing components of five commercial Low-Code Development Platforms (LCDP) to present low-code testing advancements from a business point of view. Based on the low-code principles as well as the result of our analysis, we propose a feature list for low-code testing along with possible values for them. This feature list can be used as a baseline for comparing low-code testing components and as a guideline for building new ones. Accordingly, we specify the status of the testing components of investigated LCDPs based on the proposed features. Finally, the challenges of low-code testing are introduced considering three concerns: the role of citizen developer in testing, the need for high-level test automation, and cloud testing. We provide references to the state-of-the-art to specify the difficulties and opportunities from an academic perspective. The results of this research can be used as a starting point for future research in low-code testing area.",empirical studies,NO,NA,NO,testing,https://dl.acm.org/doi/pdf/10.1145/3417990.3420204,,,
32,10.1007/978-3-031-16947-2_1,Challenges of Low-Code/No-Code Software Development: A Literature Review,"Low-code/no-code software development is an emerging approach delivering the opportunity to build software with a minimal need for manual coding and enhancing the involvement of non-programmers in software development. Low-code principles allow enterprises to save time and costs through a more rapid development pace and to improve software products quality by bringing closer together business and information technologies as well as promoting automation. Nevertheless, the low-code/no-code approach is a relatively new and continuously progressing domain that requires understanding of existing challenges and identification of improvement directions. In this paper, challenges in the low-code software development process and suggestions for their mitigation are identified and amalgamated with the purpose to deliver insights into the current state of the low-code/no-code development process and identify areas for further research and development.",Access issue,,,,,https://www.researchgate.net/publication/363569062_Challenges_of_Low-CodeNo-Code_Software_Development_A_Literature_Review,,,
33,10.1109/ACCESS.2021.3051043,Characterizing Visual Programming Approaches for End-User Developers: A Systematic Review,"Recently many researches have explored the potential of visual programming in robotics, the Internet of Things (IoT), and education. However, there is a lack of studies that analyze the recent evidence-based visual programming approaches that are applied in several domains. This study presents a systematic review to understand, compare, and reflect on recent visual programming approaches using twelve dimensions: visual programming classification, interaction style, target users, domain, platform, empirical evaluation type, test participants' type, number of test participants, test participants' programming skills, evaluation methods, evaluation measures, and accessibility of visual programming tools. The results show that most of the selected articles discussed tools that target IoT and education, while other fields such as data science, robotics are emerging. Further, most tools use abstractions to hide implementation details and use similar interaction styles. The predominant platforms for the tools are web and mobile, while desktop-based tools are on the decline. Only a few tools were evaluated with a formal experiment, whilst the remaining ones were evaluated with evaluation studies or informal feedback. Most tools were evaluated with students with little to no programming skills. There is a lack of emphasis on usability principles in the design stage of the tools. Additionally, only one of the tools was evaluated for expressiveness. Other areas for exploration include supporting end users throughout the life cycle of applications created with the tools, studying the impact of tutorials on improving learnability, and exploring the potential of machine learning to improve debugging solutions developed with visual programming.",LITERATURE REVIEW,NO,NA,NO,VISUAL PROGRAMMING,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9320477,,,
34,10.1007/978-3-030-05940-8_31,Citizen Engagement and Entrepreneurship: Implications for Sustainable Tourism Development,"Research has not investigated the use of competitions-hackathons as a citizen engagement tool to motivate and activate citizen’s engagement in entrepreneurship driving sustainable tourism development. This paper fills in this gap by using the SHARE Challenge as a case study. SHARE is a competition-based crowdsourcing project launched by the Government of South Australia aiming to engage citizens in sharing economy entrepreneurial ventures. The competition received 88 eligible ideas from different stakeholders, and the study conducted a content analyses of these ideas for investigating the profile of the citizens and the type of the sharing economy ideas that were inspired by the SHARE. Tourism was found to be the sector attracting most of the submitted ideas for starting-up a sharing economy entrepreneurial venture aiming to make sustainable use of tourism resources. The findings provide evidence on how SHARE has ‘educated’, inspired, and activated the citizens to engage in sustainable entrepreneurship.",Excluded (not relevant),,,,,https://www.researchgate.net/publication/329685931_Citizen_Engagement_and_Entrepreneurship_Implications_for_Sustainable_Tourism_Development_Proceedings_of_the_International_Conference_in_Nicosia_Cyprus_January_30-February_1_2019,,,
35,10.1080/02681102.2020.1756730,Citizen-centric capacity development for ICT4D: the case of continuing medical education on a stick,"The imbalance of the health workforce between rural and urban has the most severe impact in low-income countries (LICs). Lack of professional development opportunities, such as Continuing Medical Education (CME), is one of the key elements in this disparity. This research first presents a revised Citizen-centric Capacity Development (CCD) framework that focuses on goaldriven ICT solution design and impact assessment. It then investigates how the CCD framework guides the design, development, and assessment of CMES (CME on a Stick), a low-cost, integrative platform for the delivery of CME content to rural health workers in LICs. The success of the CMES project highlights the significance of the CCD framework in creating design artifacts that are contextually relevant, broadly scalable, and technologically sustainable. The research contributes not only to the theoretical knowledge of linking ICT interventions and development goals, but also the practical knowledge of ICT-based human capacity building in LICs.",Excluded (not relevant),,,,,https://www.researchgate.net/publication/341133184_Citizen-centric_capacity_development_for_ICT4D_the_case_of_continuing_medical_education_on_a_stick,,,
36,10.1145/3325112.3325236,Citizen-centric Smart City Development: The Case of Smart Dubai's Happiness Agenda,"Developing a “smart city” can follow numerous pathways. Policymakers can follow a technology-focused pathway, a data-driven approach or an environmentally-influenced perspective, among many others. However, following a people-centric smart city developmental path requires a societal approach that involves public engagement and participation as a core developmental philosophy. This requires the city to develop the capacity to widely measure wellbeing and the state of “happiness”, and respond through its public policy frameworks. City-wide innovations using societal big data are making such engagements feasible today. The case of Dubai's “Happiness Agenda” is an example of a smart city initiative that applies a hybrid of big data-driven tools and more traditional approaches in citizen-government interactions. Dubai's transformation plan, is primarily fueled by digital technology and data, with a core focus on public “happiness” and making Dubai one of the “happiest” places to live — as stated in the vision of Smart Dubai Office. Within the smart city framework, such vision entails the challenge of shaping happiness into national policy goals and employing digital technology to apply this vision. This paper reports the findings of semi-structured interviews with the people behind the design of Dubai's Happiness Agenda. The findings highlight the challenges and enablers of developing a people-centric developmental pathway towards “happiness” in the age of big data and smart cities. Even when a positive view towards citizen-engagement exists in government, how can the smart city stakeholders reach a unified definition for happiness in the digital age? How can big data enable the mapping of various needs of a cosmopolitan and culturally diverse society? This paper provides an exploratory case study of citizen-centric and data-driven smart city development initiative, which can provide valuable policy lessons to smart city policymakers and enrich the smart city and e-participation literature.1",Excluded (not relevant),,,,,https://www.researchgate.net/publication/333790665_Citizen-centric_Smart_City_Development_The_Case_of_Smart_Dubai's_Happiness_Agenda,,,
37,10.1145/3487553.3524848,Citizens as Developers and Consumers of Smart City Services: A Drone Tour Guide Case,"The trend of urbanization has started over two centuries ago and is no longer limited to high-income countries. As a result, city population growth has led to the emergence of applications that manage complex processes within cities by utilizing recent technological advances, thereby transforming them into smart cities. Besides automating complex processes within a city, technology also enables a simplified integration of citizens into identifying problems and creating corresponding solutions. This paper discusses an approach that enables citizens to design and later execute their own services within a smart city environment by employing conceptual modeling and microservices. The overall aim is to establish the role of a citizen developer. The proposed approach is then discussed within our proof of concept environment based on a drone tour guide case.",literature review,no,na,no,drone,https://dl.acm.org/doi/pdf/10.1145/3487553.3524848,,,
38,10.1007/978-3-030-64861-9_25,Citizens' Participation as an Important Element for Smart City Development,"
It seems that the smart cities concept is confidently becoming one of the highly exposed current challenges. Undoubtedly, it brings a lot of interest and excitement both among academia and professional researchers since it presents a futuristic project with many intriguing features that will influence the quality of life. The technological aspects of smart cities are quite well researched, while an important issue remains with the acceptance of the technology among individuals. Participation in the projects seems to be one possible solution when it comes to the wider acceptance of the services offered within the smart city. Scholars have already examined different aspects of the participation in smart cities, however, no one has explored and quantified the impact participation would have on overcoming the issues and concerns people feel towards smart cities.

Thus, the main focus of our research is not only to highlight the participation as a possible solution in overcoming well-known issues but also to measure and examine to what extent the participation is a viable solution in terms of changing people’s perspective and attitude towards smart cities, towards services provided in the smart city and towards smart city development. The purpose of our research is, therefore, to examine the actual impact participation has on the perceived issues that are related to smart cities. Using an online questionnaire, we empirically tested the research topic on more than 500 individuals in different countries.",Excluded (not relevant),,,,,https://www.researchgate.net/publication/347652160_Citizens'_Participation_as_an_Important_Element_for_Smart_City_Development,,,
39,10.1145/3313831.3376205,Clinical Documentation as End-User Programming,"As healthcare providers have transitioned from paper to electronic health records they have gained access to increasingly sophisticated documentation aids such as custom note templates. However, little is known about how providers use these aids. To address this gap, we examine how 48 ophthalmologists and their staff create and use content-importing phrases — a customizable and composable form of note template — to document office visits across two years. In this case study, we find 1) content-importing phrases were used to document the vast majority of visits (95%), 2) most content imported by these phrases was structured data imported by data-links rather than boilerplate text, and 3) providers primarily used phrases they had created while staff largely used phrases created by other people. We conclude by discussing how framing clinical documentation as end-user programming can inform the design of electronic health records and other documentation systems mixing data and narrative text.",EMPIRICAL STUDIES,YES,yes,no,programming,https://dl.acm.org/doi/pdf/10.1145/3313831.3376205,,,
40,10.1109/VLHCC.2019.8818950,Code Quality Improvement for All: Automated Refactoring for Scratch,"Block-based programming has been overwhelmingly successful in revitalizing introductory computing education and in facilitating end-user development. However, poor code quality makes block-based programs hard to understand, modify, and reuse, thus hurting the educational and productivity effectiveness of blocks. There is great potential benefit in empowering programmers in this domain to systematically improve the code quality of their projects. Refactoring--improving code quality while preserving its semantics--has been widely adopted in traditional software development. In this work, we introduce refactoring to Scratch. We define four new Scratch refactorings: Extract Custom Block, Extract Parent Sprite, Extract Constant, and Reduce Variable Scope. To automate the application of these refactorings, we enhance the Scratch programming environment with powerful program analysis and transformation routines. To evaluate the utility of these refactorings, we apply them to remove the code smells detected in a representative dataset of 448 Scratch projects. We also conduct a between-subjects user study with 24 participants to assess how our refactoring tools impact programmers. Our results show that refactoring improves the subjects' code quality metrics, while our refactoring tools help motivate programmers to improve code quality.",tool tech,YES,yes,no,programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8818950,,,
41,10.1109/CIC48465.2019.00011,Collaborative Creation and Training of Social Bots in Learning Communities,"The interaction between instructors and students is one of the key concepts to improve the student's learning process. To personalize learning on a massive scale, social bots can be used as supporting technology. However, their development for virtual learning environments currently requires deep technical knowledge. This leaves learner communities relying on highly-skilled developers to generate and tailor these social bots. Participatory design, end-user development and model-driven principles bear the potential to close this technical gap. In this paper, we propose a model-driven approach for creating social bots. Using our framework, learners can create, train and utilize these for self-hosted virtual learning environments relying on OpenAPI specifications offered, e.g. by Blackboard. We support both retrieval-based bots that react to certain events in predefined ways, as well as generative bots by utilizing open source deep learning technologies. Our first evaluation shows the usefulness of model-driven generation and utilization of social bots. We see the potential of this approach to move the development closer to the actual learner.", tool tech,yes,unspecified,no,web,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8998476,web,,
42,10.1007/978-3-030-22636-7_18,Collaborative Design of Urban Spaces Uses: From the Citizen Idea to the Educational Virtual Development,"The paper is concerned with the design of virtual environments for collaborative design. The interests of citizens are coming to the forefront nowadays with the awareness that a livable city does not only consist of good infrastructure and sustainable energy supply but also citizen input and feedback. The project consists of a transversal research at the intersection between computer science, the teaching of future architects and multimedia engineers and the urban policies of the cities of the future in which citizen participation is fundamental. The hypothesis is based on demonstrating the following two statement: (1) The implementation of virtual gamified strategies in the field of urban design will generate an improvement in citizen participation by being a more dynamic, real and agile collaborative environment thanks to enhanced visual technologies and immersive. (2) Gamified strategies for the understanding of three-dimensional space improve spatial competencies of students generating greater motivation in their use and a degree of satisfaction high. First, we studied the contemporary student profile and better ways of teaching according to it. Second, rehearse and evaluate the teaching of the urban project incorporating collaborative design, immersive ICTs, gamification and citizen participation. Third, the data obtained from the quantitative assessment, exemplify the role and use of technologies, in the educational processes to improve the students’ motivation, involvement and way of learning.",EMPIRICAL STUDIES,YES,yes,no,programming,https://www.researchgate.net/publication/334367468_Collaborative_Design_of_Urban_Spaces_Uses_From_the_Citizen_Idea_to_the_Educational_Virtual_Development,No access for Sruti,try this link:                                             https://link.springer.com/chapter/10.1007/978-3-030-22636-7_18,
43,10.1145/3313831.3376547,Collaborative or Simply Uncaged? Understanding Human-Cobot Interactions in Automation,"Collaborative robots, or cobots, represent a breakthrough technology designed for high-level (e.g. collaborative) interactions between workers and robots with capabilities for flexible deployment in industries such as manufacturing. Understanding how workers and companies use and integrate cobots is important to inform the future design of cobot systems and educational technologies that facilitate effective worker-cobot interaction. Yet, little is known about typical training for collaboration and the application of cobots in manufacturing. To close this gap, we interviewed nine experts in manufacturing about their experience with cobots. Our thematic analysis revealed that, contrary to the envisioned use, experts described most cobot applications as only low-level (e.g. pressing start/stop buttons) interactions with little flexible deployment, and experts felt traditional robotics skills were needed for collaborative and flexible interaction with cobots. We conclude with design recommendations for improved future robots, including programming and interface designs, and educational technologies to support collaborative use.",EMPIRICAL STUDIES,YES,yes,no,robot programming,https://dl.acm.org/doi/pdf/10.1145/3313831.3376547,,,
44,10.1109/VL/HCC50065.2020.9127253,Collaborative Visual Programming Workspace for Blockly,"The increasing need for programming tasks performed by non-programmers has resulted in various end-user development tools. In this context, visual programming is currently the prevalent paradigm. However, comprehensive collaboration facilities are missing, although necessary, especially in the domains such as teaching and learning. In this paper, we present an integrated workspace supporting collaborative visual programming. Our system allows end-users to easily cooperate on shared visual programming projects. Peer roles, access and edit privileges for project items are supported. Additional features include: personal project items, toggling live syncing during editing and viewing peer action history. Finally, the workspace’s supported collaboration models are discussed.",Tool tech,no,na,no,programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9127253,,,
45,10.1109/RO-MAN46459.2019.8956315,Combining Interactive Spatial Augmented Reality with Head-Mounted Display for End-User Collaborative Robot Programming,"This paper proposes an intuitive approach for collaborative robot end-user programming using a combination of interactive spatial augmented reality (ISAR) and headmounted display (HMD). It aims to reduce user's workload and to let the user program the robot faster than in classical approaches (e.g. kinesthetic teaching). The proposed approach, where user is using a mixed-reality HMD - Microsoft HoloLens - and touch-enabled table with SAR projected interface as input devices, is compared to a baseline approach, where robot's arms and a touch-enabled table are used as input devices. Main advantages of the proposed approach are the possibility to program the collaborative workspace without the presence of the robot, its speed in comparison to the kinesthetic teaching and an ability to quickly visualize learned program instructions, in form of virtual objects, to enhance the users' orientation within those programs. The approach was evaluated on a set of 20 users using the within-subject experiment design. Evaluation consisted of two pick and place tasks, where users had to start from the scratch as well as to update the existing program. Based on the experiment results, the proposed approach is better in qualitative measures by 33.84% and by 28.46% in quantitative measures over the baseline approach for both tasks.",TOOL tech,yes,unspecified,no,robot programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8956315,,,
46,10.1109/PERCOMW.2019.8730786,ComPOS: Composing Oblivious Services,"Future internet-of-things systems need to be able to combine heterogeneous services and support weak connectivity. In this paper, we introduce ComPOS, a new domain-specific language for composing services in IoT systems. We show how Maria, a bird watcher, can use ComPOS to build a system that allows her to spy on birds in the garden while she is not at home. We demonstrate how ComPOS handles the unpredictable nature of IoT system by analysing in what cases Maria's system is still useful when some devices are unavailable.",Tool tech,no,na,no,IOT,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8730786,,,
47,10.1109/RoSE52553.2021.00008,Considerations for using Block-Based Languages for Industrial Robot Programming - a Case Study,"The paradigm shift triggered by Industry 4.0 leads to a fast rising number of industrial machinery and collaborative robots that increases the need for flexible customization of production processes and automation workflows. End-user programming of industrial robots has become an essential capability for all areas in industry. Consequently, different visual programming languages have found their way into the domain of industrial robot programming. In this paper, we investigate the applicability of block-based programming languages for large and complex robot programs in realistic environments. Here, a key aspect of robot programming is not only the interaction with the physical environment, but also the robot's interaction with other shopfloor participants at the software control level. To this end, we analysed the requirements for programming a robot based a real world production cell and implemented the necessary programming constructs using Blockly, an open-source block-based visual language. We assessed the results comparing the implementation of a change in Blockly and the Sequential Function Chart-based language. We find that while Blockly is able to express large and complex real-world robot programs, a major contributing factor is not just the language itself but the presentation of the robot's run-time environment as well as support by the development environment (i.e., editor). Our preliminary user experiment has identified a set of challenges in understanding and changing such programs that we now plan to follow-up with a larger user study.",empirical studies,yes,unspecified,no,robot programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9474529,,,
48,10.1109/MS.2022.3212033,"Creating a Low-Code Business Process Execution Platform With Python, BPMN, and DMN","How our software development team used an open source Python library and the popular modeling notation, BPMN, to shed light on a set of complex approval processes at a university. In the course of heavily extending the existing library, and developing 100’s of diagrams, we learned many lessons. Here we will provide a brief high-level introduction to BPMN and DMN and cover what we learned about BPMN training for the emerging Citizen Developer role. We will also discuss the benefits we found in the untraditional combination of BPMN and Python, and close with our current efforts and plans for continued open source development.",tool tech,no,na,no,business automation,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9994228,"Seems like a case study than tool tech?, also seems like a magazine article than full paper",,
49,10.1145/3313831.3376722,"Creating Augmented and Virtual Reality Applications: Current Practices, Challenges, and Opportunities","Augmented Reality (AR) and Virtual Reality (VR) devices are becoming easier to access and use, but the barrier to entry for creating AR/VR applications remains high. Although the recent spike in HCI research on novel AR/VR tools is promising, we lack insights into how AR/VR creators use today's state-of-the-art authoring tools as well as the types of challenges that they face. We interviewed 21 AR/VR creators, which we grouped into hobbyists, domain experts, and professional designers. Despite having a variety of motivations and skillsets, they described similar challenges in designing and building AR/VR applications. We synthesize 8 key barriers that AR/VR creators face nowadays, starting from prototyping the initial experiences to dealing with the many unknowns during implementation, to facing difficulties in testing applications. Based on our analysis, we discuss the importance of considering end-user developers as a growing population of AR/VR creators, how we can build learning opportunities into AR/VR tools, and the need for building AR/VR toolchains that integrate debugging and testing.",empirical studies,yes,yes,no,AR Programming,https://dl.acm.org/doi/pdf/10.1145/3313831.3376722,,,
50,10.1145/3532512.3539663,Creating New Programming Experiences Inspired by Boxer to Develop Computationally Literate Society,"Boxer suggests a medium that might be used by a computationally literate society. We do not have a computationally literate society, but we do have one where computation is pervasive. Reaching computational literacy will require us to invent media that reach citizens where they are, so that they can use computation for the kinds of tasks envisioned for Boxer. Teaspoon languages are task-specific languages designed to be highly usable. By developing and disseminating Teaspoon languages, we might move towards creating a computationally literate society.",tool tech,no,na,no,programming,https://dl.acm.org/doi/pdf/10.1145/3532512.3539663,"seems like position/opinion paper than really tool/tech, may be also education; also is it relevant? Extended abstract, so skip?",,
51,10.1007/978-3-030-24781-2_8,Cuscus: An End User Programming Tool for Data Visualisation,"We present Cuscus, a tool for data visualisation that is informed by ethnographic fieldwork across different professional sectors. Cuscus allows end-users to create novel visualisations by defining visual properties in a spreadsheet. We also report on user studies in the contexts of data journalism and business analytics, and discuss further extensions to this new interaction paradigm.",tool tech,yes,unspecified,no,programming,https://www.researchgate.net/publication/334189781_Cuscus_An_End_User_Programming_Tool_for_Data_Visualisation,,,
52,10.1145/3534517,Defining Configurable Virtual Reality Templates for End Users,"This paper proposes a solution for supporting end users in configuring Virtual Reality environments by exploiting reusable templates created by experts. We identify the roles participating in the environment development and the means for delegating part of the behaviour definition to the end users. We focus in particular on enabling end users to define the environment behaviour. The solution exploits a taxonomy defining common virtual objects having high-level actions for specifying event-condition-action rules readable as natural language sentences. End users exploit such actions to define the environment behaviour. We report on a proof-of-concept implementation of the proposed approach, on its validation through two different case studies (virtual shop and museum), and on evaluating the approach with expert users.",tool tech,yes,yes,no,virtual reality/AR,https://dl.acm.org/doi/pdf/10.1145/3534517,,,
53,10.1007/978-3-031-20706-8_17,Democratizing Software Development: A Systematic Multivocal Literature Review and Research Agenda on Citizen Development,"Digital skills and competencies, and civic participation based on such skills and competencies (i.e. digital citizenship), are recognised as a challenge for the coming digital society. This paper contends that educational support to develop socially disadvantaged young people’s digital skills and competencies has a positive impact on digital citizenship. Accordingly, findings based on four years of action research among a support group for socially disadvantaged youths in a provincial city in Japan and a discussion of the support’s impact are presented. Our results suggest that such educational support can expand one’s freedom to explore digital technology’s potential, self-determination as an active learner in a digital environment, and space to participate in a digital society as a digital citizen.",literature review(ACCESS ISSUE),,,,,https://link.springer.com/chapter/10.1007/978-3-031-20706-8_17,Access here: https://link.springer.com/epdf/10.1007/978-3-031-20706-8_17?sharing_token=usMTod5P5pM-GRaeG7hbefe4RwlQNchNByi7wbcMAY4Ta5cd_ZQuORiTXXPSwx_7nMHASFdvsyaHSmqkiXHRkeYBx8bRo0r5HgDCI8-sv8DK3xCaAA8bMBgHDMIqqT_wdaaa6Ouxi0xaI-KStmvvM46y_JiqHK7NsKaTOeN1q68%3D,,
54,10.1145/3475964,Design and Deployment of Expressive and Correct Web of Things Applications,"Consumer Internet of Things (IoT) applications are largely built through end-user programming in the form of event-action rules. Although end-user tools help simplify the building of IoT applications to a large extent, there are still challenges in developing expressive applications in a simple yet correct fashion. In this context, we propose a formal development framework based on the Web of Things specification. An application is defined using a composition language that allows users to compose the basic event-action rules to express complex scenarios. It is transformed into a formal specification that serves as the input for formal analysis, where the application is checked for functional and quantitative properties at design time using model checking techniques. Once the application is validated, it can be deployed and the rules are executed following the composition language semantics. We have implemented these proposals in a tool built on top of the Mozilla WebThings platform. The steps from design to deployment were validated on real-world applications.",tool tech,YES,unspecified,no,IOT/WoT,https://dl.acm.org/doi/pdf/10.1145/3475964,,,
55,10.1145/3531706.3536452,Design and Evaluation of AR-Assisted End-User Robot Path Planning Strategies,"Nowadays, robots play an increasingly important role but still usually have to be programmed by highly skilled professionals. Therefore, end-user solutions supporting users in solving (simple) robot programming tasks without expert knowledge are a promising research field. A possibility for these solutions is the inclusion of Augmented Reality (AR) to enable users to work in the robot space, reducing the amount of mentally taxing coordinate space conversions. Approaches for this mainly rely on the waypoint-based robot path programming strategy. To explore an alternative solution, we propose an AR-assisted approach with different possible path-planning strategies, such as drawing paths or selecting single waypoints directly in the real world. This enables end-users without a programming background to program paths for a wheeled mobile robot. They can also see and edit their programmed paths in a Blockly-like representation. Furthermore, we offer AR in-place program simulation and direct building of finished programs to the real robot. We evaluated our approach regarding usability compared to existing non-AR end-user software as well as comparing the two different path-planning strategies to each other. The evaluation showed that our approach is more usable and faster than the conventional method, while the differences between the path-planning methods are more nuanced and show qualities in both versions.",tool tech,YES,unspecified,no,AR Programming/robot,https://dl.acm.org/doi/pdf/10.1145/3531706.3536452,,,
56,10.1109/IIAI-AAI.2019.00065,Development and Evaluation of Chat-bot Systems: The Applications of Citizen Service Procedures,"In this research, we developed Chat-bot systems (CB) to support a major part of citizen services of a city office in Japan. Two experiments were conducted to evaluate the effects of the CB quantitatively one is about the supply-side, and the other is about demand-side of the citizen services procedure. As the result of Experiment#1 of the supply-side, staff-to-staff work variation was reduced much, and no significant deterioration is observed in efficiency and effectiveness even when the city staffs respond to a service area without pre-memorized knowledge. On the other hand in demand-side, Experiment#2 is to evaluate the ability improvement of the citizens in the citizen service preparation through the CB, particularly to diverse citizens. As the result of evaluations, both the completeness and the time for the preparations are much improved by CB of citizen service procedure, because one-by-one information branch in CB is better than the city's Homepage which requires the window scroll for choosing information adapting to themselves.",excluded(not relevant),,,,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8992766,,,
57,,Development and Global Use of a Platform-Independent Mobile App to Enable Citizen-Scientist Data Collection on Mask-Wearing,,excluded(not relevant),,,,,,,,
58,10.1145/3560107.3560203,Development of an algorithm for fixing the citizens' assessments of digital transformation processes based on text analysis,"The paper presents an approach to the detection of social well-being traits through news analysis on topic of digital transformation. The paper describes the key stages of developing methodology for automatic work with texts about the digital transformation of society, based on the machine learning methods and mathematic approaches like Transformers and MCDM. The authors reveal the process of data preprocessing and transformation, describe the characteristics of the news dataset used for training and validating machine learning models and the social media dataset used for evaluating the proposed algorithm, the entity and topic labeling process, the implementation of sentiment analysis and text classification tasks. The paper presents the obtained results and models' metrics: for the text classification task the model gave the result between 76-79% of F1-score, for the sentiment analysis task - 71% of F1-score. The plan of further steps towards developing models of detecting citizens’ assessment of government e-services efficiency is gained.",excluded (not relevant),,,,,https://dl.acm.org/doi/pdf/10.1145/3560107.3560203,,,
59,10.3390/s22134942,DeviceTalk: A No-Code Low-Code IoT Device Code Generation,"The deployment of a client–server-based distributed intelligent system involves application development in both the network domain and the device domain. In the network domain, an application server (typically in the cloud) is deployed to execute the network applications. In the device domain, several Internet of Things (IoT) devices may be configured as, for example, wireless sensor networks (WSNs), and interact with each other through the application server. Developing the network and the device applications are tedious tasks that are the major costs for building a distributed intelligent system. To resolve this issue, a low-code or no-code (LCNC) approach has been purposed to automate code generation. As traditional LCNC solutions are highly generic, they tend to generate excess code and instructions, which will lack efficiency in terms of storage and processing. Fortunately, optimization of automated code generation can be achieved for IoT by taking advantage of the IoT characteristics. An IoT-based distributed intelligent system consists of the device domain (IoT devices) and the network domain (IoT server). The software of an IoT device in the device domain consists of the Device Application (DA) and the Sensor Application (SA). Most IoT LCNC approaches provide code generation in the network domain. Very few approaches automatically generate the DA code. To our knowledge, no approach supports the SA code generation. In this paper, we propose DeviceTalk, an LCNC environment for the DA and the SA code development. DeviceTalk automatically generates the code for IoT devices to speed up the software development in the device domain for a distributed intelligent system. We propose the DeviceTalk architecture, design and implementation of the code generation mechanism for the IoT devices. Then, we show how a developer can use the DeviceTalk Graphical User Interface (GUI) to exercise LCNC development of the device software.",tool tech,NO,NA,NO,IOT,https://www.researchgate.net/publication/361726704_DeviceTalk_A_No-Code_Low-Code_IoT_Device_Code_Generation,,,
60,10.1145/3359852.3359863,Digital Artivism and Collaborative Artistic Practice: Usage in a School Environment as a Citizenship Development Tool,"Digital artivism is an artistic practice with increasing penetration in social media and, consequently, in the lives of the people who connect and interact through them. It is, however, a practice that goes far beyond the creation or dissemination of memes, photographs or remixed videos, and may relate to collective and / or participatory artistic creation. In order to study the effectiveness of the introduction of artivism as a tool for civic development in the school environment, an artistic installation was used, with defined contours in the universe of artivism, populated with intertwining themes - art, environmental and speciesism activism and, consequently, the life of all beings on the planet. Its creation implied the collaboration of several people and its exhibition in school environments, complemented by polls and questionnaires, was also a collaborative work. It is this experience the present article depicts",excluded,,,,,https://dl.acm.org/doi/pdf/10.1145/3359852.3359863,,,
61,10.1080/02681102.2022.2046533,Digital citizen empowerment: A systematic literature review of theories and development models,"Governments worldwide invest heavily in digital initiatives to develop information societies with connected and actively engaged citizens, but problems like lacking sustained engagement and quality of participation still plague them. We undertook a systematised literature review on the Scopus and Web of Science (WoS) databases, covering dispersed literature surrounding Digital Citizen Empowerment (DCE) from the past two decades.Categorising the literature under four thematic categories or strategies of DCE: Digital Activism (DA), Multi-channel Service Delivery (MCSD), Participatory Budgeting (PB), and Deliberative Governance (DG) critical comparative analysis is done. A conceptual model of DCE, covering how theories from different inter-disciplinary areas of political, social, and information science influence the development of information societies and DCE is presented",excluded(not relevant),,,,,https://www.researchgate.net/publication/360670297_Digital_citizen_empowerment_A_systematic_literature_review_of_theories_and_development_models,,,
62,10.1145/3554364.3559137,Diving in the Story: Exploring Tailoring in Narrative Data Visualizations,"End-User Development is a research topic aimed at empowering end-users to tailor their daily applications. With time, many researchers proposed methods, tools, taxonomies, and other approaches to enable the users and the applications to deal with un-predicted demands within software development. As the research developed, researchers started investigating the application of EUD concepts in other fields, such as data visualization. In this context, this study draws attention to the intersection of End-User Development concepts with exploratory narrative data visualization. To drive our investigation, we performed a focus group with data visualization professionals to understand how designers could employ narrative concepts and exploratory resources to allow readers to customize their story experience within the narrative. To analyze our findings, we use the semiotic engineering for End-User Development. As a result, we present this analysis and drive design implications for narrative data visualizations with customizable facilities.",empirical studies,yes,unspecified,no,data visualization,https://dl.acm.org/doi/pdf/10.1145/3554364.3559137,,,
63,10.1145/3453483.3454046,DIY Assistant: A Multi-Modal End-User Programmable Virtual Assistant,"While Alexa can perform over 100,000 skills, its capability covers only a fraction of what is possible on the web. Individuals need and want to automate a long tail of web-based tasks which often involve visiting different websites and require programming concepts such as function composition, conditional, and iterative evaluation. This paper presents DIYA (Do-It-Yourself Assistant), a new system that empowers users to create personalized web-based virtual assistant skills that require the full generality of composable control constructs, without having to learn a formal programming language. With DIYA, the user demonstrates their task of interest in the browser and issues a few simple voice commands, such as naming the skills and adding conditions on the action. DIYA turns these multi-modal specifications into voice-invocable skills written in the ThingTalk 2.0 programming language we designed for this purpose. DIYA is a prototype that works in the Chrome browser. Our user studies show that 81% of the proposed routines can be expressed using DIYA. DIYA is easy to learn, and 80% of users surveyed find DIYA useful.",tool tech,yes,unspecified,no,voice assistant,https://dl.acm.org/doi/pdf/10.1145/3453483.3454046,,,
64,10.1145/3405755.3406140,Don't Believe The Hype! White Lies of Conversational User Interface Creation Tools,"Following the initial hype and high expectations of conversational user interfaces (CUIs), a number of creation tools have emerged to simplify development of these complex systems. These have the potential to democratise and expand application development to those without programming skills. However, while such tools allow end-user developers to build language understanding and dialog management capability into a CUI application, actually fulfilling or executing an action still requires programmatic API integration. In this paper, we look at how CUI builders that claim to be no code required struggle to yield more than toy examples, with an aim to provoke the community to develop better tools for CUI creation.",literature review (grey litt. review though),no,na,no,CUI tools,https://dl.acm.org/doi/pdf/10.1145/3405755.3406140,,,
65,10.1109/CBI54897.2022.00028,Drivers and Inhibitors of Low Code Development Platform Adoption,"When done right, the use of low code development promises a significant competitive advantage in the software development process for organizations. Thus, multiple vendors have created low code development platforms to ease the use of low code development. However, current research on low code development platforms mainly focuses on the technological aspects of the platforms but not on their adoption. Hence, it remains unclear what drives and inhibits the adoption of low code development platforms. We conducted a literature review and identified thirteen factors that inhibit the adoption and seven factors that drive it. We structure these factors along with the diffusion of innovation framework that helps to disentangle drivers and inhibitors. As a result, we provide an initial explanation of the adoption of low code development platforms. Nevertheless, we conclude that existing research on the adoption of low code development platforms is not specific enough to understand the phenomenon substantially. Further, for some factors (e.g., cost), there is a disagreement in the academic literature on whether they are drivers or inhibitors. Hence, we identify gaps and derive avenues for future research.",literature review,no,na,no,EUP,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9944731,,,
66,10.1145/3531073.3535251,EMPATHY: 3rd International Workshop on Empowering People in Dealing with Internet of Things Ecosystems,"Nowadays, when dealing with Internet of Things (IoT) for people with no prior experience in programming or in designing technology, End-User Development (EUD) solutions offer wide and powerful approaches to support end-users in designing their own IoT smart things and systems. The main goal of this edition of the workshop is to encourage and stimulate a wealthy confrontation on heterogeneous topics related to EUD for IoT applications that exploits different interaction paradigms and innovative interface design. The outcome of the workshop are thought-provoking contributions that range from accessibility and security for IoT systems and devices up to personalization of smart objects.",excluded (not relevant because it provide us the detail of workshop in italy ),,,,,https://dl.acm.org/doi/pdf/10.1145/3531073.3535251,,,
67,10.1145/3399715.3400870,EMPATHY: Empowering People in Dealing with Internet of Things Ecosystems (Workshop),"The Internet of Things is a pervasive technology widely adopted in several contexts ranging from smart homes to automotive cars. In this context, the End User Development is gaining momentum: different solutions support non-technical users to define the smart objects behavior to better satisfy their needs. This workshop aimed to stimulates participants in providing discussions in line with the workshop themes and goals, for example, user mental models, acceptance of EUD solutions, the role of AI in EUD tools, humanoid robots were discussed.",excluded (not relevant because it provide us the detail of workshop in italy ),,,,,https://dl.acm.org/doi/pdf/10.1145/3399715.3400870,,,
68,10.24251/HICSS.2022.575,"Empower the Workforce, Empower the Company? Citizen Development Adoption","IT departments today face a substantial backlog of business innovation-related activities and struggle with a shortage of software developers. Low-code development platforms can help solve these issues by using technology to empower end-users without programming background to participate in the software development process. This trend is referred to as “citizen development.” Through six case studies, this study advances our understanding of the factors that influence organizational citizen development adoption decisions. We use an extended technology–organization–environment (TOE) framework, which enhances the explanatory power of the base TOE framework. Our results show that multiple risk perceptions, active top management support, project-based business-IT alignment, centralized IT governance, and business network systems influence organizational citizen development adoption decisions. Based on the results, we discuss academic and practical implications and suggestions for future research.",empirical studies,yes,unspecified,no,automation,https://www.researchgate.net/publication/357741848_Empower_the_Workforce_Empower_the_Company_Citizen_Development_Adoption,,,
69,10.1145/3526114.3558530,Empowering Domain Experts to Author Valid Statistical Analyses,"Reliable statistical analyses are critical for making scientific discoveries, guiding policy, and informing decisions. To author reliable statistical analyses, integrating knowledge about the domain, data, statistics, and programming is necessary. However, this is an unrealistic expectation for many analysts who may possess domain expertise but lack statistical or programming expertise, including many researchers, policy makers, and other data scientists. How can our statistical software help these analysts? To address this need, we first probed into the cognitive and operational processes involved in authoring statistical analyses and developed the theory of hypothesis formalization. Authoring statistical analyses is a dual-search process that requires grappling with assumptions about conceptual relationships and iterating on statistical model implementations. This led to our key insight: statistical software needs to help analysts translate what they know about their domain and data into statistical modeling programs. To do so, statistical software must provide programming interfaces and interaction models that allow statistical non-experts to express their analysis goals accurately and reflect on their domain knowledge and data. Thus far, we have developed two such systems that embody this insight: Tea and Tisane. Ongoing work on rTisane explores new semantics for more accurately eliciting analysis intent and conceptual knowledge. Additionally, we are planning a summative evaluation of rTisane to assess our hypothesis that this new way of authoring statistical analyses makes domain experts more aware of their implicit assumptions, able to author and understand nuanced statistical models that answer their research questions, and avoid previous analysis mistakes.",tool tech,no,na,no,programming,https://dl.acm.org/doi/pdf/10.1145/3526114.3558530,,,
70,PHD THESIS,Enabling End-Users to Create Real-World Robot Applications through Visual Programming Interfaces and Automation,"Interactive robots in human environments have the potential to improve our daily lives by providing education, eldercare, entertainment services, and more. However, creating new applications and behaviors for such robots is complex for many reasons, including the challenges of prototyping and testing. This thesis first presents findings such as user requirements, constraints, and design implications from designing and evaluating two robot applications; information-gathering application for a mobile robot in a university building and customer feedback collection application for hotels. Our goal is to enable non-experts, such as salespeople and designers, to create and explore new robot applications without requiring additional technical expertise. This thesis presents two consecutive field studies for evaluating a non-expert friendly robot programming system for creating socially interactive robots in commercial spaces. Based on these studies, expressing concurrency and modifying low-level behaviors without scarifying ease of use are identified as the two important requirements for interactive robot programming systems. This thesis addresses the identified requirements by presenting (1) concurrency interfaces for block-based visual robot programming and (2) an iterative, corrective feedback-driven program repair approach for adjusting low-level robot behaviors. ConCodeIt! is a framework for identifying programming constructs required to express concurrency. Three representative concurrency interfaces were implemented investigated for a block-based visual robot programming system to assess ease-of-use and expressiveness via a systematic evaluation and a user study. Iterative Bayesian Repair enables programmers or the robot's users to change details that govern a robot's low-level behaviors through interaction feedback. Simulation experiments and a user study demonstrated the effectiveness of improving the fluency of interactive robot behaviors.",excluded phd thesis,,,,,https://www.researchgate.net/publication/345992217_Enabling_End-Users_to_Create_Real-World_Robot_Applications_through_Visual_Programming_Interfaces_and_Automation,,,
71,10.1145/3536220.3558072,Enabling Non-Technical Domain Experts to Create Robot-Assisted Therapeutic Scenarios via Visual Programming,"In this paper, we present a visual programming software for enabling non-technical domain experts to create robot-assisted therapy scenarios for multiple robotic platforms. Our new approach is evaluated by comparing it with Choregraphe, the standard visual programming framework for the often used robotics platforms Pepper and NAO. We could show that our approach receives higher usability values and allows users to perform better in some practical tasks, including understanding, changing and creating small robot-assisted therapy scenarios.",tool tech,yes,unspecified,no,robot programming,https://dl.acm.org/doi/pdf/10.1145/3536220.3558072,,,
72,10.1109/ACCESS.2019.2916142,Enabling Sophisticated Lifecycle Support for Mobile Healthcare Data Collection Applications,"The widespread dissemination of smart mobile devices enables new ways of collecting longitudinal data sets in a multitude of healthcare scenarios. On the one hand, mobile data collection can be accomplished more effectively and quicker compared with validated paper-based instruments. On the other hand, it can increase the data quality significantly and enable data collection in scenarios not covered by existing approaches so far. Previous attempts to utilize smart mobile devices for collecting data in these scenarios, however, often struggle with high costs for developing and maintaining mobile applications, which need to run on a multitude of mobile operating systems. Therefore, in the QuestionSys project, we are developing a generic (i.e., platform-independent) framework for enabling mobile data collection and sensor data integration in healthcare scenarios. The latter, in turn, is addressed by a model-driven approach, which is shown this paper along with the core components of the QuestionSys framework. In particular, it is shown how healthcare experts are empowered to create mobile data collection and sensing applications on their own and with reasonable efforts.",tool tech,yes,unspecified,no,moible application,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8712531,,,
73,10.1145/3308557.3308724,End User Programing of Intelligent Agents Using Demonstrations and Natural Language Instructions,"End-user programmable intelligent agents that can learn new tasks and concepts from users' explicit instructions are desired. This paper presents our progress on expanding the capabilities of such agents in the areas of task applicability, task generalizability, user intent disambiguation and support for IoT devices through our multi-modal approach of combining programming by demonstration (PBD) with learning from natural language instructions. Our future directions include facilitating better script reuse and sharing, and supporting greater user expressiveness in instructions.",tool tech,no,na,no,iot,https://dl.acm.org/doi/pdf/10.1145/3308557.3308724,,,
74,10.1145/3319499.3328236,End-User Composition of Graphical User Interfaces by Composite Pattern,"We present ComPat, an open source visual editor enabling end users to compose graphical user interfaces based on the composite pattern, a common software engineering design pattern: any widget or group of widgets is treated the same way as a single instance of the same type of widget. ComPat exploits a grid of rows and columns, where each cell, regulated by layout constraints, is populated either by direct import of widgets from a palette or by pattern application. In order to compose graphical user interfaces, any portion could be cut, copied, pasted, and treated as a single object thanks to the composite pattern, thus facilitating reusability. Any portion becomes a pattern that can be applied either by direct instantiation or by rewriting. ComPat automatically generates a Java Swing graphical user interface corresponding to the composition and stores its definition in a User Interface Description Language based on a XML Schema.",tool tech,no,na,no,UI DESIGN,https://dl.acm.org/doi/pdf/10.1145/3319499.3328236,,,
75,10.1145/3531073.3531128,End-User Development and Closed-Reading: An Initial Investigation,"In this work, we explore the idea of designing a tool to augment the practice of closed-reading a literary text by employing end-user programming practices. The ultimate goal is to help young humanities students learn and appreciate computational thinking skills. The proposed approach is aligned with other methods of applying computer science techniques to explore literary texts (as in digital humanities) but with original goals and means. An initial design concept has been realised as a probe to prompt the discussion among humanities students and teachers. This short paper discusses the design ideas and the feedback from interviews and focus groups involving 25 participants (10 teachers in different humanities fields and 15 university students in humanities as prospective teachers and scholars).",not relevant,,,,,https://dl.acm.org/doi/pdf/10.1145/3531073.3531128,,,
76,10.5220/0010983200003203,End-user Development for Smart Spaces: A Comparison of Block and Data-flow Programming,"Block and data-flow programming are well-known concepts for enabling end users to visually create their own customized solutions. They both offer comprehensive visual interfaces and are becoming popular within the smart spaces domain. However, there is currently no systematic, comparative evaluation of the two concepts in the domain. In this user study, we implemented two prototypes for block and data-flow programming and compared their performance on typical usage scenarios in common smart spaces. We used a mixed methods approach of quantitative and qualitative analysis to gain an in-depth understanding of the user experience. Our results show that data-flow programming is overall better received by users than block programming and is considered being state-of-the art and visually more appealing. For block programming, our results reveal that participants appreciate the playful character and the feedback provided. Our study contributes to the improvement of block and data-flow solutions in place and discusses aspects relevant to the future advancement of end-user development in smart spaces.",empirical studies,yes, yes,yes,iot,https://www.scitepress.org/Papers/2022/109832/,,,
77,10.1109/PerComWorkshops48775.2020.9156123,End-user development of activity-supporting services for smart homes,"Independent living often requires assistive computing support to be tailored to the specific needs of each older adult. We propose a tool-based approach to allowing caregivers to define services for in-home daily living activities, leveraging their knowledge and expertise on the older adult they care for. This approach consists of two stages: 1) a wizard allows caregivers to define an assistive service, which supports aspects of a daily activity, specific to an older adult; 2) the wizard-generated service is uploaded in an existing smart home platform and interpreted by a dedicated component, carrying out the caregiver-defined service.",tool tech,yes,unspecified,no,iot,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9156123,,,
78,10.1145/3397307,End-User Development of Experience Sampling Smartphone Apps -Recommendations and Requirements,"Professional programmers are significantly outnumbered by end-users of software, making it problematic to predict the diverse, dynamic needs of these users in advance. An end-user development (EUD) approach, supporting the creation and modification of software independent of professional developers, is one potential solution. EUD activities are applicable to the work practices of psychology researchers and clinicians, who increasingly rely on software for assessment of participants and patients, but must also depend on developers to realise their requirements. In practice, however, the adoption of EUD technology by these two end-user groups is contingent on various contextual factors that are not well understood. In this paper, we therefore establish recommendations for the design of EUD tools allowing non-programmers to develop apps to collect data from participants in their everyday lives, known as experience sampling apps. We first present interviews conducted with psychology researchers and practising clinicians on their current working practices and motivation to adopt EUD tools. We then describe our observation of a chronic disease management clinic. Finally, we describe three case studies of psychology researchers using our EUD tool Jeeves to undertake experience sampling studies, and synthesise recommendations and requirements for tools allowing the EUD of experience sampling apps.",empirical studies,yes,yes,no,clinical,https://dl.acm.org/doi/pdf/10.1145/3397307,,,
79,10.1080/0144929X.2021.1921028,End-user development of smart home rules using block-based programming: a comparative usability evaluation with programmers and non-programmers,"The use of Smart Homes has grown considerably in the past decade. Enabling end-users to develop rules to program their homes and devices is very important to empower them. Several studies have analysed trigger-action programming tools, primarily using form-based and data-flow approaches for programming interfaces. This study evaluated the usability of a block-based tool for end-user development of rules to control smart homes and compared the difficulties encountered by non-programmers and programmers. Evaluations involved 10 programmers and 10 non-programmers in Brazil. A thematic analysis of 247 problem instances (80 from programmers and 167 from non-programmers) yielded the following themes, with problems related to condition blocks, action blocks, states and actions, time-related tasks, block configuration and personalisation, information architecture, programming logic, conceptual model of smart homes, simulator and debugging, help and technical problems. Despite most non-programmers being able to experiment with blocks, their task completion rates were significantly lower than programmers. The analysis showed aspects where block-based programming can enhance the use for non-programmers. They also confirmed interaction aspects revealed by previous studies using form-based and data-flow approaches that also occur with block-based programming to design smart home rules, with important contributions to improve end-user development tools for smart homes.",empirical studies,yes,no,no,smart home/iot,https://www.researchgate.net/publication/354327825_End-user_development_of_smart_home_rules_using_block-based_programming_a_comparative_usability_evaluation_with_programmers_and_non-programmers,,,
80,10.1016/j.jss.2018.11.041,"End-user development, end-user programming and end-user software engineering: A systematic mapping study","End-User Development (EUD), End-Programming (EUP) and End-User Software Engineering (EUSE) are three related research fields that study methods and techniques for empowering end users to modify and create digital artifacts. This paper presents a systematic mapping study aimed at identifying and classifying scientific literature about EUD, EUP and EUSE in the time range January 2000–May 2017. We selected 165 papers found through a manual selection of papers from specific conferences, journal special issues, and books, integrated with an automatic search on the most important digital libraries. The answer to our research question was built through a classification of the selected papers on seven dimensions: type of approach, interaction technique, phase in which the approach is adopted, application domain, target use, class of users, and type of evaluation. Our findings suggest that EUD, EUP and EUSE are active research topics not only in Human–Computer Interaction, but also in other research communities. However, little cross-fertilization exists among the three themes, as well as unifying frameworks and approaches for guiding novice designers and practitioners. Other findings highlight trends and gaps related to the analysis’ dimensions, which have implications on the design of future tools and suggest open issues for further investigations.",literature review,no,na,no,EUP,https://www.sciencedirect.com/science/article/pii/S0164121218302577,,,
81,10.1145/3472301.3484332,End-User Highlighted: Featuring Tailorable Systems Development,"Software varies in the domain and has different target users. Also, it is not possible to predict all users' requirements at the system development stage. This situation sheds light on the need to support end-users to adapt their applications to cope with new demands. End-User Development (EUD) is a research area that intends to permit end-users to perform activities beyond application usage. Such activities may involve software tailoring. Considering this, we aim to map EUD towards supporting software with tailoring capabilities. To achieve this goal, we conducted a literature review using a snowballing procedure on the subject, and we found 42 studies in the time range 1997-2020. We analyzed the topic's development in terms of concepts, methodologies to building tailorable software, tools, and we treat issues and implications of tailorable systems development. Finally, we present future works to research and develop tailorable systems based on gaps and opportunities identified.",literature review,no,na,no,EUP,https://dl.acm.org/doi/pdf/10.1145/3472301.3484332,,,
82,10.1007/978-3-030-30281-8_1,End-User Probabilistic Programming,"Probabilistic programming aims to help users make decisions under uncertainty. The user writes code representing a probabilistic model, and receives outcomes as distributions or summary statistics. We consider probabilistic programming for end-users, in particular spreadsheet users, estimated to number in tens to hundreds of millions. We examine the sources of uncertainty actually encountered by spreadsheet users, and their coping mechanisms, via an interview study. We examine spreadsheet-based interfaces and technology to help reason under uncertainty, via probabilistic and other means. We show how uncertain values can propagate uncertainty through spreadsheets, and how sheet-defined functions can be applied to handle uncertainty. Hence, we draw conclusions about the promise and limitations of probabilistic programming for end-users.",empirical studies,yes,unspecified,no,spreadsheet,https://www.researchgate.net/publication/335596608_End-User_Probabilistic_Programming,,,
83,10.1109/VLHCC.2019.8818824,End-User Programmers Repurposing End-User Programming Tools to Foster Diversity in Adult End-User Programming Education,"Efforts to improve diversity in computing have mostly focused on K-12 and university student populations, so there is a lack of research on how to provide these benefits to adults who are not in school. To address this knowledge gap, we present a case study of how a nine-member team of end-user programmers designed an educational program to bring job-relevant computing skills to adult populations that have traditionally not been reached by existing efforts. This team conceived, implemented, and delivered Cloud Based Data Science (CBDS), a data science course designed for adults in their local community in historically marginalized groups that are underrepresented in computing fields. Notably, nobody on the course development team was a full-time educator or software engineer. To reduce the amount of time and cost required to launch their program, they repurposed end-user programming skills and tools from their professions, such as data-analytic programming and reproducible scientific research workflows. This case study demonstrates how the spirit of end-user programming can be a vehicle to drive social change through grassroots efforts.",tool tech,yes,unspecified,no,programming (related to data analysis ),https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8818824,,,
84,10.1145/3531073.3534493,End-User Programming and Math Teachers: An Initial Study,This paper presents a pilot study for an initial assessment of a tangible tool to support end-user programming (EUP) by teachers to facilitate learning mathematics in primary school. The study aimed to explore teachers’ reasoning strategies and mental representations during trigger-action rules composition. The pilot study provided initial insight into the strengths and weaknesses of this approach and useful hints for designing a larger and more robust study,empirircal studies,yes,unspecified,no,trigger action programming,https://dl.acm.org/doi/pdf/10.1145/3531073.3534493,,,
85,10.1007/978-3-030-49904-4_25,End-User Programming Architecture for Physical Movement Assessment: An Interactive Machine Learning Approach,"In this article, we propose an end-user adaptive architecture for movement assessment from RGB videos. Our method allows physiotherapists to add customized exercises for patients from only a few video training examples. The main idea is to take leverage of Deep learning-based pose estimation frameworks to track in real-time the key-body joints from the image data. Our system mimics the traditional physical rehabilitation process, where the therapist guides patients through demonstrative examples, and the patients repeat these examples while the physiotherapist monitors their movements. We evaluate our proposed method on four physiotherapeutic exercises for shoulder strengthening. Results indicate that our approach contributes both to reduce physiotherapist time needed to train the system, and to automatically assess the patients’ movements without direct monitoring from the physiotherapist.",tool tech,yes,unspecified,no,medical ,https://link.springer.com/content/pdf/10.1007/978-3-030-49904-4.pdf?pdf=button%20sticky,,,
86,10.1109/RO-MAN46459.2019.8956327,End-User Programming of Low-and High-Level Actions for Robotic Task Planning,"Programming robots for general purpose applications is extremely challenging due to the great diversity of end-user tasks ranging from manufacturing environments to personal homes. Recent work has focused on enabling end-users to program robots using Programming by Demonstration. However, teaching robots new actions from scratch that can be reused for unseen tasks remains a difficult challenge and is generally left up to robotic experts. We propose iRoPro, an interactive Robot Programming framework that allows end-users to teach robots new actions from scratch and reuse them with a task planner. In this work we provide a system implementation on a two-armed Baxter robot that (i) allows simultaneous teaching of low-and high-level actions by demonstration, (ii) includes a user interface for action creation with condition inference and modification, and (iii) allows creating and solving previously unseen problems using a task planner for the robot to execute in real-time. We evaluate the generalisation power of the system on six benchmark tasks and show how taught actions can be easily reused for complex tasks. We further demonstrate its usability with a user study (N=21), where users completed eight tasks to teach the robot new actions that are reused with a task planner. The study demonstrates that users with any programming level and educational background can easily learn and use the system.",tool tech,yes,unspecified,no,robot programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8956327,,,
87,THESIS,End-user programming of virtual assistant skills and graphical user interfaces,"Virtual assistants give end-users the capability to access their devices and web data using hundreds of thousands of predefined skills. Nonetheless, there is still a long-tail of personal digital tasks that people want to automate. This dissertation explores how end-users can define useful personalized skills without learning any formal programming languages.We empower an end user to create a web-based skill by demonstrating their skill in a web browser using natural language, their mouse, and keyboard. Our tool is the first program-by-demonstration system that  produces programs with control constructs. The system gives the user an easy-to-learn multimodal interface and generates code in a formal programming language which supports parameterization, function invocation, conditionals, and iterative execution.We show that a virtual assistant skill can greatly benefit from having a graphical interface as users can monitor multiple queries simultaneously, re-run skills easily, and adjust settings using multiple modes of interaction. We developed a system that automatically translates a user’s voice command into a reusable skill with a graphical user interface. Unlike the formulaic interfaces generated by previous work, we generate interfaces that are interesting and diverse by using a novel template-based approach. To improve the aesthetics of graphical user interfaces we use a technique called style transfer. We show that the previous formulation of style transfer cannot retain structure in an image, which causes the output result to lack definition and legibility, and renders restyled interfaces not usable. Our purely neural solution captures structure by the uncentered cross-covariance between features across different layers of a convolutional neural network. By minimizing the squared error in the structure between the style and output images,our technology retains structure while generating results with texture in the background, shadow and contrast
in the borders, consistency of design across edges, and an overall cohesiveness to the design. In summary, our system enables end-users to create web-based skills with automatically generated graphical user interfaces.",excluded (phd thesis),,,,,https://www.proquest.com/docview/2457699119?pq-origsite=gscholar&fromopenview=true,,,
88,10.1145/3371382.3378266,End-User Robot Programming Case Study: Augmented Reality vs. Teach Pendant,"The work presents a preliminary experiment aimed for comparing a traditional method of programming an industrial collaborative robot using a teach pendant, with a novel method based on augmented reality and interaction on a high-level of abstraction. In the experiment, three participants programmed a visual inspection task. Subjective and objective metrics are reported as well as selected usability-related issues of both interfaces. The main purpose of the experiment was to get initial insight into the problematic of comparing highly different user interfaces and to provide a basis for a more rigorous comparison, that is going to be taken out.",empirical studies,yes,unspecified,no,robot,https://dl.acm.org/doi/pdf/10.1145/3371382.3378266,,,
89,THESIS,End-user Robot Programming in Cobotic Environments. (Programmation d'un robot par des non-experts),"The increasing presence of robots in industries has not gone unnoticed.Cobots (collaborative robots) are revolutionising industries by allowing robots to work in close collaboration with humans.Large industrial players have incorporated them into their production lines, but smaller companies hesitate due to high initial costs and the lack of programming expertise.In this thesis we introduce a framework that combines two disciplines, Programming by Demonstration and Automated Planning, to allow users without programming knowledge to program a robot.The user constructs the robot's knowledge base by teaching it new actions by demonstration, and associates their semantic meaning to enable the robot to reason about them.The robot adopts a goal-oriented behaviour by using automated planning techniques, where users teach action models expressed in a symbolic planning language.In this thesis we present preliminary work on user experiments using a Baxter Research Robot to evaluate our approach.We conducted qualitative user experiments to evaluate the user's understanding of the symbolic planning language and the usability of the framework's programming process.We showed that users with little to no programming experience can adopt the symbolic planning language, and use the framework.We further present our work on a Programming by Demonstration system used for organisation tasks.The system includes a goal inference model to accelerate the programming process by predicting the user's intended product configuration.",excluded(phd thesis),,,,,https://theses.hal.science/tel-02275084/file/LIANG_2019_archivage.pdf,,,
90,10.1109/ICRA.2019.8793988,End-User Robot Programming Using Mixed Reality,"Mixed Reality (MR) is a promising interface for robot programming because it can project an immersive 3D visualization of a robot's intended movement onto the real world. MR can also support hand gestures, which provide an intuitive way for users to construct and modify robot motions. We present a Mixed Reality Head-Mounted Display (MRHMD) interface that enables end-users to easily create and edit robot motions using waypoints. We describe a user study where 20 participants were asked to program a robot arm using 2D and MR interfaces to perform two pick-and-place tasks. In the primitive task, participants created typical pickand-place programs. In the adapted task, participants adapted their primitive programs to address a more complex pickand-place scenario, which included obstacles and conditional reasoning. Compared to the 2D interface, a higher number of users were able to complete both tasks in significantly less time, and reported experiencing lower cognitive workload, higher usability, and higher naturalness with the MR-HMD interface.",tool tech,yes,unspecified,no,robot programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8793988,,,
91,10.1145/3426428.3426914,End-User Software Customization by Direct Manipulation of Tabular Data,"Customizing software should be as easy as using it. Unfortunately, most customization methods require users to abruptly shift from using a graphical interface to writing scripts in a programming language. We introduce data-driven customization, a new way for end users to extend software by direct manipulation without doing traditional programming. We augment existing user interfaces with a table view showing the structured data inside the application. When users edit the table, their changes are reflected in the original UI. This simple model accommodates a spreadsheet formula language and custom data-editing widgets, providing enough power to implement a variety of useful extensions. We illustrate the approach with Wildcard, a browser extension that implements data-driven customization on the web using web scraping. Through concrete examples, we show that this paradigm can support useful extensions to many real websites, and we share reflections from our experiences using the tool. Finally, we share our broader vision for data-driven customization: a future where end users have more access to the data inside their applications, and can more flexibly repurpose that data as part of everyday software usage.",tool tech,no,na,no,Spreadsheet,https://dl.acm.org/doi/pdf/10.1145/3426428.3426914,,,
92,10.1109/ICSESS54813.2022.9930146,ERP Low-Code Cloud Development,"Constructing ERP business process as required has always been focused by manufacturing enterprises. Nowadays the low-code development is expected to provide an ability to develop ERP systems with high efficiency, using well-established component/service and cloud platform technologies. And nonprofessional staff who understand business can easily participate in ERP development. Any change of ERP process is always driven by that of business requirements. So, requirement-driven business process design was discussed in this paper to implement the ERP low-code development. And a framework was proposed to demonstrate the implementation of such development, in which any change of business requirement was decomposed into that of composing parts, process nodes and the involved cloud services/components.",literature review,no,na,no,erp ,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9930146,,,
93,10.1109/ACCESS.2019.2905619,EUDoptimizer: Assisting End Users in Composing IF-THEN Rules Through Optimization,"Nowadays, several interfaces for end-user development (EUD) empower end users to jointly program the behavior of their smart devices and online services, typically through trigger-action rules. Despite their popularity, such interfaces often expose too much functionality and force the user to search among a large number of supported technologies disposed of confused grid menus. This paper contributes to the EUD with the aim of interactively assisting end users in composing IF-THEN rules with an optimizer in the loop. The goal, in particular, is to automatically redesign the layout of the EUD interfaces to facilitate the users in defining triggers and actions. For this purpose, we define a predictive model to characterize the composition of trigger-action rules on the basis of their final functionality, we adopt different optimization algorithms to explore the design space, and c) we present EUDoptimizer, the integration of our approach in IFTTT, one of the most popular EUD interfaces. We demonstrate that good layout solutions can be obtained in a reasonable amount of time. Furthermore, an empirical evaluation with 12 end users shows evidence that EUDoptimizer reduces the efforts needed to compose trigger-action rules.",tool tech,yes,unspecified,no,trigger action programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8668390,,,
94,10.1145/3526071.3527519,Evaluating PDDL for programming production cells: a case study,"A unique selling point for cyber-physical production system manufacturers becomes the easy with which machines and cells can be adapted to new products and production processes. Adaptations, however, are often done by domain experts without in-depth programming know-how. We investigate in this paper, the implications of using a planning-based approach for using a domain expert's knowledge to control the sequences of a robot and injection molding machine (IMM). We find that current engineering support is insufficient to address testing, understanding, and change impact assessment concerns during the evolution of a PDDL/HDDL domain specification.",tool tech,yes,unspecified,no,robot programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9814833,,,
95,10.1145/3290607.3299069,Exploring Future IoT for Families through End User Development: Applying Do-It-Together Practises to Reveal Family Dynamics in Technology Adoption,"Industry and research increasingly explore opportunities to make our homes smart, e.g. through the Internet of Things (IoT). Technological developments nurture this rise of smart products, seemingly corresponding to households' needs. Yet, these domestic environments remain a complex domain to study or design for. This work explores the understudied complexity of families' needs and values in relation to connected and smart technology, in particular as a multi-user group. By leveraging participatory and do-it-yourself practices, I aim to engage families in discussion - and empower them to externalize and reflect upon their views. As such, I can study their reflective practices to reveal (tacit) understandings and (latent) needs which informs future developments in smart home technologies.",Doctoral Consortium,,,,,,,,
96,10.1007/978-3-030-98388-8_3,Extreme Citizen Science Contributions to the Sustainable Development Goals: Challenges and Opportunities for a Human-Centred Design Approach,"Citizen science has been recognized for its potential to contribute to the UN Sustainable Development Goals in multiple ways (e.g., for defining and monitoring indicators, data production, etc.). In this paper, we focus on Extreme Citizen Science, which includes a set of situated, bottom-up practices, used for environmental monitoring purposes and for recording local indigenous knowledge, mainly in the Global South. Here we present and discuss the human-centered approach that the implementation of extreme citizen science requires, and we identify and discuss the challenges that we face as well as the opportunities that extreme citizen science initiatives can create for contributing to the Sustainable Development Goals.",Excluded (not relevant),,,,,https://www.researchgate.net/publication/359349484_Extreme_Citizen_Science_Contributions_to_the_Sustainable_Development_Goals_Challenges_and_Opportunities_for_a_Human-Centred_Design_Approach,,,
97,10.1145/3543758.3543778,FADER: An Authoring Tool for Creating Augmented Reality-Based Avatars from an End-User Perspective,"Although augmented reality (AR) is becoming more common in our society, there are few specialized end-user tools for appropriate AR content creation. Most tools are focused on creating entire 3D applications or require extensive knowledge in programming and 3D modeling. With reference to End-User Development (EUD), we present a design case study for an end-user-friendly authoring tool that allows domain experts to create individual AR avatars in the field of Human-Food Interaction. After reviewing current approaches and design guidelines, we designed and implemented FADER, a web-based tool for creating AR-based food avatars. Our evaluation shows that playful design fosters immersion, and that abstract placeholders and highly simplified controls empower non-developers to create AR content. Our study contributes to a better understanding of end-user needs and practices during the AR creation process and informs the design of future AR authoring tools.",tool tech,yes,unspecified,no,AR/Virtual reality,https://dl.acm.org/doi/pdf/10.1145/3543758.3543778,,,
98,10.1007/978-3-031-09917-5_11,FAIRification of Citizen Science Data Through Metadata-Driven Web API Development,"Citizen Science (CS) implies a collaborative process to encourage citizens to collect data in CS projects and platforms. Unfortunately, these CS initiatives do not follow metadata nor data-sharing standards, which hampers their discoverability and reusability. To improve this scenario in CS is crucial to consider FAIR (Findability, Accessibility, Interoperability and Reusability) guidelines. Therefore, this paper defines a FAIRification process (i.e. make CS initiatives more FAIR compliant) which maps metadata of CS platforms’ catalogues to DCAT and generates Web Application Programming Interfaces (APIs) for improving CS data discoverability and reusability in an integrated approach. An experiment in a CS platform with different CS projects shows the performance and suitability of our FAIRification process. Specifically, the validation of the DCAT metadata generated by our FAIRification process was conducted through a SHACL standard validator, which emphasises how the process could boost CS projects to become more FAIR compliant.",Excluded (not relevant),,,,,https://www.researchgate.net/publication/361659995_FAIRification_of_Citizen_Science_Data_Through_Metadata-Driven_Web_API_Development,,,
99,10.1145/3526113.3545707,FLEX-SDK: An Open-Source Software Development Kit for Creating Social Robots,"We present FLEX-SDK: an open-source software development kit that allows creating a social robot from two simple tablet screens. FLEX-SDK involves tools for designing the robot face and its facial expressions, creating screens for input/output interactions, controlling the robot through a Wizard-of-Oz interface, and scripting autonomous interactions through a simple text-based programming interface. We demonstrate how this system can be used to replicate an interaction study and we present nine case studies involving controlled experiments, observational studies, participatory design sessions, and outreach activities in which our tools were used by researchers and participants to create and interact with social robots. We discuss common observations and lessons learned from these case studies. Our work demonstrates the potential of FLEX-SDK to lower the barrier to entry for Human-Robot Interaction research.",tool tech(this has participants from different country which are not western),yes,no,no,robot technology,https://dl.acm.org/doi/pdf/10.1145/3526113.3545707,,,
100,10.1145/3532106.3533541,FLEXI: A Robust and Flexible Social Robot Embodiment Kit,"The social robotics market is appealing yet challenging. Though social robots are built few remain on the market for long. Many reasons account for their short lifespan with costs and context-specificity ranking high amount them. In this work, we designed, fabricated, and developed FLEXI, a social robot embodiment kit that enabled unlimited customization, making it applicable for a broad range of use cases. The hardware and software of FLEXI were entirely developed by this research team from scratch. FLEXI includes a rich set of materials and attachment pieces to allow for a diverse range of hardware customizations that ensure the embodiment is appropriate for specific customer/researcher projects. It also includes an open-source end-user programming interface to lower the barrier of robotics access to interdisciplinary teams that populate the field of Human-Robot Interaction. We present an iterative development of this cost-effective kit through the lenses of case studies, conceptual research, and soft deployment of FLEXI in three application scenarios: community-support, mental health, and education. Additionally, we provide in open-access the full list of materials and a tutorial to fabricate FLEXI, making it accessible to any maker space, research lab, or workshop space interested in working with or learning about social robots.",tool tech,no,na,no,robot technology,https://dl.acm.org/doi/pdf/10.1145/3532106.3533541,why not relevant? It is hard but is also software?,updated,
101,10.1145/3450617.3471240,From Brazil: A Forest of Computer Graphics and Interactive Techniques: SIGGRAPH 2021 Retrospective Panel,"This panel is devoted to the history of the deep, diverse, and rich
contributions from Brazil to the global digital culture, from early
Computer Art, the design of the Lua Programming Language to
the use of digital media by contemporary indigenous communities.
The panel has three presentations by key technologists, scholars,
and curators",Excluded (not relevant),,,,,https://dl.acm.org/doi/pdf/10.1145/3450617.3471240,,,
102,10.1145/3342220.3343666,From NoteCards to Notebooks: There and Back Again,"Fifty years since the beginning of the Internet, and three decades of the Dexter Hypertext Reference Model and the World Wide Web mark an opportune time to take stock and consider how hypermedia has developed, and in which direction it might be headed. The modern Web has on one hand turned into a place where very few, very large companies control all major platforms with some highly unfortunately consequences. On the other hand, it has also led to the creation of a highly flexible and nigh ubiquitous set of technologies and practices, which can be used as the basis for future hypermedia research with the rise of computational notebooks as a prime example of a new kind of collaborative and highly malleable applications.",Excluded (not relevant),,,,,https://dl.acm.org/doi/pdf/10.1145/3342220.3343666,"not relevant (and only remotely relevant if any)? It uses computational notebooks as an inspiration, and says new things on the web need to be customizable, but that's only marginal EUP.",updated,
103,10.1109/SBGames54170.2021.00018,Games by End-Users: Analyzing Development Environments,"Digital games are increasingly present in people's lives, especially in younger people's lives. At times, users want to do more than just play games produced by specialized companies, but would also like to customize them or create and play their own games and share them with their friends. Enabling users with no programming knowledge to develop their games raises several challenges, that range from game design to technical aspects. In this paper, our goal was to investigate the following research question “What strategies and constructs do game engines use to allow users with no previous knowledge of programming to create games?”. To do so, we used the Semiotic Inspection Method to analyze two game engines aimed mainly at this audience - GDevelop and Stencyl. As a result, we have identified the main strategies and constructs used in the tools to support game programming by end-users.",empirical studies,no,na,no,gaming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9637526,,,
104,10.1109/AGENTS.2019.8929177,Goal-Oriented Modelling for Virtual Assistants,"Virtual assistants are used in a wide variety of environments by different types of users. Giving users the ability to build and customize virtual assistants' skills and capabilities would enable them to create virtual assistants that can fit the needs of different scenarios. We propose a model for virtual assistants, based on Goal Net, with the aim of empowering users without programming experience to personalize and customize their virtual assistants. Goal Net separates the design of agent mental models from their low-level implementation. Developers contribute to a library of functions which can be used designers to develop functionality for their virtual assistants. The Multi- Agent Development Environment (MADE) is a graphical tool for creating Goal Net agents and allows users to easily deploy their agents for usage without the need to compile code. A case study is performed to show how Goal Net can be used to develop virtual assistant skills. The proposed model provides a foundation for future work, which would involve human computer interaction and natural language processing.",tool tech,no,na,no,virtual assitants,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8929177,Should domain be chatbots or virtual assistants?,updated (voice asstiant),
105,10.1145/3490099.3511161,GridBook: Natural Language Formulas for the Spreadsheet Grid,"Writing formulas on the spreadsheet grid is arguably the most widely practiced form of programming. Still, studies highlight the difficulties experienced by end-user programmers when learning and using traditional formulas, especially for slightly complex tasks. The purpose of GridBook is to ease these difficulties by supporting formulas expressed in natural language within the grid; it is the first system to do so.GridBook builds on a parser utilizing deep learning to understand analysis intents from the natural language input within a spreadsheet cell. GridBook also leverages the spatial context between cells to infer the analysis parameters underspecified in the natural language input. Natural language enables users to analyze data easily and flexibly, to build queries on the results of previous analyses, and to view results intelligibly within the grid—thus taking spreadsheets one step closer to computational notebooks.We evaluated GridBook via two comparative lab studies, with 20 data analysts new only to GridBook. In our studies, there were no significant differences, in terms of time and cognitive load, in participants’ data analysis using GridBook and spreadsheets; however, data analysis with GridBook was significantly faster than with computational notebooks. Our study uncovers insights into the application of natural language as a special purpose programming language for end-user programming in spreadsheets.",tool tech,yes,unspecified,no,spreadsheet,https://dl.acm.org/doi/pdf/10.1145/3490099.3511161,,,
106,10.1145/3334480.3382806,Gridlets: Reusing Spreadsheet Grids,"Spreadsheets allow end users to blend calculations with arbitrary layout and formatting. However, when it comes to reusing groups of formulae along with layout and formatting, spreadsheets provide only limited support. Most users rely on copy and paste, which is easy to learn and use, but maintaining several copies can be tedious and error-prone. We present the concept of Gridlets, an abstraction over calculation and presentation applicable in common use case scenarios. Using the Cognitive Dimensions of Notations framework, we compare Gridlets to copy/paste and sheet-defined functions. We find that Gridlets are consistent with the spreadsheet paradigm, enable users to take advantage of secondary notation, and make common edit operations less viscous and less error-prone.",tool tech,no,na,no,spreadsheet,https://dl.acm.org/doi/pdf/10.1145/3334480.3382806,,,
107,10.1145/3555051.3555070,HelloArduBot: A DSL For Teaching Programming To Incoming Students With Open-Source Robotic (OSR) Projects,"Block-based languages have been used as a facilitator to teach programming to newcomer and end-user programming students. Another alternative is to abstract the programming domain by using educational robots. Such approaches face some challenges. Block-based languages are far different than conventional programming languages, resulting in an abrupt transition between the two paradigms. On the other hand, commercial educational robots are limited to predesigned projects, which bounds students’ creativity. In this work, we propose an intermediate language (between blocks and traditional language that focuses on Arduino, allowing a wide range and student-designed projects. Preliminary results show that our language is simpler than the native Arduino language and that it would be a preferred alternative for beginner students of a computer science undergraduate course.",tool tech,yes,unspecified,no,robot programming,https://dl.acm.org/doi/pdf/10.1145/3555051.3555070,,,
108,10.1145/3569506,Helping Users Debug Trigger-Action Programs,"Trigger-action programming (TAP) empowers a wide array of users to automate Internet of Things (IoT) devices. However, it can be challenging for users to create completely correct trigger-action programs (TAPs) on the first try, necessitating debugging. While TAP has received substantial research attention, TAP debugging has not. In this paper, we present the first empirical study of users' end-to-end TAP debugging process, focusing on obstacles users face in debugging TAPs and how well users ultimately fix incorrect automations. To enable this study, we added TAP capabilities to an existing 3-D smart home simulator. Thirty remote participants spent a total of 84 hours debugging TAPs using this simulator. Without additional support, participants were often unable to fix buggy TAPs due to a series of obstacles we document. However, we also found that two novel tools we developed helped participants overcome many of these obstacles and more successfully debug TAPs. These tools collect either implicit or explicit feedback from users about automations that should or should not have happened in the past, using a SAT-solving-based algorithm we developed to automatically modify the TAPs to account for this feedback.",tool tech,yes,unspecified,no,wot,https://dl.acm.org/doi/pdf/10.1145/3569506,Domain is also IoT / WoT?,updated,
109,10.1145/3369838,HeyTeddy: Conversational Test-Driven Development for Physical Computing,"Physical computing is a complex activity that consists of different but tightly coupled tasks: programming and assembling hardware for circuits. Prior work clearly shows that this coupling is the main source of mistakes that unfruitfully take a large portion of novices' debugging time. While past work presented systems that simplify prototyping or introduce novel debugging functionalities, these tools either limit what users can accomplish or are too complex for beginners. In this paper, we propose a general-purpose prototyping tool based on conversation. HeyTeddy guides users during hardware assembly by providing additional information on requests or by interactively presenting the assembly steps to build a circuit. Furthermore, the user can program and execute code in real-time on their Arduino platform without having to write any code, but instead by using commands triggered by voice or text via chat. Finally, the system also presents a set of test capabilities for enhancing debugging with custom and proactive unit tests. We codesigned the system with 10 users over 6 months and tested it with realistic physical computing tasks. With the result of two user studies, we show that conversational programming is feasible and that voice is a suitable alternative for programming simple logic and encouraging exploration. We also demonstrate that conversational programming with unit tests is effective in reducing development time and overall debugging problems while increasing users' confidence. Finally, we highlight limitations and future avenues of research.",tool tech,yes,no,no,physical computing,https://dl.acm.org/doi/pdf/10.1145/3369838,Domain: to physical computing,updated,
110,10.55612/s-5002-045-010,"Home Smart Home: Approachable Interfaces for Intelligibility, Modification, and End-User Programming","End-user programming concepts are increasingly employed in smart home research to address the growing complexity of controlling smart home environments. Different approaches and visual styles of end-user programming have been proposed and implemented within this context. Smart home control does however not only necessitate end-user programming but also understanding and modifying existing program structures. In this study, we compare three different approaches regarding their suitability for this application context with a specific focus on intelligibility and modification performance. We conducted an empirical study with 39 users performing three types of tasks (understanding, configuring, and programming), using three different approaches for end-user programming (form-filling, data-flow, and grid-canvas). The results of our study found no significant differences regarding the intelligibility of the three different implementations but clear differences in the subjective preference of users as well as configuration and programming performance.",empirical studies,yes,unspecified,no,iot,https://www.researchgate.net/publication/345240713_Home_Smart_Home_Approachable_Interfaces_for_Intelligibility_Modification_and_End-User_Programming,,,
111,10.1007/978-3-031-21707-4_25,How Can No/Low Code Platforms Help End-Users Develop ML Applications? - A Systematic Review,"With the increasing popularity of machine learning, the demand for users to develop machine learning applications has grown rapidly, which brings about a rising growth for end-user development (EUD) method research. Based on previous works, EUD can be roughly divided into two categories: methods with coding and without coding (i.e. no-code). In recent years, no-code and low-code methods have become the mainstream EUD methods that have been widely concerned by the education and business community, due to their low technical barriers. However, there lacks a comprehensive summary of existing research to answer some fundamental questions, such as: How can no/low-code platform help end-users develop ML applications? what are their effects, design methods, and user experience? This paper answers the above questions through a systematic literature review. Two experienced researchers carefully read, coded, analyzed, and checked the literature by using MAXQDA, the results showed:

1. No-code or low-code tools can already support the development pipeline of ML applications that traditionally requires coding. 2. No-code or low-code methods are preferred by users. 3. For design purposes, the visual development method is the most commonly used form, especially in the field of education. 4. In terms of interactive experience, a few design principles were recognized from the reviewed pieces of literature, including the interactive process should provide a low threshold, high ceiling, and wide walls; the information architecture should meet the mental model of the novice user's cognitive process; the platform functions should support rapid prototyping, iterations, and timely feedbac",literature review,no,na,no,ML,https://link.springer.com/chapter/10.1007/978-3-031-21707-4_25,How empirical studies? This one says systematic litt. review,updated( but have doubt it come in acategory mid of emperical study and literature review,
112,10.1145/3290605.3300782,How Users Interpret Bugs in Trigger-Action Programming,"Trigger-action programming (TAP) is a programming model enabling users to connect services and devices by writing if-then rules. As such systems are deployed in increasingly complex scenarios, users must be able to identify programming bugs and reason about how to fix them. We first systematize the temporal paradigms through which TAP systems could express rules. We then identify ten classes of TAP programming bugs related to control flow, timing, and inaccurate user expectations. We report on a 153-participant online study where participants were assigned to a temporal paradigm and shown a series of pre-written TAP rules. Half of the rules exhibited bugs from our ten bug classes. For most of the bug classes, we found that the presence of a bug made it harder for participants to correctly predict the behavior of the rule. Our findings suggest directions for better supporting end-user programmers.",empirical studies,yes,unspecified,no,trigger action programming,https://dl.acm.org/doi/pdf/10.1145/3290605.3300782,,,
113,10.1007/978-3-030-64619-6_17,IFTTT Rely Based a Semantic Web Approach to Simplifying Trigger-Action Programming for End-User Application with IoT Applications,"Programming environments for End-User Development in the Internet of Things (IoT) allow end-users to customize the joint behavior of their IoT objects, typically through trigger-action rules. Unfortunately, they mainly adopt highly technology-dependent models, i.e., they often categorize devices and services by manufacturers or brands. An example of how such low-level of abstraction could be overcome is EUPont, an ontological model to provide an abstract and technology-independent representation for IoT end-user programming environments. In this paper, we show how EUPont could improve the rule composition process, and we evaluate its expressiveness by presenting an automated translation procedure of 290,963 rules shared on the IFTTT programming environment. Results show that EUPont improves the rule composition process for end-users in terms of correctness and needed time. Furthermore, the evaluation confirms that the model is more expressive than the one adopted by IFTTT, one of the most common solutions in this field.",tool tech,no ,na,no,iot,https://link.springer.com/chapter/10.1007/978-3-030-64619-6_17,Access copy at: https://iris.polito.it/bitstream/11583/2691911/1/programming_the_iot-postprint.pdf,updated,
114,10.1109/HCCAI49649.2020.00018,Intelligent Assistance for End-Users in creating Point and Click Games Storylines,"In this paper, we present an intelligent support End-User Developers (EUDevs) in creating plot lines for Point and Click games on the web. We introduce a story generator and the associated user interface, which help the EUDev in defining the game plot starting from the images providing the game setting. Such suggestions can be further developed by the EUDev, modifying the generated text and saving the result. The interface supports the control of different parameters of the story generator using a user-friendly vocabulary. The results of a user study show good effectiveness and usability of the proposed interface.",tool tech,yes,unspecified,no,game programing,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9230421,,,
115,10.1109/MODELS-C53483.2021.00024,Interactive Behavior-driven Development: a Low-code Perspective,"Within behavior-driven development (BDD), different types of stakeholders collaborate in creating scenarios that specify application behavior. The current workflow for BDD expects non-technical stakeholders to use an integrated development environment (IDE) to write textual scenarios in the Gherkin language and verify application behavior using test passed/failed reports. Research to date shows that this approach leads non-technical stakeholders to perceive BDD as an overhead in addition to the testing. In this vision paper, we propose an alternative approach to specify and verify application behavior visually, interactively, and collaboratively within an IDE. Instead of writing textual scenarios, non-technical stakeholders compose, edit, and save scenarios by using tailored graphical interfaces that allow them to manipulate involved domain objects. Upon executing such interactively composed scenarios, all stakeholders verify the application behavior by inspecting domain-specific representations of run-time domain objects instead of a test run report. Such a low code approach to BDD has the potential to enable nontechnical stakeholders to engage more harmoniously in behavior specification and validation together with technical stakeholders within an IDE. There are two main contributions of this work: (i) we present an analysis of the features of 13 BDD tools, (ii) we describe a prototype implementation of our approach, and (iii) we outline our plan to conduct a large-scale developer survey to evaluate our approach to highlight the perceived benefits over the existing approach.",excluded(not relevant),,,,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9643783,"unfilled, but I think it is not relevant. BDD is about professional SE, not EUD.",updated,
116,10.1145/3379337.3415900,Interactive Program Synthesis by Augmented Examples,"Programming-by-example (PBE) has become an increasingly popular component in software development tools, human-robot interaction, and end-user programming. A long-standing challenge in PBE is the inherent ambiguity in user-provided examples. This paper presents an interaction model to disambiguate user intent and reduce the cognitive load of understanding and validating synthesized programs. Our model provides two types of augmentations to user-given examples: 1) semantic augmentation where a user can specify how different aspects of an example should be treated by a synthesizer via light-weight annotations, and 2) data augmentation where the synthesizer generates additional examples to help the user understand and validate synthesized programs. We implement and demonstrate this interaction model in the domain of regular expressions, which is a popular mechanism for text processing and data wrangling and is often considered hard to master even for experienced programmers. A within-subjects user study with twelve participants shows that, compared with only inspecting and annotating synthesized programs, interacting with augmented examples significantly increases the success rate of finishing a programming task with less time and increases users? confidence of synthesized programs.",tool tech,yes,yes,no,programming by example,https://dl.acm.org/doi/pdf/10.1145/3379337.3415900,,,
117,10.1145/3319502.3374784,Interactive Tuning of Robot Program Parameters via Expected Divergence Maximization,"Enabling diverse users to program robots for different applications is critical for robots to be widely adopted. Most of the new collaborative robot manipulators come with intuitive programming interfaces that allow novice users to compose robot programs and tune their parameters. However, parameters like motion speeds or exerted forces cannot be easily demonstrated and often require manual tuning, resulting in a tedious trial-and-error process. To address this problem, we formulate tuning of one-dimensional parameters as an Active Learning problem where the learner iteratively refines its estimate of the feasible range of parameter values, by selecting informative queries. By executing the parametrized actions, the learner gathers the user's feedback, in the form of directional answers (higher,'' lower,'' or fine''), and integrates it in the estimate. We propose an Active Learning approach based on Expected Divergence Maximization for this setting and compare it against two baselines with synthetic data. We further compare the approaches on a real-robot dataset obtained from programs written with a simple Domain-Specific Language for a robot arm and manually tuned by expert users (N=8) to perform four manipulation tasks. We evaluate the effectiveness and usability of our interactive tuning approach against manual tuning with a user study where novice users (N=8) tuned parameters of a human-robot hand-over program.",empirical studies,yes,unspecified,no,robot programming,https://dl.acm.org/doi/pdf/10.1145/3319502.3374784,,,
118,10.1109/MODELS-C53483.2021.00057,IoT Cooking Workflows for End-Users: A Comparison Between Behaviour Trees and the DX-MAN Model,"A kitchen underpinned by the Internet of Things (IoT) requires the management of complex procedural processes. This is due to the fact that when supporting an end-user in the preparation of even only one dish, various devices may need to coordinate with each other. Additionally, it is challenging— yet desirable—to enable an end-user to program their kitchen devices according to their preferred behaviour and to allow them to visualise and track their cooking workflows. In this paper, we compared two semantic representations, namely, Behaviour Trees and the DX-MAN model. We analysed these representations based on their suitability for a range of end-users (i.e., novice to experienced). The methodology required the analysis of smart kitchen user requirements, from which we inferred that the main architectural requirements for IoT cooking workflows are variability and compositionality. Guided by the user requirements, we examined various scenarios and analysed workflow complexity and feasibility for each representation. On the one hand, we found that execution complexity tends to be higher on Behaviour Trees. However, due to their fallback node, they provide more transparency on how to recover from unprecedented circumstances. On the other hand, parameter complexity tends to be somewhat higher for the DX-MAN model. Nevertheless, the DX-MAN model can be favourable due to its compositionality aspect and the ease of visualisation it can offer.",literature review,no,na,no,iot,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9643758,"Looks like empirical study, same reasoning as 104 -- or both should be litt. reviews; We need to talk about this. ",,
119,10.1109/SERP4IoT.2019.00008,IoT End User Programming Models,"The advent of smart devices and sensors (the Internet of Things or IoT) will create increasing demands for the automation of devices based on sensor, time, and other inputs. This is essentially a programming task with all the problems and difficulties that programming entails, for example, modularity, feature interaction, debugging, and understanding. Moreover, much of the programming for smart devices is going to be done not by professional programmers but by end users, often end users without any programming experience or computational literacy. Our research is aimed at exploring the programming space and the associated issues using a case study of a smart sign that can be controlled using a variety of sensors. We have developed a general system for programming smart devices and, in this paper, explore a variety of different user interfaces for programming this system for our smart sign.",tool tech,no,na,no,iot,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8900747,,,
120,10.1109/SMARTCOMP52413.2021.00083,IoT End-User Service Composition via a Visual Programming Interface,"Sensory data generated around us in the context of IoT is huge and heterogeneous. To fully unleash the potential of IoT Open Data there is a need for service infrastructures that facilitate the interaction of users with such data, especially when they are able to customize such services to fit their needs. In this paper we propose to use our tool SenSquare for IoT End-User Service Composition, by presenting its main features and its recent advances towards providing a data historian and importing other services, as well as evaluating the performance of its implementation in parallel.",tool tech,no,na,no,iot,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9556272,,,
121,10.1145/3343055.3360751,ISAR: An Authoring System for Interactive Tabletops,"Despite more than three decades of research in augmented reality and shown positive effect of AR in educational settings, we still don't witness spread of this technology in the schools. Complex technology and limited educational content are among the reasons for this absence. Authoring systems can play a positive role in introduction of AR into the school settings. In this paper we introduce ISAR, a domain-independent authoring system for a camera-projector based interactive tabletop. ISAR allows teachers to create learning content and define interactions for the tabletop themselves, without the need for programming, and hence reduces the entrance barrier of educational practitioners for experimenting with augmented reality and tangible interactions.",tool tech,no,na,no,education,https://dl.acm.org/doi/pdf/10.1145/3343055.3360751,should the domain also be education?,updated,
122,10.1007/978-3-030-76346-6_22,"IT Governance Framework and Smart Services Integration for Future Development of Dubai Infrastructure Utilizing AI and Big Data, Its Reflection on the Citizens Standard of Living","A smart home personal assistant technology is an intrinsic system, which incorporates many elements such as users, Smart Home Personal Assistants (SPA) devices, cloud, skill provider and other responsive devices. Even though Smart Home Personal Assistants give a robust security and privacy options, the devices face many weaknesses, which make the system vulnerable and can be comprised by adversaries, who can capitalize on limitations to gain access to delicate information and privacy of users. In this research, the aim is to assess how invention and innovation of security and SPA can be harnessed by users to interrelate with the system. Subsequently, this write-up will address both the problems related to the system and attempt to bring in solutions, which makes the technology more adaptable and versatile to all users. Initial studies show that some of the weakness underlying the technology include the open-nature of the voice channel, complexity of the architecture, software implications, and the utility of the technology to less proficient users. As a result, the study anticipates at solving the voice squatting attack, using the SPA intelligent assistant, incorporating a filer to filter the ultrasonic attack and noise as well as trying to assess the efficacy of the elements developed against the voice squatting attacks. The study found out that there is a need to mitigate the attacks on the blockchain technology and Natural Language Processors (NLP) to assure protection of SPA from attacks.",excluded (not relevant),,,,,https://www.researchgate.net/publication/357168327_Assessment_of_Smart_Home_Assistants_as_an_IoT,,,
123,10.1145/3526114.3558776,IThem: Programming Internet of Things Beyond Trigger-Action Pattern,"With emerging technologies bringing Internet of Things (IoT) devices into domestic environments, trigger-action programming such as IFTTT with its simple if-this-then-that pattern provides an effective way for end-users to connect fragmented intelligent services and program their own smart home/work space automation. While the simplicity of trigger-action programming can be effective for non-programmers with its straightforward concepts and graphical user interface, it does not allow the algorithmic expressivity that a programming language has. For instance, the simple if-this-then-that structure cannot cover complex algorithms that arise from real world scenarios involving multiple conditions or keeping track of a sequence of conditions (e.g., incrementing counters, triggering one action if two conditions are both true). In this exploratory work, we take an alternative approach by creating a programmable channel between application programming interfaces (APIs), which allows programmers to preserve states and to use them to write complex algorithms. We propose iThem, which stands for intelligence of them—internet of things, that allow programmers to author any complex algorithms that can connect different IoT services and fully unleash the freedom of a general programming language. In this poster, we share the design, development, and ongoing validation progress of iThem, which piggybacks on existing programmable IoT system IFTTT, and which allows for a programmable channel that connects triggers and actions in IFTTT with versatility.",tool tech,no,na,no,iot,https://dl.acm.org/doi/pdf/10.1145/3526114.3558776,,,
124,10.1145/3377325.3380622,IUI4EUD: Intelligent User Interfaces for End-User Development,"End-User Developers program to meet some goal other than the code itself. This includes scientists, data analysts, and the general public when they write code. We have been working for many years on various ways to make end-user development more successful. In this talk, I will focus on two new projects where we are applying intelligent user interfaces to this long-standing challenge. In Sugilite, the user can teach an intelligent agent new skills interactively with the user interfaces of relevant smartphone apps through a combination of programming by example (PBE) and natural language instructions. For instance, a user can teach Sugilite how to order the cheaper car between Uber and Lyft, even though Sugilite has no access to their APIs, no knowledge about the task domain, and no understanding of the concept cheap in advance. Another project, called Verdant, is focusing on helping data scientists, including those using Machine Learning and AI, to do exploratory programming. Verdant supports micro-versioning in computational notebooks for understanding the difference among the output and code of different versions, backtracking, provenance of output to its code, and searching the history. A goal for Verdant is to intelligently organize and summarize the raw history data to help data scientists make effective choices from it.",excluded (resaerch grant request), ,,,,https://dl.acm.org/doi/pdf/10.1145/3377325.3380622,"This is a keynote abstract, not a money request :-)",,
125,10.1145/3290607.3299067,Languages & Visualizations to Enable Effective End User Programming,"Programming requires expertise to employ effectively. My research aims to help end user programmers more effectively author, understand, and reuse code and data through the design of new languages and program visualization tools. New programming languages can raise the level of abstraction to focus on relevant domain-specific details. Improved tools can better align with and enrich end user programmers' mental models. Visualizing program state and behavior promotes program understanding, and can proactively surface surprising or incorrect results. My future work proposes to explore new visualization techniques and languages to facilitate understanding of constraint programming systems.",Doctoral Symposium,,,,,https://dl.acm.org/doi/pdf/10.1145/3290607.3299067,,,
126,10.1145/3290607.3299067,Languages and Visualization Tools for Data-Centric End-User Programming of Interactive Visualization Designs,"Visualizations can facilitate data exploration and communication of insights. While many tools exist to support the design of interactive visualizations, the development process relies heavily on the user's domain and programming expertise. To facilitate interactive visualization design, improved tools should better align with and enrich the user's mental model. This dissertation contributes three projects to help end-user programmers more effectively author, understand, and reuse both code and data to design interactive visualizations. To this end, this dissertation explores (1) the design of customized graph layouts, (2) the development and debugging process for interactive visualizations, and (3) the synchronization and customization of multiple visualization versions for responsive visualization design. Across these projects, this dissertation explores how new techniques that raise the level of abstraction can help users focus on the domain-specific concepts of interest, while deferring low-level implementation details to the underlying system. A crucial step in this process is to identify and communicate actionable information to the end user. To accomplish this goal, this dissertation contributes three sets of formative interviews with potential users to identify unique challenges and design opportunities for the given domain. These interviews illustrate the disconnect between users' expectations and the functionality provided by existing systems or development workflows, and further highlight the types of tangential, low-level information that systems should hide from the user's view to improve the development process. While this information may be useful for completely or accurately representing the program behavior, such details can unnecessarily complicate the program understanding or debugging process. Motivated by these challenges and interviews, this dissertation contributes new programming languages and program visualization tools to better help end-user programmers understand the underlying system behavior. These approaches raise the level of abstraction to reflect the user's unique domain expertise and obfuscate unnecessary system details. To this end, the proposed techniques aim to communicate relevant and actionable information to the user, and better prioritize the user's most important development tasks. This dissertation first contributes SetCoLa: a domain-specific language for custom graph layout that leverages high-level constraints to encode the user's domain knowledge. SetCoLa facilitates code authoring and reuse by reducing the number of user-authored constraints by one to two orders of magnitude. However, the declarative nature of this language requires users to map between their high-level input and the system-produced output to debug or interpret the behavior. To explore the unique challenges and novel solutions for program understanding of declarative languages, this dissertation next turns to Vega: a declarative grammar for interactive visualization design. This dissertation then contributes a series of three projects for program understanding in Vega, which evolve to address the unique development needs of users at different stages in the development process. These techniques support (1) low-level system development via a data flow graph visualization, (2) debugging interactions with visualizations of contextually relevant details, and (3) unobtrusively revealing details of the runtime behavior during both normal execution and debugging. Whereas Vega focuses on the design of a single interactive visualization, responsive visualizations require designers to develop multiple concurrent designs that adapt based on the screen size or interactive capabilities of the end user's device. To support this process, this dissertation contributes four design guidelines and a set of core system features for a responsive visualization design system that supports simultaneous editing and device-specific customizations. For each of these projects, this dissertation further contributes evaluations of this work via user studies or reproductions of real-world examples. The user evaluations demonstrate the utility of the proposed approaches for improving how end users interact with and understand the system functionality, whereas the reproductions illustrate the flexibility and expressiveness of the proposed techniques. Overall, this dissertation aims to better understand people and to help people better understand systems. This dissertation contributes novel techniques to support end-user programmers in developing, understanding, and debugging custom interactive visualization designs, and suggests new avenues for future work.",excluded (phd thesis),,,,,https://digital.lib.washington.edu/researchworks/handle/1773/45922?show=full,,,
127,10.1109/VL/HCC51201.2021.9576449,Linear Programming Meets Block-based Languages,"Linear programming is a mathematical optimization technique used in numerous fields including mathematics, economics, and computer science, with numerous industrial contexts, including solving optimization problems such as planning routes, allocating resources, and creating schedules. As a result of its wide breadth of applications, a considerable amount of its user base is lacking in terms of programming knowledge and experience and thus often resorts to using graphical software such as Microsoft Excel. However, despite its popularity amongst less technical users, the methodologies used by these tools are often ad-hoc and prone to errors. To counteract this problem we propose creating a block-based language that allows users to create linear programming models using data contained inside spreadsheets. This language will guide the users to write syntactically and semantically correct programs and thus aid them in a way that current languages do not.",tool tech,no,na,no,spreadsheet,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9576449,,,
128,10.1145/3469595.3469632,Low-Code from Frontend to Backend: Connecting Conversational User Interfaces to Backend Services via a Low-Code IoT Platform,"Current chatbot development platforms and frameworks facilitate setting up the language and dialog part of chatbots, while connecting it to backend services and business functions requires substantial manual coding effort and programming skills. This paper proposes an approach to overcome this situation. It proposes an architecture with a chatbot as frontend using an IoT (Internet of Things) platform as a middleware for connections to backend services. Specifically, it elaborates and demonstrates how to combine a chatbot developed on the open source development platform Rasa with the open source platform Node-RED, allowing low-code or no-code development of a transactional conversational user interface from frontend to backend.",tool tech,no,na,no,chatbot,https://dl.acm.org/doi/pdf/10.1145/3469595.3469632,,,
129,10.1016/j.ffa.2020.101791,"Low-Code, No-Code, What's Under the Hood?",Low-code and no-code is everywhere. Where does that leave the enterprise-level IT professional? This edition of IT Professional reaffirms the role of the IT professional in a world where enterprise coders are being replaced by “citizen developers.,EXCLUDED (magazine article),,,,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9655393,,,
130,,Low-Code/No-Code Software Development Platforms and Their Uses in Computer Science and Information Technology Education,"Low Code/No-Code (LCNC) software development has gained its share and popularity in today's software development market, especially in cloud-based application development. In addition to companies specializing in LCNC software development such as Appian, OutSystems and Mendix, major cloud service providers, such as Amazon, Microsoft and Google, have all released their LCNC development platforms.",acess issue,,,,,https://dl.acm.org/doi/10.5555/3447080.3447110,,,
131,10.1109/MODELS-C53483.2021.00014,LowCode 2021: 2nd Workshop on Modeling in Low-Code Development Platforms,"Cloud-based low-code development platforms such as Google’s AppSheet, Microsoft’s PowerApps, OutSystems and Mendix have become increasingly popular over the last few years, owing to an increasing demand for bespoke, cost-efficient and reliable data-intensive (e.g., back-office) software solutions. Low-code development platforms are model-driven at their heart. Hence, closer interaction and cross-pollination are highly beneficial for the low-code and model-driven engineering communities. The Low-Code workshop aims to bring together vendors and users of low-code development platforms with model-driven engineering researchers and practitioners and explore opportunities for technology and experience transfer and collaboration between them.",excluded (workshop proposal),,,,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9643710,,,
132,10.1145/3397537.3397557,MATLAB Doesn't Love Me: An Essay,"Programming is everywhere, and is becoming an increasingly essential component of knowledge work outside the realms of traditional software development. Examples include data journalism, scientific computing, machine control, machine learning, financial management, and others. A key aspect of this trend is that users have to use programming tools, but typically lack programming education, let alone a computer science background. In this short paper we revisit potential assumptions and preconceptions underlying traditional programming system design, from the perspective of practicing scientists using tools like MATLAB, R, Bash, Python, C++, and others. Specifically, we aim to peel off some ingrained assumptions that have informed programming language and system design for decades. Without giving a lot of answers, we hope some of our contrarian observations may turn out to be controversial, and stimulate a meaningful discussion towards a better programmer experience in the domain of science.",excluded(it basically on matlab not for specfically end user peogramming,,,,,https://dl.acm.org/doi/pdf/10.1145/3397537.3397557,"It is end-user programming (MATLAB is, too). The contribution type is funny though, seems like armchair analysis / essay.",,
133,10.1145/3526113.3545639,Mimic: In-Situ Recording and Re-Use of Demonstrations to Support Robot Teleoperation,"Remote teleoperation is an important robot control method when they cannot operate fully autonomously. Yet, teleoperation presents challenges to effective and full robot utilization: controls are cumbersome, inefficient, and the teleoperator needs to actively attend to the robot and its environment. Inspired by end-user programming, we propose a new interaction paradigm to support robot teleoperation for combinations of repetitive and complex movements. We introduce Mimic, a system that allows teleoperators to demonstrate and save robot trajectories as templates, and re-use them to execute the same action in new situations. Templates can be re-used through (1) macros—parametrized templates assigned to and activated by buttons on the controller, and (2) programs—sequences of parametrized templates that operate autonomously. A user study in a simulated environment showed that after initial set up time, participants completed manipulation tasks faster and more easily compared to traditional direct control.",tool tech,yes,unspecified,no,robot programming,https://dl.acm.org/doi/pdf/10.1145/3526113.3545639,,,
134,THESIS,Multi-Modal End-User Programming of Web-Based Virtual Assistant Skills,"While Alexa can perform over 100,000 skills on paper, its capability covers only a fraction of what is possible on the web. To reach the full potential of an assistant, it is desirable that individuals can create skills to automate their personal web browsing routines. Many seemingly simple routines, however, such as monitoring COVID-19 stats for their hometown, detecting changes in their child's grades online, or sending personally-addressed messages to a group, cannot be automated without conventional programming concepts such as conditional and iterative evaluation. This paper presents VASH (Voice Assistant Scripting Helper), a new system that empowers users to create useful web-based virtual assistant skills without learning a formal programming language. With VASH, the user demonstrates their task of interest in the browser and issues a few voice commands, such as naming the skills and adding conditions on the action. VASH turns these multi-modal specifications into skills that can be invoked invoice on a virtual assistant. These skills are represented in a formal programming language we designed called WebTalk, which supports parameterization, function invocation, conditionals, and iterative execution. VASH is a fully working prototype that works on the Chrome browser on real-world websites. Our user study shows that users have many web routines they wish to automate, 81% of which can be expressed using VASH. We found that VASH Is easy to learn, and that a majority of the users in our study want to use our system",excluded (phd thesis),,,,,https://arxiv.org/pdf/2008.13510,"It is a paper, and seems relevant",,
135,10.1145/3379350.3415803,Multi-Modal Interactive Task Learning from Demonstrations and Natural Language Instructions,"Interactive task learning (ITL) allows end users to 'teach' an intelligent agent new tasks, the corresponding task conditions,and the relevant concepts. This paper presents my research on expanding the applicability, generalizability, robustness, expressiveness, and script sharability of ITL systems usinga multi-modal approach. My research demonstrates that a multi-modal ITL approach that combines programming by demonstration and natural language instructions can empower users without significant programming expertise to extend intelligent agents for their own app-based computing tasks.",Doctoral Symposium,,,,,https://dl.acm.org/doi/pdf/10.1145/3379350.3415803,,,
136,10.1109/RO-MAN46459.2019.8956248,Natural language interface for programming sensory-enabled scenarios for human-robot interaction,"Previous research has shown that robot-mediated therapy may be effective in improving different mental or physical conditions, but this effectiveness strongly depends on how well the therapy can be translated to robot training. The goal of this study is to assist the end-users such as occupational and rehabilitation therapists to create without help of technical professional therapy-specific and sensory-enabled scenarios for the robotic assistant for use in an unstructured environment. The Cognitive Dimension of Notations framework was applied to assess the usability of the programming interface and the Cyclomatic complexity method was used to evaluate the complexity of the created robot scenarios. Eleven therapists with a mean age of 39 years working in the care for persons with visual-and-intellectual disabilities participated. The results show good usability of the interface, as measured via the CDN framework and the cyclomatic complexity analysis showed an increased complexity of the created by the occupational and rehabilitation therapist's scenarios. The participants did not request for very specifically defined behaviors for the robot, and therefore descriptions in natural text can be successfully used for robot programming.",empirical studies,yes,unspecified,no,robot programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8956248,,,
137,10.1109/3ICT56508.2022.9990622,New perspectives for cyber security in software development: when End-User Development meets Artificial Intelligence,"Current research faces a ""war"" between Human-Computer Interaction and Artificial Intelligence. Despite the shared goal to support the user in his/her choices, researchers seem to be unable to find a common point between the two topics. While one tends to demonstrate that the user needs to have total control of the system he/she is using, the other aims to create mathematical models that automate as much as possible, to give the user the ""feeling"" that the system has a brain and can think on its own. In the current work, we want to demonstrate that there is more than one possible meeting point between those two research fields, without diminishing the two ideologies. To do so we propose both the adoption of End-User Development techniques (that is a branch of the Human-Computer Interaction) to collect data, and the adoption of Artificial Intelligence models, to support the user in performing the right choice. Additionally, we also propose and discuss a couple of scenarios, specifically the programming of internet of things devices in a smart home environment, and check that the related configurations do not expose the user to potential external cyber-attacks. We will not provide any specific solution (with data and/or simulations), rather we want to discuss the potential collaboration between EUD and AI.",literature review,no,na,no,cyber security,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9990622,,,
138,10.1109/HORA55278.2022.9800018,On cobot programming in industrial tasks: a test case,"Collaborative robots open the way to new applications where industrial robots currently cannot be used. They are perfect for craft, non-industrial environments or schools, and to people who don't know how to program robots, like artists, designers, or students. A simplified end-user programming of the cobots allows a more flexible deployment of these machines. Originally, they were developed to contain the effort, the complexity and the cost of the robotic solutions, allowing the adoption of robots specially by small and medium-sized enterprises. However, when a cobot has to be used in an industrial environment some issues arise. This article presents an industrial application that uses a collaborative robot. The focus is on the use of the latest methods for cobot programming and on how to deal with their limitations and advantages when exploiting them in an industrial application.",literature review,no,na,no,robot programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9800018,Seems like a case study than a litt. review,,
139,10.1145/3308557.3308710,PAC-PAC: Intelligent Storytelling for Point-and-Click Games on the Web,"Point and click games are a more interactive and engaging alternative to usual photo galleries and video players for promoting tourist locations on the web. The PAC-PAC project aims at supporting users without programming knowledge in creating such games starting from real photos and videos. In this paper, we discuss an intelligent support and the related user interface for supporting them in developing the game story. The user selects a set of photos and a deep-learning based generator returns a story draft for each scene. The user can regenerate the story controlling some net parameters or tailor the text to his or her own tastes.",tool tech,no,na,no,game programming,https://dl.acm.org/doi/pdf/10.1145/3308557.3308710,,,
140,10.1109/HRI53351.2022.9889648,Participatory Design and End-User Programming for Human-Robot Interaction,"The Participatory Design and End-User Program-ming for Human-Robot Interaction (HRI) workshop aims to advance research on how to design systems that can be used by end users to program robots. There tends to be a fracture in HRI between the technical designers of robot programs (often engineers or computer scientists) and the actual users of such robots. Developers have the capabilities to program robots but often lack insights possessed by domain experts, sometimes leading to technically interesting but impractical systems. With this workshop, we aim to bridge two different methods often used individually within the wider HRI community to involve end users in robot program design: Participatory Design (PD) and End-User Programming (EUP). Both methods empower end users to co-produce robots addressing real-world needs. However, there have been limited opportunities to unite researchers who specialize in these areas and engage in mutual learning. We will address this shortcoming with a full-day workshop, which will put the PD and EUP communities in touch, inviting speakers from both sides and welcoming a wide range of publications from describing new end-user programming methods to compiling insights learned from conducting participatory design studies.",Excluded (workshop proposal),,,,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9889648,,,
141,10.1145/3301275.3302326,PATI: A Projection-Based Augmented Table-Top Interface for Robot Programming,"As robots begin to provide daily assistance to individuals in human environments, their end-users, who do not necessarily have substantial technical training or backgrounds in robotics or programming, will ultimately need to program and re-task their robots to perform a variety of custom tasks. In this work, we present PATI---a Projection-based Augmented Table-top Interface for robot programming---through which users are able to use simple, common gestures (e.g., pinch gestures) and tools (e.g., shape tools) to specify table-top manipulation tasks (e.g., pick-and-place) for a robot manipulator. PATI allows users to interact with the environment directly when providing task specifications; for example, users can utilize gestures and tools to annotate the environment with task-relevant information, such as specifying target landmarks and selecting objects of interest. We conducted a user study to compare PATI with a state-of-the-art, standard industrial method for end-user robot programming. Our results show that participants needed significantly less training time before they felt confident in using our system than they did for the industrial method. Moreover, participants were able to program a robot manipulator to complete a pick-and-place task significantly faster with PATI. This work indicates a new direction for end-user robot programming.",tool tech,yes,unspecified,no,robot programming,https://dl.acm.org/doi/pdf/10.1145/3301275.3302326,,,
142,10.1145/3319008.3319028,Perceived Relevance of Automatic Code Inspection in End-User Development: A Study on VBA,"Microsoft VBA (Visual Basic for Applications) is a programming language widely used by end-user programmers, often alongside the popular spreadsheet software Excel. Together they form the popular Excel-VBA application ecosystem. Despite being popular, spreadsheets are known to be fault-prone, and to minimize risk of faults in the overall Excel-VBA ecosystem, it is important to support end-user programmers in improving the code quality of their VBA programs also, in addition to improving spreadsheet technology and practices. In traditional software development, automatic code inspection using static analysis tools has been found effective in improving code quality, but the practical relevance of this technique in an end-user development context remains unexplored. With the aim of popularizing it in the end-user community, in this paper we examine the relevance of automatic code inspection in terms of how inspection rules are perceived by VBA programmers. We conduct a qualitative study consisting of interviews with 14 VBA programmers, who share their perceptions about 20 inspection rules that most frequently detected code quality issues in an industrial dataset of 25 VBA applications, obtained from a financial services company. Results show that the 20 studied inspection rules can be grouped into three categories of user perceptions based on the type of issues they warn about: i) 11 rules that warn about serious problems which need fixing, ii) 7 rules that warn about bad practices which do not mandate fixing, and iii) 2 rules that warn about purposeful code elements rather than issues. Based on these perceptions, we conclude that automatic code inspection is considerably relevant in an end-user development context such as VBA. The perceptions also indicate which inspection rules deserve the most attention from interested researchers and tool developers. Lastly, our results also reveal 3 additional issue types that are not covered by the existing inspection rules, and are therefore impetus for creating new rules.",empirical studies,yes,unspecified,no,spreadsheet,https://dl.acm.org/doi/pdf/10.1145/3319008.3319028,,,
143,10.1145/3546155.3546642,PONI: A Personalized Onboarding Interface for Getting Inspiration and Learning About AR/VR Creation,"New creators of augmented reality (AR) and virtual reality (VR) applications often face a steep learning curve during the onboarding stage of creation and struggle in identifying suitable learning materials that are appropriate for their skillsets. To support the initial learning needs of new AR/VR creators from different backgrounds, we designed and implemented a novel personalized onboarding interface (PONI) that allows users to locate relevant projects based on their programming and 3D modeling skills, development goals, and any constraints, such as time or budget. Our usability evaluation (n=16) showed that most creators found PONI to be intuitive, useful, and saw its potential to be used as a knowledge hub for inspiration and self-directed exploratory learning. We discuss ways in which the personalization could be further enhanced and how the potential of PONI could be explored to improve onboarding in contexts beyond AR/VR development.",tool tech,yes,unspecified,no,AR/Virtual Reality,https://dl.acm.org/doi/pdf/10.1145/3546155.3546642,"not really EUP, but for onboarding and reusing applications? domain is more education, than EUP?",,
144,10.1109/BB48857.2019.8941201,Position: Manual Refactoring (by Novice Programmers) Considered Harmful,"In recent years, the issue of quality in introductory and end-user programming has become increasingly prominent. In particular, the poor quality of block-based programs has been shown to harm the educational effectiveness in this programming domain. As a result, there has been a growing interest in code quality and its improvement practices among researchers and educators. Refactoring-transforming code to remove quality problems while preserving semantics-is taught as a common and practical technique for improving code quality. To maximize pedagogical effectiveness, some educators advocate teaching students to refactor by hand to elucidate the mechanics behind refactoring instead of relying on tools that transform code automatically. In this position paper, we argue that this pedagogical approach is counterproductive. We advocate teaching refactoring similarly to compilation, a technique that students start applying automatically right away, but learn its inner workings only much later in the curriculum. Even professional developers are advised to avoid carrying out complex refactoring transformations by hand, as this activity leads to hard-to-trace bugs as well as wastes time and effort. To put appropriate tools for improving software quality into the hands of Scratch programmers, we created an automated refactoring infrastructure for Scratch, and we argue that such facility should become a mainstay of programming environments for blocks.",tool tech,no,na,no,programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8941201,,,
145,10.1109/VL/HCC50065.2020.9127267,Poster: APIs for IPAs? Towards End-User Tailoring of Intelligent Personal Assistants,"Integrated into smartphones or smart speakers, Intelligent Personal Assistants (IPAs) have grown into the most prevalent example of speech-based interfaces today. Enabling hands-free completion of tasks such as checking the weather, playing music, or controlling smart devices, IPAs have become a central feature of millions of homes. Yet, end-users are faced with barriers to understanding their ‘black box’ devices, and a lack of opportunity to engage in end-user development (EUD) activities. Our current work considers the state of existing tools and platforms for development of IPAs, the key challenges to be overcome, and the potential benefits of doing so.",literature review,no,na,no,voice assistant,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9127267,,,
146,10.1145/3392869,Privacy-Preserving Script Sharing in GUI-Based Programming-by-Demonstration Systems,"An important concern in end user development (EUD) is accidentally embedding personal information in program artifacts when sharing them. This issue is particularly important in GUI-based programming-by-demonstration (PBD) systems due to the lack of direct developer control of script contents. Prior studies reported that these privacy concerns were the main barrier to script sharing in EUD. We present a new approach that can identify and obfuscate the potential personal information in GUI-based PBD scripts based on the uniqueness of information entries with respect to the corresponding app GUI context. Compared with the prior approaches, ours supports broader types of personal information beyond explicitly pre-specified ones, requires minimal user effort, addresses the threat of re-identification attacks, and can work with third-party apps from any task domain. Our approach also recovers obfuscated fields locally on the script consumer's side to preserve the shared scripts' transparency, readability, robustness, and generalizability. Our evaluation shows that our approach (1) accurately identifies the potential personal information in scripts across different apps in diverse task domains; (2) allows end-user developers to feel comfortable sharing their own scripts; and (3) enables script consumers to understand the operation of shared scripts despite the obfuscated fields.",tool tech,yes,unspecified,no,GUI programming,https://dl.acm.org/doi/pdf/10.1145/3392869,,,
147,NOT PAPER,"Proceedings of the LREC 2020 Workshop on Citizen Linguistics in Language Resource Development, CLLRD@LREC 2020, Marseille, France, May 2020",NOT PAPER,,,,,,,,,
148,10.1145/3411764.3445770,Programmable Smart Home Toolkits Should Better Address Households’ Social Needs,"End-user-programmable smart-home toolkits have engendered excitement in recent years. However, modern homes already cater quite well to users’ needs, and genuinely new needs for smart-home automation seldom arise. Acknowledging this challenging starting point, we conducted a six-week in-the-wild study of smart-home toolkits with four carefully recruited technology-savvy families. Interleaved with free toolkit use in the home were several creativity workshops to facilitate ideation and programming. We evaluated use experiences at the end of the six weeks. Even with extensive facilitation, families faced difficulties in identifying needs for smart-home automation, except for social needs that emerged in all the families. We present analysis of those needs and discuss how end-user-programmable toolkits could better engage with both those household members who design new automated functions and those who merely ‘use’ them.",empirical studies,yes,unspecified,no,home automation,https://dl.acm.org/doi/pdf/10.1145/3411764.3445770,contribution is both a litt. review and an empirical study. What do we do?,,
149,10.1109/MODELS-C53483.2021.00020,Proposing a Framework for Impact Analysis for Low-Code Development Platforms,"Low-code development platforms accelerate software development by facilitating end-user programming. Through higher-level abstractions citizen developers are enabled to develop increasingly complex software systems. While this improves productivity and efficiency it also introduces new challenges in the development process. The evolution of the low-code development platform and the applications built on top of it is one of those challenges. Understanding the impact of changes on the software system is crucial for both the maintenance as well as the improvement of running software. Citizen developers can be supported by direct feedback that reflects how their changes impact the system. Professional developers can use the impact analysis to correctly migrate existing data. Finally, the operations engineers that are responsible for the availability of the platform and the applications can plan seamless upgrades of new versions. Impact analysis should be at the foundations of the development of low-code development platforms. This paper proposes the Impact Analysis for Low-Code Development Platforms framework, a conceptual framework that supports the discussion, research, and implementation of impact analysis. The proposed framework describes the different subsystems and artifacts in a low-code development platform, the different types of professionals involved, and how these professionals can use impact analysis to support their engineering decisions. Through a descriptive case study we discuss the role of impact analysis in an industry low-code development platform. Through the feedback acquired by impact analysis, professionals can stay in control of the evolution of both the applications as well as the low-code development platform itself.",tool tech,yes,unspecified,no,EUP,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9643766,,,
150,10.1145/3332165.3347899,PUMICE: A Multi-Modal Agent That Learns Concepts and Conditionals from Natural Language and Demonstrations,"Natural language programming is a promising approach to enable end users to instruct new tasks for intelligent agents. However, our formative study found that end users would often use unclear, ambiguous or vague concepts when naturally instructing tasks in natural language, especially when specifying conditionals. Existing systems have limited support for letting the user teach agents new concepts or explaining unclear concepts. In this paper, we describe a new multi-modal domain-independent approach that combines natural language programming and programming-by-demonstration to allow users to first naturally describe tasks and associated conditions at a high level, and then collaborate with the agent to recursively resolve any ambiguities or vagueness through conversations and demonstrations. Users can also define new procedures and concepts by demonstrating and referring to contents within GUIs of existing mobile apps. We demonstrate this approach in PUMICE, an end-user programmable agent that implements this approach. A lab study with 10 users showed its usability.",tool tech,yes,unspecified,no,nlp,https://dl.acm.org/doi/pdf/10.1145/3332165.3347899,"Domain would be EUP, not nlp. It is a way of doing general purpose EUP, using NL as a language of input. ",,
151,10.1145/3331152,PWA-EU: Extending PWA Approach for Promoting Customization Based on User Preferences,"Progressive Web App (PWA) is a new approach to the development of mobile applications (apps) which was proposed by Google in 2015. It combines technology resources of both web and native apps. Meta-design is an End-User Development (EUD) approach from which end-users participate actively in a system's design process. Yet, PWAs are a recent technology and the impacts of associating EUD and PWAs has been little exploited. As the traditional PWA approach is limited regarding users acting as co-designers, we propose the PWA-EU approach, an extension of the traditional PWA architecture that includes EUD concepts. PWA-EU provides contributions in two lenses. First, the proposal was designed to be used by developers on the design/development time. Second, the app developed using PWA-EU approach will allow end-users to select design preferences, which makes them participants of the app's design. This active participation of end-users on the design is possible due to the meta-design concepts present on the PWA-EU approach. In this article, we present the PWA-EU approach and its evaluation in the perspective of developers/designers. For the evaluation, we grouped participants according to their professional background. The results also indicate that novice developers had a reasonable performance with only one hour of training.We conclude that even novice developers could achieve better performance in a real-life environment, in which they would have more time.",tool tech,yes,unspecified,no,mobile development,https://dl.acm.org/doi/pdf/10.1145/3331152,,,
152,10.1145/3359619.3359743,Python Programmers Have GPUs Too: Automatic Python Loop Parallelization with Staged Dependence Analysis,"Python is a popular language for end-user software development in many application domains. End-users want to harness parallel compute resources effectively, by exploiting commodity manycore technology including GPUs. However, existing approaches to parallelism in Python are esoteric, and generally seem too complex for the typical end-user developer. We argue that implicit, or automatic, parallelization is the best way to deliver the benefits of manycore to end-users, since it avoids domain-specific languages, specialist libraries, complex annotations or restrictive language subsets. Auto-parallelization fits the Python philosophy, provides effective performance, and is convenient for non-expert developers. Despite being a dynamic language, we show that Python is a suitable target for auto-parallelization. In an empirical study of 3000+ open-source Python notebooks, we demonstrate that typical loop behaviour ‘in the wild’ is amenable to auto-parallelization. We show that staging the dependence analysis is an effective way to maximize performance. We apply classical dependence analysis techniques, then leverage the Python runtime’s rich introspection capabilities to resolve additional loop bounds and variable types in a just-in-time manner. The parallel loop nest code is then converted to CUDA kernels for GPU execution. We achieve orders of magnitude speedup over baseline interpreted execution and some speedup (up to 50x, although not consistently) over CPU JIT-compiled execution, across 12 loop-intensive standard benchmarks.",empirical studies,yes,unspecified,no,PYTHON programming,https://dl.acm.org/doi/pdf/10.1145/3359619.3359743,Where is the human study here?,,
153,10.1145/3344211,RecRules: Recommending IF-THEN Rules for End-User Development,"Nowadays, end users can personalize their smart devices and web applications by defining or reusing IF-THEN rules through dedicated End-User Development (EUD) tools. Despite apparent simplicity, such tools present their own set of issues. The emerging and increasing complexity of the Internet of Things, for example, is barely taken into account, and the number of possible combinations between triggers and actions of different smart devices and web applications is continuously growing. Such a large design space makes end-user personalization a complex task for non-programmers, and motivates the need of assisting users in easily discovering and managing rules and functionality, e.g., through recommendation techniques. In this article, we tackle the emerging problem of recommending IF-THEN rules to end users by presenting RecRules, a hybrid and semantic recommendation system. Through a mixed content and collaborative approach, the goal of RecRules is to recommend by functionality: it suggests rules based on their final purposes, thus overcoming details like manufacturers and brands. The algorithm uses a semantic reasoning process to enrich rules with semantic information, with the aim of uncovering hidden connections between rules in terms of shared functionality. Then, it builds a collaborative semantic graph, and it exploits different types of path-based features to train a learning to rank algorithm and compute top-N recommendations. We evaluate RecRules through different experiments on real user data extracted from IFTTT, one of the most popular EUD tools. Results are promising: they show the effectiveness of our approach with respect to other state-of-the-art algorithms and open the way for a new class of recommender systems for EUD that take into account the actual functionality needed by end users.",tool tech,no,na,no,iot,https://dl.acm.org/doi/pdf/10.1145/3344211,,,
154,10.1145/3576036,Refactoring in Computational Notebooks,"Due to the exploratory nature of computational notebook development, a notebook can be extensively evolved even though it is small, potentially incurring substantial technical debt. Indeed, in interview studies notebook authors have attested to performing on-going tidying and big cleanups. However, many notebook authors are not trained as software developers, and environments like JupyterLab possess few features to aid notebook maintenance. As software refactoring is traditionally a critical tool for reducing technical debt, we sought to better understand the unique and growing ecology of computational notebooks by investigating the refactoring of public Jupyter notebooks. We randomly selected 15,000 Jupyter notebooks hosted on GitHub and studied 200 with meaningful commit histories. We found that notebook authors do refactor, favoring a few basic classic refactorings as well as those involving the notebook cell construct. Those with a computing background refactored differently than others, but not more so. Exploration-focused notebooks had a unique refactoring profile compared to more exposition-focused notebooks. Authors more often refactored their code as they went along, rather than deferring maintenance to big cleanups. These findings point to refactoring being intrinsic to notebook development.",empirical studies,yes,unspecified,no,notebook,https://dl.acm.org/doi/pdf/10.1145/3576036,there is no user study?,,
155,10.1145/3555774,Why Users Hack: Conflicting Interests and the Political Economy of Software,"It is often assumed that the interests of users and developers coincide, sharing a common goal of good design. Yet users often desire functionality that goes beyond what designers, and the organisations they work in, are willing to supply. Analysing online forums, complemented with interviews, we document how users, hackers and software developers worked together to discover and apply system exploits in hardware and software. We cover four cases: users of CPAP breathing assistance machines getting access to their own sleep data, 'hacking' the Nintendo switch game console to run non-authorised software, end-users building their own insulin supply system, and farmers repairing their own agriculture equipment against suppliers terms and conditions. We propose the concept of the 'gulf of interests' to understand how differing interests can create conflicts between end-users, designers, and the organisations they work in. This points us in the direction of researching further the political and economic situations of technology development and use.",literature review,no,na,no,gaming,https://dl.acm.org/doi/pdf/10.1145/3555774,why is this gaming?,,
156,10.1145/3371382.3378387,Robotic Limb Repositioning with Supervised Autonomy,"This paper presents the initial efforts towards developing a robotic limb repositioning system. We aim to combine programming by demonstration and end-user programming in a tele-manipulation system that includes the user in the loop. We propose an approach based on a general-purpose mobile manipulator and a web-based interface where a user can select, edit, preview and execute different repositioning exercises based on the selected limb. This approach shows the potential to empower people who have mobility impairments to be more involved in an activity of daily living.",tool tech,no,na,no,robot ,https://dl.acm.org/doi/pdf/10.1145/3371382.3378387,,,
157,10.1109/ICSC.2020.00020,Roger that! Learning How Laypersons Teach New Functions to Intelligent Systems,"Intelligent systems are rather smart today but still limited to built-in functionality. To break through this barrier, future systems must allow users to easily adapt the system by themselves. For humans the most natural way to communicate is talking. But what if users want to extend the systems' functionality with nothing but natural language? Then intelligent systems must understand how laypersons teach new skills. To grasp the semantics of such teaching sequences, we have defined a hierarchical classification task. On the first level, we consider the existence of a teaching intent in an utterance; on the second, we classify the distinct semantic parts of teaching sequences: declaration of a new function, specification of intermediate steps, and superfluous information. We evaluate twelve machine learning techniques with multiple configurations tailored to this task ranging from classical approaches such as naïve-bayes to modern techniques such as bidirectional LSTMs and task-oriented adaptations. On the first level convolutional neural networks achieve the best accuracy (96.6%). For the second task, bidirectional LSTMs are the most accurate (98.8%). With the additional adaptations we are able to improve both classifications distinctly (up to 1.8%).",empirical studies,no,na,no,machine learning,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9031481,"they did do a human study, that's where their data came from.",,
158,10.5220/0010442000350044,Role of Citizens in the Development of Smart Cities: Benefit of Citizen's Feedback for Improving Quality of Service,"The initiatives around the involvement of citizens in smart city development is increasing significantly with the aim of enhancing the quality of life for the citizens of these cities through better public services. There is plethora of studies discussing various technologies and platforms to obtain citizen’s feedback for smart city development. Nonetheless, there are very limited studies which provide guidance on how to utilise those feedbacks and improve quality of the services in order to provide better experience to the citizens. This paper examines past work regarding different aspects of citizen’s involvement in smart cities and classify the existing literature through the lens of a smart city framework. This study offers an overview of diverse concepts and platforms associated with the role of citizens in smart city design and development by featuring possible linkages to the related layers of the adopted framework. This study further proposes a conceptual model to incorporate citizen’s feedback in more structured way at architecture level in order to meet their requirements and to provide improved quality of services",excluded(not relevant),,,,,https://www.researchgate.net/publication/351329938_Role_of_Citizens_in_the_Development_of_Smart_Cities_Benefit_of_Citizen's_Feedback_for_Improving_Quality_of_Service,,,
159,10.1145/3488392.3488407,Rufus - Uma Plataforma de Autoria Para Jogos Digitais Terapêuticos,"Therapeutic games aim to support rehabilitation treatments and help patients understand, motivate and persist in therapeutic practices. This paper describes Rufus, a platform for authoring digital games configured by healthcare professionals to conduct therapeutic activities with their patients and their caregivers. The platform has a web interface for game authoring, currently composed of three different game mechanics, as well as the possibility of viewing interaction reports. A mobile app composes the infrastructure and displays the games created for patients. Participatory Design Techniques were used during the design and development of the solution to engage different stakeholders.",excluded(not in english),,,,,https://dl.acm.org/doi/pdf/10.1145/3488392.3488407,,,
160,10.1109/I4Tech48345.2020.9102703,Sagitec Software Studio (S3) - A Low Code Application Development Platform,"Building an application using full-stack development model was the strategy of the past. A low code platform allows organization to build enterprise level software with minimal coding (mainly drag and drop) and focusing more on business functionality. Sagitec's low code platform is a domain neutral entity which provides a rich graphical interface with various building blocks like form design, data integration, business rule creator, Business Process Modelling (BPM), File Processing, Report, Correspondence generator and analytics. One can build very large enterprise level application using this platform, all these capabilities are attached to core as an engine. Similarly, Big Data features can also be added as another engine.Platform allows even citizen developer to build application in rapid speed which in turns reduce the cost of building application and improves Return on Investment (ROI). In addition, Sagitec also provides low code platform for comprehensive quality assurance activity, requirement tracking, analytics for fraud detection and many more.",tool tech,no,na,no,APPLICATION DEVELOPMENT,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9102703,domain is general programming?,,
161,10.1145/3334480.3386148,"SIGCHI Lifetime Research Award Talk: Icons, Metaphor, and End-User Programming","Throughout my career I have tried to make computers easier to use-and therefore more useful- for ordinary people. Along the way, I've invented a few things that have proven to be helpful. At the operating system level, I tried to make the interface to applications more intuitive by introducing the concepts of icons and metaphor. Within applications, I tried to make the interface simpler by reducing the number of commands, making them more general (universal), and making their options and parameters visible with dialog boxes. I also tried to make it possible for ordinary people to program computers, since as long as people can only use predefined applications, they will be able to access only a fraction of the power of computers.These efforts have all appeared in commercial products, from the Xerox Star office computer to Stagecast Creator's educational software. These innovations have affected the personal computer industry in significant ways.",excluded(not reserach paper),,,,,,,,
162,10.1007/978-3-030-85623-6_36,Simplifying Robot Programming Using Augmented Reality and End-User Development,"Robots are widespread across diverse application contexts. Teaching robots to perform tasks, in their respective contexts, demands a high domain and programming expertise. However, robot programming faces high entry barriers due to the complexity of robot programming itself. Even for experts robot programming is a cumbersome and error-prone task where faulty robot programs can be created, causing damage when being executed on a real robot. To simplify the process of robot programming, we combine Augmented Reality (AR) with principles of end-user development. By combining them, the real environment is extended with useful virtual artifacts that can enable experts as well as non-professionals to perform complex robot programming tasks. Therefore, Simple Programming Environment in Augmented Reality with Enhanced Debugging (SPEARED) was developed as a prototype for an AR-assisted robot programming environment. SPEARED makes use of AR to project a robot as well as a programming environment onto the target working space. To evaluate our approach, expert interviews with domain experts from the area of industrial automation, robotics, and AR were performed. The experts agreed that SPEARED has the potential to enrich and ease current robot programming processes.",tool tech,yes,unspecified,no,robot ,https://arxiv.org/pdf/2106.07944.pdf,,,
163,10.1145/3472749.3474773,Situated Live Programming for Human-Robot Collaboration,"We present situated live programming for human-robot collaboration, an approach that enables users with limited programming experience to program collaborative applications for human-robot interaction. Allowing end users, such as shop floor workers, to program collaborative robots themselves would make it easy to “retask” robots from one process to another, facilitating their adoption by small and medium enterprises. Our approach builds on the paradigm of trigger-action programming (TAP) by allowing end users to create rich interactions through simple trigger-action pairings. It enables end users to iteratively create, edit, and refine a reactive robot program while executing partial programs. This live programming approach enables the user to utilize the task space and objects by incrementally specifying situated trigger-action pairs, substantially lowering the barrier to entry for programming or reprogramming robots for collaboration. We instantiate situated live programming in an authoring system where users can create trigger-action programs by annotating an augmented video feed from the robot’s perspective and assign robot actions to trigger conditions. We evaluated this system in a study where participants (n = 10) developed robot programs for solving collaborative light-manufacturing tasks. Results showed that users with little programming experience were able to program HRC tasks in an interactive fashion and our situated live programming approach further supported individualized strategies and workflows. We conclude by discussing opportunities and limitations of the proposed approach, our system implementation, and our study and discuss a roadmap for expanding this approach to a broader range of tasks and applications.",tool tech,yes,unspecified,no,robot ,https://dl.acm.org/doi/pdf/10.1145/3472749.3474773,,,
164,10.1145/3550356.3561560,Situational Development of Low-Code Applications in Manufacturing Companies,"Companies show an increasing interest in low-code development platforms to facilitate application development by domain experts without sophisticated software development knowledge. Thus, companies aim for a more efficient development of more effective applications since domain experts as so-called citizen developers are no longer limited by the availability and domain knowledge of trained software developers. Nevertheless, efficiency and effectiveness of application development is traditionally also largely influenced by the use of a suitable software development method. Domain experts are, however, not trained in software development methods. This introduces a risk of domain experts creating unusable applications or exceeding the designated time frame of a project (or both). In this paper, we therefore propose an initial version of a situational software development method which supports domain experts in manufacturing companies during the low-code development of applications. The method can be tailored based on situational factors, considering application requirements, features of the used low-code development platform, and characteristics of the development team. We also present feedback corroborating the usefulness of our method and future extension points based on expert interviews.",tool tech,yes,unspecified,no,appilcation development platfom,https://dl.acm.org/doi/pdf/10.1145/3472749.3474773,,,
165,10.1109/TSE.2022.3228308,Sketch2Process: End-to-end BPMN Sketch Recognition Based on Neural Networks,"Process models play an important role in various software engineering contexts. Among others, they are used to capture business-related requirements and provide the basis for the development of process-oriented applications in low-code/no-code settings. To support modelers in creating, checking, and maintaining process models, dedicated tools are available. While these tools are generally considered as indispensable to capture process models for their later use, the initial version of a process model is often sketched on a whiteboard or a piece of paper. This has been found to have great advantages, especially with respect to communication and collaboration. It, however, also creates the need to subsequently transform the model sketch into a digital counterpart that can be further processed by modeling and analysis tools. Therefore, to automate this task, various so-called sketch recognition approaches have been defined in the past. Yet, these existing approaches are too limited for use in practice, since they, for instance, require sketches to be created on a digital device or do not address the recognition of edges or textual labels. Against this background, we use this paper to introduce Sketch2Process, the first end-to-end sketch recognition approach for process models captured using BPMN. Sketch2Process uses a neural network-based architecture to recognize the shapes, edges, and textual labels of highly expressive process models, covering 25 types of BPMN elements. To train and evaluate our approach, we created a dataset consisting of 704 hand-drawn and manually annotated BPMN models. Our experiments demonstrate that our approach is highly accurate and consistently outperforms the state of the art.",tool tech,yes,yes,yes,BUSINESS AUTOMATION,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9980425,,,
166,10.1145/3423423.3423470,Smart Automations for Everybody: When IoT Meets Visual Programming,"The Internet of Things introduced pervasive deployment in the environment of a variety of network connected smart objects. In this context, people's daily lives could benefit by using smart objects which can offer them an environment of automations on their everyday activities. However, in practice, the demands for such automations are so highly personalized and fluid resulting in a respective digital market that is either inexistent or marginal. Our vision in this PhD thesis is to provide end-users with the necessary tools enabling them to easily and quickly craft, test and change the automations they desire. The latter implies end-users to directly manipulate smart objects in a developer perspective, ranging from parameterizing and linking together, to actually programming the control and coordination of a set of smart objects. In this paper, we firstly discuss the background of such tools. Then, we analyze the research questions that have to be addressed. Finally, the proposed approach and the roadmap of the work are discussed.",Excluded(phd thesis),,,,,,,,
167,10.1145/3397537.3397541,Wildcard: Spreadsheet-Driven Customization of Web Applications,"Many Web applications do not meet the precise needs of their users. Browser extensions offer a way to customize web applications, but most people do not have the programming skills to implement their own extensions. In this paper, we present spreadsheet-driven customization, a technique that enables end users to customize software without doing any traditional programming. The idea is to augment an application’s UI with a spreadsheet that is synchronized with the application’s data. When the user manipulates the spreadsheet, the underlying data is modified and the changes are propagated to the UI, and vice versa. We have implemented this technique in a prototype browser extension called Wildcard. Through concrete examples, we demonstrate that Wildcard can support useful customizations—ranging from sorting lists of search results to showing related data from web APIs—on top of existing websites. We also present the design principles underlying our prototype. Customization can lead to dramatically better experiences with software. We think that spreadsheet-driven customization offers a promising new approach to unlocking this benefit for all users, not just programmers.",tool tech,no,na,no,spreadsheet,https://dl.acm.org/doi/pdf/10.1145/3397537.3397541,,,
168,10.5220/0010108101120119,Smart City Development: Positioning Citizens in the Service Life Cycle (Citizens as Primary Customer),"The initiatives around the involvement of citizens in smart city development is increasing significantly with the aim of enhancing the quality of life for the citizens of these cities through better public services. There is plethora of studies discussing various technologies and platforms to obtain citizen’s feedback for smart city development. Nonetheless, there are very limited studies which provide guidance on how to utilise those feedbacks and improve quality of the services in order to provide better experience to the citizens. This paper examines past work regarding different aspects of citizen’s involvement in smart cities and classify the existing literature through the lens of a smart city framework. This study offers an overview of diverse concepts and platforms associated with the role of citizens in smart city design and development by featuring possible linkages to the related layers of the adopted framework. This study further proposes a conceptual model to incorporate citizen’s feedback in more structured way at architecture level in order to meet their requirements and to provide improved quality of services to them",excluded (not relevant),,,,,https://www.researchgate.net/publication/346826702_Smart_City_Development_Positioning_Citizens_in_the_Service_Life_Cycle_Citizens_as_Primary_Customer,,,
169,10.1145/3531073.3534467,SMARTER: An IoT Learning Game to Teach Math,"In this paper, we present the preliminary implementation of SMARTER, a tangible tool for supporting children in learning the basics of mathematics, which has been loosely inspired by the Cuisenaire rods. The tool exploits the power of tangible manipulation offered by physical materials coupled with the possibility of providing contextual and engaging feedback provided by digital tools. An original and important goal of the SMARTER tool is to allow teachers to fully customize the experience of use by exploiting end-user development.",tool tech,no,na,no,iot,https://dl.acm.org/doi/pdf/10.1145/3531073.3534467,,,
170,10.1109/RO-MAN46459.2019.8956336,Spatially Situated End-User Robot Programming in Augmented Reality,"Nowadays, industrial robots are being programmed using proprietary tools developed by robot manufacturer. A skilled robot programmer is needed to create even as simple task as pick a well-known object and put it somewhere else. Contrary, in every-day life people are using end-user programming to make different electronic devices work in expected manner, without even noticing they are actually programming. We propose augmented reality-enabled end-user programming system allowing regular shop-floor workers to program industrial robotic tasks. The user interface prototype for this system was evaluated in the user study with 7 participants with respect to usability, mental workload and user experience.",TOOL TECH,yes,unspecified,no,robot programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8956336,,,
171,10.1145/3411764.3445634,"Spreadsheet Comprehension: Guesswork, Giving Up and Going Back to the Author","Spreadsheet users routinely read, and misread, others' spreadsheets, but literature offers only a high-level understanding of users’ comprehension behaviors. This limits our ability to support millions of users in spreadsheet comprehension activities. Therefore, we conducted a think-aloud study of 15 spreadsheet users who read others’ spreadsheets as part of their work. With qualitative coding of participants’ comprehension needs, strategies and difficulties at 20-second granularity, our study provides the most detailed understanding of spreadsheet comprehension to date.Participants comprehending spreadsheets spent around 40% of their time seeking additional information needed to understand the spreadsheet. These information seeking episodes were tedious: around 50% of participants reported feeling overwhelmed. Moreover, participants often failed to obtain the necessary information and worked instead with guesses about the spreadsheet. Eventually, 12 out of 15 participants decided to go back to the spreadsheet's author for clarifications. Our findings have design implications for reading as well as writing spreadsheets.",empirical studies,yes,unspecified,no,spreadsheet,https://dl.acm.org/doi/pdf/10.1145/3411764.3445634,,,
172,10.1145/3334480.3382807,Spreadsheet Use and Programming Experience: An Exploratory Survey,"We report results from a survey on spreadsheet use and experience with textual programming languages (n=49). We find significant correlations between self-reported formula experience, programming experience, and overall spreadsheet experience. We discuss the implications of our findings for spreadsheet research and end-user programming research, more generally.",empirical studies,yes,unspecified,no,spreadsheet,https://dl.acm.org/doi/pdf/10.1145/3334480.3382807,,,
173,10.1145/3397537.3397545,Spreadsheets as Notational Environment for Paper Weaving,"This work explores how spreadsheets can serve as the foundation for the creation of a hybrid design medium for paper weaving. The case for using spreadsheets as a model for the development of environments for designing paper weaving patterns is made. Firstly, because both spreadsheets as well as the woven form of paper weaving designs have cells as their elementary substrate. Secondly, because it allows for exploration of the design space. And thirdly, as it enables use by end-users with varying levels of experience. An environment, VisiWeave, implementing the points mentioned is presented and explored.",Excluded(not relevant),,,,,https://dl.acm.org/doi/pdf/10.1145/3397537.3397545,,,
174,10.1007/978-3-030-32475-9_9,Study of Crime Status in Colombia and Development of a Citizen Security App,"The indices of citizen insecurity have been increasing in Colombia in recent years after the signing of the peace agreement. Many of the demobilized guerrilla members have gone to the streets of the country to seek a new direction or occupation and unfortunately have fallen into crime, increasing delinquency levels of crimes such as robbery, extortion, rape, micro-trafficking and personal injury. Added to this, the increase of the migrant population from the neighboring country Venezuela, in conditions of displacement have forced that part of this population with limited employment opportunities to take refuge in crime as it has become their only form of survival. Given this problem, it has become interesting to analyze through this investigation, the behavior of these crimes in the last years and to propose a technological solution that allows detecting the geological sectors and crime type that contribute the most to the social problem. In this way, offer alternatives for the protection of citizens using a mobile application that allows them to face the situation by making them part of the solution.",Excluded(not relevant),,,,,https://www.researchgate.net/publication/336849026_Study_of_Crime_Status_in_Colombia_and_Development_of_a_Citizen_Security_App,,,
175,10.1145/3491102.3501931,Stylette: Styling the Web with Natural Language,"End-users can potentially style and customize websites by editing them through in-browser developer tools. Unfortunately, end-users lack the knowledge needed to translate high-level styling goals into low-level code edits. We present Stylette, a browser extension that enables users to change the style of websites by expressing goals in natural language. By interpreting the user’s goal with a large language model and extracting suggestions from our dataset of 1.7 million web components, Stylette generates a palette of CSS properties and values that the user can apply to reach their goal. A comparative study (N=40) showed that Stylette lowered the learning curve, helping participants perform styling changes 35% faster than those using developer tools. By presenting various alternatives for a single goal, the tool helped participants familiarize themselves with CSS through experimentation. Beyond CSS, our work can be expanded to help novices quickly grasp complex software or programming languages.",tool tech,yes,unspecified,no,web,https://dl.acm.org/doi/pdf/10.1145/3491102.3501931,,,
176,10.1109/ISTAS50296.2020.9462175,Sustainability means inclusivity: engaging citizens in early stage smart city development,"The challenge of how cities can be designed and developed in an inclusive and sustainable direction is monumental. Smart city technologies currently offer the most promising solution for long-term sustainability. However, smart city projects have been criticised for ignoring diverse needs of the local population and increasing social divides A sustainable urban environment depends as much on creating an inclusive space that is safe, accessible and comfortable for a diverse group of citizens as it does on deploying “smart” technologies for energy efficiency or environmental protection. This is because citizens will be more likely to adopt technologies promoting sustainability if they are well-aligned with their lived needs and experiences. In this paper, we present the rationale behind an ongoing interdisciplinary research project that aims to address exactly the problem outlined above by using a participatory design approach. Focusing on a smart city test site in Sweden where sensors are currently being deployed to collect data on noise, particles, vehicle numbers and types (amongst other), the goal is to bring local residents and government representatives into dialogue with technical developers by adopting a “meet-in- the-middle” approach. This paper comprises a brief presentation of early findings and a reflection on this approach.",Excluded(not relevant),,,,,https://www.researchgate.net/publication/345762272_Sustainability_means_inclusivity_Engaging_citizens_in_early_stage_smart_city_development,,,
177,NOT ACESS,Sustainable Rural Development through Union Digital Center: The Citizen Empowerment Perspective,NOT ACCESS,,,,,,,,,
178,10.1109/TIFS.2022.3214084,TAPInspector: Safety and Liveness Verification of Concurrent Trigger-Action IoT Systems,"Trigger-action programming (TAP) is a popular end-user programming framework that can simplify the Internet of Things (IoT) automation with simple trigger-action rules. However, it also introduces new security and safety threats. A lot of advanced techniques have been proposed to address this problem. Rigorously reasoning about the security of a TAP-based IoT system requires a well-defined model and verification method both against rule semantics and physical-world features, e.g., concurrency, rule latency, extended action, tardy attributes, and connection-based rule interactions, which has been missing until now. By analyzing these features, we find 9 new types of rule interaction vulnerabilities and validate them on two commercial IoT platforms. We then present TAPInspector, a novel system to detect these interaction vulnerabilities in concurrent TAP-based IoT systems. It automatically extracts TAP rules from IoT apps, translates them into a hybrid model by model slicing and state compression, and performs semantic analysis and model checking with various safety and liveness properties. Our experiments corroborate that TAPInspector is practical: it identifies 533 violations related to rule interaction from 1108 real-world market IoT apps and is at least 60000 times faster than the baseline without optimization.",tool tech,no,na,no,iot,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9916292,,,
179,10.1145/3377325.3377499,TAPrec: Supporting the Composition of Trigger-Action Rules through Dynamic Recommendations,"Nowadays, users can personalize the joint behavior of their connected entities, i.e., smart devices and online service, by means of trigger-action rules. As the number of supported technologies grows, however, so does the design space, i.e., the combinations between different triggers and actions: without proper support, users often experience difficulties in discovering rules and their related functionality. In this paper, we introduce TAPrec, an End-User Development platform that supports the composition of trigger-action rules with dynamic recommendations. By exploiting a hybrid and semantic recommendation algorithm, TAPrec suggests, at composition time, either a) new rules to be used or b) actions for auto-completing a rule. Recommendations, in particular, are computed to follow the user's high-level intention, i.e., by focusing on the rules' final purpose rather than on low-level details like manufacturers and brands. We compared TAPrec with a widely used trigger-action programming platform in a study on 14 end users. Results show evidence that TAPrec is appreciated and can effectively simplify the personalization of connected entities: recommendations promoted creativity by helping users personalize new functionality that are not easily noticeable in existing platforms.",empirical studies,yes,unspecified,no,trigger action programming,https://dl.acm.org/doi/pdf/10.1145/3377325.3377499,,,
180,10.1145/3359146,Technological Frames and User Innovation: Exploring Technological Change in Community Moderation Teams,Management of technological change in organizations is one of the most enduring topics in the literature on computer-supported cooperative work. The successful navigation of technological change is both more challenging and more critical in online communities that are entirely mediated by technology than it is in traditional organizations. This paper presents an analysis of 14 in-depth interviews with moderators of subcommunities of one technological platform (Reddit) that added communities on a new technological platform (Discord). Moderation teams experienced several problems related to moderating content at scale as well as a disconnect between the affordances of Discord and their assumptions based on their experiences on Reddit. We found that moderation teams used Discord's API to create scripts and bots that augmented Discord to make the platform work more like tools on Reddit. These tools were particularly important in communities struggling with scale. Our findings suggest that increasingly widespread end user programming allow users of social computing systems to innovate and deploy solutions to unanticipated design problems by transforming new technological platforms to align with their past expectations.,empirical studies,yes,yes,yes,automation,https://dl.acm.org/doi/pdf/10.1145/3359146,,,
181,10.1145/3554364.3561610,Telling Your Own Story: Design and Evaluation of a Storytelling Mechanic in a Platform for Serious Games Authoring,"End-User Development (EUD) researchers have been investigating methods and techniques so that, instead of computer experts, end users build applications themselves. However, these users have difficulties, for example, in understanding requirements, in making design decisions, in making use and reuse of components, and in carrying out integration and testing activities --- barriers to be overcome in the area. This paper presents the design, development and evaluation process of a storytelling-type game mechanic created to compose a platform for authoring digital games in which professionals can create their own games and use them with their populations of interest. The design was created together with professionals from different areas, in different stages, in order to consider a holistic view. The evaluation was carried out through usability tests that pointed out improvements to enable a more intuitive and easy-to-use interface. The storytelling game is an extra resource for health and education professionals, for example, to use as pedagogical or therapy tools.",excluded(not in english),,,,,https://dl.acm.org/doi/pdf/10.1145/3554364.3561610,,,
182,10.1109/VLHCC.2019.8818687,The Ceptre Editor: A Structure Editor for Rule-Based System Simulation,"Systems understanding is a skill required to solve many of the world’s most important problems, from climate change to immunotherapy to social decision-making. However, these problems also require communication among experts with diverse skill sets and academic backgrounds. Our long-term goal is to facilitate systems understanding across a range of disciplines through end-user computational modeling tools. This paper presents the Ceptre Editor, a structure editor for the rule-based programming language Ceptre. The Ceptre Editor runs in the browser and offers a visual interface and integrated development environment for Ceptre, following design recommendations from end-user programming, with the goal of providing discoverable affordances for program construction and maintaining syntactic well-formedness at each edit state. We performed a preliminary evaluation of the tool through a qualitative study, assessing the editors effectiveness at helping users understand and extended a system model, and found promising results regarding learnability and mental model accuracy.",tool tech,yes,yes,no,rule based programming platform,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8818687,,,
183,10.1109/VL/HCC50065.2020.9127201,The Design Space of Computational Notebooks: An Analysis of 60 Systems in Academia and Industry,"Computational notebooks such as Jupyter are now used by millions of data scientists, machine learning engineers, and computational researchers to do exploratory and end-user programming. In recent years, dozens of different notebook systems have been developed across academia and industry. However, we still lack an understanding of how their individual designs relate to one another and what their tradeoffs are. To provide a holistic view of this rapidly-emerging landscape, we performed, to our knowledge, the first comprehensive design analysis of dozens of notebook systems. We analyzed 60 notebooks (16 academic papers, 29 industry products, and 15 experimental/R&D projects) and formulated a design space that succinctly captures variations in system features. Our design space covers 10 dimensions that include diverse ways of importing data, editing code and prose, running code, and publishing notebook outputs. We conclude by suggesting ways for researchers to push future projects beyond the current bounds of this space.",empirical studies,no,no,no,notebook,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9127201,,,
184,THESIS,The development of Russian youth digital citizenship: how to analyze and tackle the Internet communication risks,"The paper is focused on the communication safety of children and young people in the social media space as a condition of Youth digital citizenship development. The authors presents the results of an intellectual search for the analysis of the most common risks of Internet communication faced by Russian children, or teachers and counselors working with children. The research design includes discourse-analysis of the social media posts reflecting the most relevant Internet risks, automated social media analysis with the special tool – software for new media monitoring (IQBuzz) and eye-tracking for destructive online content neurovisual reaction measuring (kind of neurovisual modeling of the Internet-content perception). The article covers the algorithm of tackling the Internet risks: 1) defining of the Internet risks markers; 2) identifying of the Internet risks triggers; 3) developing of recommendations for teachers and counselors to minimize Internet risks for children and young people. The prospect of the research could be the social graph analysis oriented to the identification of the destructive online group connections’ density, destructive opinion leaders’ techniques and features of the asocial users” activities. The final product is the measures to maximize the opportunities that open up in the digital environment for Youth: social project activities, civic activism, and digital democracy.",excluded  thesis,,,,,https://www.semanticscholar.org/paper/The-development-of-Russian-youth-digital-how-to-and-Brodovskaya-Dombrovskaya/3a8848095a5edf8b1011b757b7950201620e700d,,,
185,THESIS,The Impacts of Low/No-Code Development on Digital Transformation and Software Development,"Low/No-code development is a software development method that provides users with a platform for visually creating applications with little or no coding. Companies and organizations need software applications and information systems for various business purposes like management in the technology era. Low/No-code development gives non-IT professionals a convenient tool for rapidly building simple business applications they need without or with little coding. In this paper, we explored the benefits & limitations of Low/No-Code development and modern Low/No-Code development platforms in the industry. In addition, we analyzed how it can be improved and prospected the impacts of Low/No-Code development on society and related industries in the future. In conclusion, we find that Low/No-code development is a promising trend that can significantly impact future software development and digital transformation.",excluded thesis,,,,,https://arxiv.org/pdf/2112.14073,,,
186,10.1007/978-3-030-77015-0_3,The Inclusion of Citizens in Smart Cities Policymaking: The Potential Role of Development Studies' Participatory Methodologies,"
Smart Cities emerged in the 90s. Since then the concept has passed from several phases from a purely techno-centric vision to see technology as a means and not an end in itself. Alongside this evolution, the role of citizens has been changing. Nowadays, citizens are seen as taking part in the co-design and co-creation of Smart Cities. However, standard participatory development methodologies are still lacking to guide policymakers.

This paper will critically evaluate the role of citizens in smart cities’ governance. Smart City governance can be seen as a specific type of policymaking. Accordingly, knowledge from other disciplines that explore policymaking can be useful in highlighting flaws and future opportunities for smart cities governance. The present work explores this when it comes to the role of citizens in policymaking. It makes use of the knowledge from development geography, and reviews how citizens participation has been understood in smart cities governance. It does so by combining a review of the literature as well as interviews with Portuguese smart cities policymakers. This paper brings these insights together. The results show that while smart city policymakers recognize the importance of including citizens in policymaking, the practical application of this is still very limited. This can be enhanced by using knowledge from development geographies approach to similar problems as well as via the development of tools and guidelines. Future research should explore both of these aspects.",Excluded(not relevant),,,,,https://link.springer.com/book/10.1007/978-3-030-77015-0,,,
187,,Therapists as designers: an initial investigation of end-user programming of a tangible tool for therapeutic interventions,"This paper presents a pilot study on end-user programming by therapists of a tangible tool for
children on the autism spectrum. The core design ideas were to use detailed natural language
descriptions of states and events, and an incremental process to facilitate the programming task.
Our study provides initial evidence of the feasibility of this approach.",tool tech,yes,unspecified,no,medical,https://ceur-ws.org/Vol-3053/paper_8.pdf,,,
188,10.23919/MIPRO52101.2021.9597111,Three-Layer IoT Node Model for Simpler Custom IoT Deployments,"This paper presents a node model designed for simpler deployment of custom Internet of Things systems. Proposed node model consists of three layers: sensor, logic, and cloud layer. Sensor layer abstract communication with attached sensors and actuators. Similarly, cloud layer abstract communication with servers, usually in cloud. Sensor and cloud layers use configuration files with definitions of its interfaces. Logic layer execute end-user made program that represent node's behavior. Simple syntax is proposed for program so it can be created or adapted by some end-users, not just professional programmers but also automation enthusiasts. Program uses abstractions defined in sensor's and cloud's layers to perform required operations. Proposed node model is compared to other solutions in the IoT field. Advantages of proposed model include simpler design of custom IoT node and system, flexibility in network design, not relaying on Internet connection, while its downsides include complexity of middleware, capabilities when compared to implementation in a programming language, simplicity of creation when compared to solutions with graphical user interface.",tool tech,no,na,no,iot,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9597111,,,
189,10.1109/RO-MAN53752.2022.9900856,Timing-Specified Controllers with Feedback for Human-Robot Handovers,"We develop and evaluate two human-robot handover controllers that allow end-users to specify timing parameters for the robot reach motion, and that provide feedback if the robot cannot satisfy those constraints. End-user tuning with feedback is a useful controller feature in settings where robots have to be re-programmed for varying task requirements but end-users do not have programming knowledge. The two controllers we propose are both receding-horizon controllers that differ in their objective function, and their user specified parameters, and subsequently their user-interface: One controller uses a minimum cumulative jerk (MCJ) objective function, and the other a minimum cumulative error (MCE) objective function. We implemented the controllers on a collaborative robot and conducted two controlled experiments to compare the user experience and performance of these controllers vis-à-vis a baseline proportional velocity (PV) controller. In each experiment, participants (n = 30) interactively tuned the controller parameters, and collaborated with a robot to perform a time-constrained repetitive task. We found that the timing controller with the MCE implementation can provide a better user experience, both while setting the parameters (p =0.011) and performing the handovers with the robot (p < 0.001), and fewer failures (p =0.016) compared to the PV controller, however the MCJ implementation did not provide better user experience compared to the PV controller. The MCJ controller also resulted in more failures than the PV controller. These results could inform the design of usable and effective end-user configurable controllers for human-robot interaction.",tool tech,yes,unspecified,no,robot programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9900856,,,
190,10.1145/3491102.3501888,Tisane: Authoring Statistical Models via Formal Reasoning from Conceptual and Data Relationships,"Proper statistical modeling incorporates domain theory about how concepts relate and details of how data were measured. However, data analysts currently lack tool support for recording and reasoning about domain assumptions, data collection, and modeling choices in an integrated manner, leading to mistakes that can compromise scientific validity. For instance, generalized linear mixed-effects models (GLMMs) help answer complex research questions, but omitting random effects impairs the generalizability of results. To address this need, we present Tisane, a mixed-initiative system for authoring generalized linear models with and without mixed-effects. Tisane introduces a study design specification language for expressing and asking questions about relationships between variables. Tisane contributes an interactive compilation process that represents relationships in a graph, infers candidate statistical models, and asks follow-up questions to disambiguate user queries to construct a valid model. In case studies with three researchers, we find that Tisane helps them focus on their goals and assumptions while avoiding past mistakes.",tool tech,yes,unspecified,no,data management,https://dl.acm.org/doi/pdf/10.1145/3491102.3501888,,,
191,10.1145/3417990.3420196,Towards a low-code solution for monitoring machine learning model performance,"As the use of machine learning techniques by organisations has become more common, the need for software tools that provide the robustness required in a production environment has become apparent. In this paper, we review relevant literature and outline a research agenda for the development of a low-code solution for monitoring the performance of a deployed machine learning model on a continuous basis.",literature review,no,na,no,machine learning,https://dl.acm.org/doi/pdf/10.1145/3417990.3420196,,,
192,10.1109/ACCESS.2021.3051605,Towards a Modular and Distributed End-User Development Framework for Human-Robot Interaction,"In an effort towards the democratization of Robotics, this article presents a novel End-User Development framework called Robot Interfaces From Zero Experience (RIZE). The framework provides a set of useful software tools for the creation of robot-oriented software architectures and programming interfaces, as well as the modeling and execution of robot behaviors, with a specific emphasis on social behaviors. Programming interfaces built on top of RIZE enable professionals with different backgrounds and interests to design, adapt, and scale-up robotics applications. As an example of a programming interface, we present Open RIZE, which exploits an End-User Programming paradigm combining blocks, tables, and forms-filling interfaces. Unlike previous approaches, robot behavioral code generated by Open RIZE is intrinsically modular, re-usable, scalable, neutral to the employed programming language, and platform-agnostic. In the article, we present the main design guidelines and features of Open RIZE. Additionally, we perform an initial usability evaluation of the Open RIZE interface in an online workshop. Preliminary results using the System Usability Scale with 10 novice end-users indicate that Open RIZE is easy-to-use and learn.",tool tech,yes,unspecified,no,robot programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9323043,,,
193,10.1145/3464432.3464437,Towards End-User Web Scraping for Customization,"Websites are malleable: users can run code in the browser to customize them. However, this malleability is typically only accessible to programmers with knowledge of HTML and Javascript. Previously, we developed a tool called Wildcard which empowers end-users to customize websites through a spreadsheet-like table interface without doing traditional programming. However, there is a limit to end-user agency with Wildcard, because programmers need to first create site-specific adapters mapping website data to the table interface. This means that end-users can only customize a website if a programmer has written an adapter for it, and cannot extend or repair existing adapters. In this paper, we extend Wildcard with a new system for end-user web scraping for customization. It enables end-users to create, extend and repair adapters, by performing concrete demonstrations of how the website user interface maps to a data table. We describe three design principles that guided our system’s development and are applicable to other end-user web scraping and customization systems: (a) users should be able to scrape data and use it in a single, unified environment, (b) users should be able to extend and repair the programs that scrape data via demonstration and (c) users should receive live feedback during their demonstrations. We have successfully used our system to create, extend and repair adapters by demonstration on a variety of websites and we provide example usage scenarios that showcase each of our design principles. Our ultimate goal is to empower end-users to customize websites in the course of their daily use in an intuitive and flexible way, and thus making the web more malleable for all of its users.",tool tech,no,na,no,web,https://dl.acm.org/doi/pdf/10.1145/3464432.3464437,,,
194,10.3390/s22072543,Towards the Development of a Sensor Educational Toolkit to Support Community and Citizen Science,"As air quality sensors increasingly become commercially available, a deeper consideration of their usability and usefulness is needed to ensure effective application by the public. Much of the research related to sensors has focused on data quality and potential applications. While this information is important, a greater understanding of users’ experience with sensors would provide complementary information. Under a U.S. EPA-funded Science to Achieve Results grant awarded to the South Coast Air Quality Management District in California, titled “Engage, Educate, and Empower California Communities on the Use and Applications of Low-Cost Air Monitoring Sensors”, approximately 400 air quality sensors were deployed with 14 California communities. These communities received sensors and training, and they participated in workshops. Widely varying levels of sensor installation and engagement were observed across the 14 communities. However, despite differences between communities (in terms of participation, demographics, and socioeconomic factors), many participants offered similar feedback on the barriers to sensor use and strategies leading to successful sensor use. Here, we assess sensor use and participant feedback, as well as discuss the development of an educational toolkit titled “Community in Action: A Comprehensive Toolkit on Air Quality Sensors”. This toolkit can be leveraged by future community and citizen science projects to develop networks designed to collect air quality information that can help reduce exposure to and the emissions of pollutants, leading to improved environmental and public health.",excluded(not relevant),,,,,https://www.mdpi.com/1424-8220/22/7/2543,,,
195,10.1109/ICICT52872.2021.00046,Towards Wide-Spectrum Spreadsheet Computing,"with the recent additions of dynamic arrays and user-defined functions, Microsoft Research has taken two important steps towards the unification of spreadsheets and general purpose programming environments. We offer our perspective on that quest, reiterating that the full potential of the spreadsheet computing paradigm can only be realized after removing the entanglement of the computational model and its visualization. Our experimental findings suggest this can be done without detracting from the live and user-friendly nature of the spreadsheet programming experience.",tool tech,no ,na,no,spreadsheet,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9476942,,,
196,10.1145/3411838,Trace2TAP: Synthesizing Trigger-Action Programs from Traces of Behavior,"Two common approaches for automating IoT smart spaces are having users write rules using trigger-action programming (TAP) or training machine learning models based on observed actions. In this paper, we unite these approaches. We introduce and evaluate Trace2TAP, a novel method for automatically synthesizing TAP rules from traces (time-stamped logs of sensor readings and manual actuations of devices). We present a novel algorithm that uses symbolic reasoning and SAT-solving to synthesize TAP rules from traces. Compared to prior approaches, our algorithm synthesizes generalizable rules more comprehensively and fully handles nuances like out-of-order events. Trace2TAP also iteratively proposes modified TAP rules when users manually revert automations. We implemented our approach on Samsung SmartThings. Through formative deployments in ten offices, we developed a clustering/ranking system and visualization interface to intelligibly present the synthesized rules to users. We evaluated Trace2TAP through a field study in seven additional offices. Participants frequently selected rules ranked highly by our clustering/ranking system. Participants varied in their automation priorities, and they sometimes chose rules that would seem less desirable by traditional metrics like precision and recall. Trace2TAP supports these differing priorities by comprehensively synthesizing TAP rules and bringing humans into the loop during automation.",tool tech,yes,yes,no,IoT,https://dl.acm.org/doi/pdf/10.1145/3411838,,,
197,10.1145/3290605.3300675,Trigger-Action Programming for Personalising Humanoid Robot Behaviour,"In the coming years humanoid robots will be increasingly used in a variety of contexts, thereby presenting many opportunities to exploit their capabilities in terms of what they can sense and do. One main challenge is to design technologies that enable those who are not programming experts to personalize robot behaviour. We propose an end user development solution based on trigger-action personalization rules. We describe how it supports editing such rules and its underlying software architecture, and report on a user test that involved end user developers. The test results show that users were able to perform the robot personalization tasks with limited effort, and found the trigger-action environment usable and suitable for the proposed tasks. Overall, we show the potential for using trigger-action programming to make robot behaviour personalization possible even to people who are not professional software developers.",tool tech,yes,unspecified,no,robot programming,https://dl.acm.org/doi/pdf/10.1145/3290605.3300675,,,
198,10.1145/3411764.3445265,TweakIt: Supporting End-User Programmers Who Transmogrify Code,"End-user programmers opportunistically copy-and-paste code snippets from colleagues or the web to accomplish their tasks. Unfortunately, these snippets often don’t work verbatim, so these people—who are non-specialists in the programming language—make guesses and tweak the code to understand and apply it successfully. To support their desired workflow and facilitate tweaking and understanding, we built a prototype tool, TweakIt, that provides users with a familiar live interaction to help them understand, introspect, and reify how different code snippets would transform their data. Through a usability study with 14 data analysts, participants found the tool to be useful to understand the function of otherwise unfamiliar code, to increase their confidence about what the code does, to identify relevant parts of code specific to their task, and to proactively explore and evaluate code. Overall, our participants were enthusiastic about incorporating TweakIt in their own day-to-day work.",tool tech, yes,unspecified,no,text editor,https://dl.acm.org/doi/pdf/10.1145/3411764.3445265,,,
199,10.1109/ACCESS.2021.3122086,Understanding Discussions of Citizen Science Around Sustainable Development Goals in Twitter,"Citizen science (CS) involves volunteers who participate in scientific research by collecting data or by addressing the needs of the project they are involved in. In the last years, there has been an increasing interest in how CS can contribute to the achievement of the UN Sustainable Development Goals (SDGs), that aim to reach a sustainable future. Research about data quality has taught us that through using an appropriate methodology, CS can foster scientific knowledge and promote specific actions to achieve accomplish goals. However, there is not much information about the SDGs that CS is more interested in. This paper presents a long-term study on how CS discuss about SDGs in Twitter, aiming to classify the discussion around the SDGs. The paper reports on a variety of topics such as open science, innovation and biodiversity, among others, but the results show that the most addressed topic in CS discussions in Twitter is about climate change, with corresponds to the SDG 13. Based on these findings, it is possible to affirm that climate change is a hot topic in CS in Twitter. However, there are also other SDGs that although underrepresented, are also discussed in CS.",excluded(not relevant),,,,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9583258,,,
200,10.1145/3359287,Understanding Family Collaboration Around Lightweight Modification of Everyday Objects in the Home,"The internet-of-things (IoT) carries substantial costs by urging households to replace their possessions with new, internet connected versions of everyday objects. Beyond financial, these costs include waste, work to arrange and orchestrate objects to suit households, and that of acquiring new skills. Upcycling domestic objects could offer households greater discretion and control over these costs by supporting the ability to tailor IoT to the home. To understand how households might do this, we conducted a home study with 10 diverse American households over 7 days to surface the approaches families are likely to use when tailoring IoT to their existing possessions. We asked family members to enact their process using endowed sticker props---IoT Stickers---to modify objects in their home. We develop a framework of how families make light weight modifications of domestic possessions, summarize trends of their object modifications, and describe the burdens such a system could impose.",empirical studies,yes,yes,yes,IoT,https://dl.acm.org/doi/pdf/10.1145/3359287,,,
201,10.1007/978-3-031-21388-5_27,Understanding Low-Code or No-Code Adoption in Software Startups: Preliminary Results from a Comparative Case Study,"Low-code or no-code application development is a new jargon in the software development community. In response, large and medium-sized companies, are seen triggered to join the bandwagon. Existing research on why small and innovative companies, like software startups, apply this paradigm is limited. The current literature shows that software startups are different from established software companies in terms of their focus on innovation, market-driven context, limited resources, and uncertainty. Therefore, in this paper, we study and report our initial understanding of why software startups apply low-code or no-code. We studied two cases, in the first phase, to address the research question. Our preliminary results show that software startups apply this paradigm in an ad-hoc manner and use it for experimentation, prototyping, and idea validation. On the flip side, large companies enjoy a stable workflow of low-code or no-code development. The motivations include achieving rapid product development, fast feedback, and empowering business users. These results provide a good starting point for discussion and demand for further research. Including additional data, particularly, more cases, therefore, is our essential next step to get a deeper understanding and report final results.",,,,,,,,,
202,10.1145/3411764.3445567,Understanding Trigger-Action Programs Through Novel Visualizations of Program Differences,"Trigger-action programming (if-this-then-that rules) empowers non-technical users to automate services and smart devices. As a user’s set of trigger-action programs evolves, the user must reason about behavior differences between similar programs, such as between an original program and several modification candidates, to select programs that meet their goals. To facilitate this process, we co-designed user interfaces and underlying algorithms to highlight differences between trigger-action programs. Our novel approaches leverage formal methods to efficiently identify and visualize differences in program outcomes or abstract properties. We also implemented a traditional interface that shows only syntax differences in the rules themselves. In a between-subjects online experiment with 107 participants, the novel interfaces better enabled participants to select trigger-action programs matching intended goals in complex, yet realistic, situations that proved very difficult when using traditional interfaces showing syntax differences.",tool tech,yes,yes,yes,trigger action programming,https://dl.acm.org/doi/pdf/10.1145/3411764.3445567,,,
203,10.1109/VLHCC.2019.8818834,Unmixing Remixes: The How and Why of Not Starting Projects from Scratch,"One of the greatest achievements of Scratch as an educational tool is the eager willingness of programmers to use existing projects as the starting point for their own projects, a practice known as remixing. Despite the importance of remixing as a foundation of collaborative and communal learning, the practice remains poorly understood, with the Scratch programming community remaining in the dark about which programming practices encourage and facilitate remixing. Scratch designers lack feedback on how the remixing facility is used in the wild. To gain a deeper insight into remixing, this paper investigates heretofore unexplored dimensions of remixing: (1) the prevailing modifications that remixes perform on existing projects, (2) the impact of the original project's code quality on the granularity, extent, and development time of the modifications in the remixes, and (3) the propensity of the dominant programming practices in the original project to remain so in the remixes. Our findings can encourage remixing and improve its effectiveness, benefiting the educational and end-user programming communities.",empirical studies,no,na,no,programming,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8818834,,,
204,10.1145/3371382.3378300,User Needs and Design Opportunities in End-User Robot Programming,We report on a user study that sought to understand how users program robot tasks by direct demonstration and what problems they encounter when using a state-of-the-art robot programming interface to create and edit robot programs. We discuss how our findings translate to design opportunities in end-user robot programming.,empirical studies,yes,unspecified, no ,robot programming,https://dl.acm.org/doi/pdf/10.1145/3371382.3378300,,,Aayush finished from the bottom till here.
205,10.1145/3419249.3420136,User-Driven Design Guidelines for the Authoring of Cross-Device and Internet of Things Applications,"Recently we see an increasing number of solutions for the authoring of cross-device and Internet of Things (IoT) applications. While most of these authoring tools have been realised based on existing metaphors and evaluated in subsequent user studies, there is no consensus on how to best enable end users to manage and interact with their devices, IoT objects and services. In order to establish some common guidelines for the development of cross-device and IoT authoring tools, we conducted an elicitation study exploring a user’s mental model when defining cross-device interactions in IoT environments. Existing authoring solutions have further been checked for compliance with our guidelines and we developed a fully-compliant end-user authoring tool for cross-device and IoT applications. The presented guidelines may inform the design of new as well as the improvement of existing solutions and form a foundation for discussion, future studies and refinements within the HCI community.",empirical studies,yes,unspecified,no,iot,https://dl.acm.org/doi/pdf/10.1145/3419249.3420136,,,
206,10.1109/ACCESS.2020.3002591,Uvis: A Formula-Based End-User Tool for Data Visualization,"Existing approaches to data visualization are one of these two: accessible to end-user developers but limited in customizability, or inaccessible and expressive. For instance, commercial charting tools are easy to use, but support only predefined visualizations, while programmatic visualization tools support custom visualizations, but require advanced programming skills. We show that it is possible to combine the learnability of charting tools and the expressiveness of visualization tools. Uvis is an interactive visualization and user interface design tool that targets end-user developers with skills comparable to spreadsheet formulas. With Uvis, designers drag and drop visual objects, set visual properties to formulas, and see the result immediately. The formulas are declarative and similar to spreadsheet formulas. The formulas compute the property values and can refer to data from database, visual objects, and end-user input. To substantiate our claim, we compared Uvis with popular visualization tools. Further, we conducted usability studies that test the ability of designers to customize visualizations with our approach. Our results show that end-user developers can learn the basics of Uvis relatively fast.",tool tech,yes,unspecified,no,data visulaizatiion,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9117123,,,
207,10.1145/3397877,UX-Painter: An Approach to Explore Interaction Fixes in the Browser,"Usability and user interaction improvement is a central task in web development to guarantee the success of a web application. However, designers are barely able to keep up with the current development cycle because their practices are too costly, while interaction issues accumulate in applications that end-users keep suffering. In this work, we propose a method for designers to rapidly explore solutions through visual programming to the interaction problems of an application under development, even when it has been already deployed. The method is realized by a tool called UX-Painter, an exploratory tool for designers to apply quick fixes to interaction issues at the client-side of a web application without the need of any script programming knowledge. The palette of available fixes in UX-Painter are client-side web refactorings, i.e., changes to web page elements that solve specific user interaction problems without changing the underlying functionality. UX-Painter allows designers to quickly set up new versions of a web application by combining refactorings to create alternative designs for user testing or an inspection review. UX-Painter also provides the means to communicate design improvements, as a sequence of refactorings with clear semantics. We show the feedback provided by interviews with designers about UX-Painter's functionality and the results of a user test about its usability.",tool tech,yes,unspecified,no,web programming,https://dl.acm.org/doi/pdf/10.1145/3397877,,,
208,10.1145/3301275.3302267,Vajra: Step-by-Step Programming with Natural Language,"Building natural language programming systems that are geared towards end-users requires the abstraction of formalisms inherently introduced by programming languages, capturing the intent of natural language inputs and mapping it to existing programming language constructs.We present a novel end-user programming paradigm for Python, which maps natural language commands into Python code. The proposed semantic parsing model aims to reduce the barriers for producing well-formed code (syntactic gap) and for exploring third-party APIs (lexico-semantic gap). The proposed method was implemented in a supporting system and evaluated in a usability study involving programmers as well as non-programmers. The results show that both groups are able to produce code with or without prior programming experience.",tool tech,yes,unspecified,no,python programming,https://dl.acm.org/doi/pdf/10.1145/3301275.3302267,,,
209,10.1109/ICET48972.2019.8994397,Version Detection in Spreadsheets Based on Headers Similarity,"In almost every company, institution, business, or even for personal use people employ spreadsheets to perform a variety of tasks. Spreadsheet programming is the most commonly used end-user programming language. Spreadsheets users create new spreadsheets based on existing ones and reuse data layout and computational logic, so there are multiple versions of spreadsheets. End-users have no background of professional programming skills. That is why they are not well aware of the importance of version control and keeping the record of previous documents. So, the version information is usually missing, and it creates a lot of mess when some error is found in one spreadsheet that needs to be resolved in all of its other versions, and it becomes almost impossible when users deal with a very large number of spreadsheets. In this paper, we propose an automatic approach to cluster spreadsheets and find different versions of spreadsheets based on the similarity of headers present in spreadsheets. The header detection is not done in a conventional way that is present in literature, but we use font attributes in order to detect headers. We applied our approach on 40 spreadsheets randomly selected from spreadsheet corpora like Enron, FUSE, and EUSES. The evaluation results showed that the proposed approach could detect versions of spreadsheets with higher precision and recall rates of 82.24% and 78.48% respectively. The F1-Measure achieved is 80.08%.",empirical studies,no,na,no,spreadsheet,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8994397,,,
210,10.1145/3464385.3464699,Virtual Assistants for Personalizing IoT Ecosystems: Challenges and Opportunities,"End-user development (EUD) is widely used today for the personalization of the most diffused commercial virtual assistants (VAs), both for the configuration of VA-controlled smart environments and the definition of automatic behaviours. However, EUD is not yet exploited to its potential. In this paper, we present the results of a long-time use of VAs in our homes: we compare the most known VAs and discuss a set of challenges that we identified and that can guide the future directions of Human-Computer Interaction research in this field.",empirical studies,no,na,no,virtual assistant,https://dl.acm.org/doi/pdf/10.1145/3464385.3464699,,,
211,10.1016/j.cola.2020.100970,"Visual Programming Environments for End-User Development of intelligent and social robots, a systematic review","Robots are becoming interactive and robust enough to be adopted outside laboratories and in industrial scenarios as well as interacting with humans in social activities. However, the design of engaging robot-based applications requires the availability of usable, flexible and accessible development frameworks, which can be adopted and mastered by researchers and practitioners in social sciences and adult end users as a whole. This paper surveys Visual Programming Environments aimed at enabling a paradigm fostering the so-called End-User Development of applications involving robots with social capabilities. The focus of this article is on those Visual Programming Environments that are designed to support social research goals as well as to cater for professional needs of people not trained in more traditional text-based computer programming languages. This survey excludes interfaces aimed at supporting expert programmers, at allowing industrial robots to perform typical industrial tasks (such as pick and place operations), and at teaching children how to code. After having performed a systematic search, sixteen programming environments have been included in this survey. Our goal is two-fold: first, to present these software tools with their technical features and Authoring Artificial Intelligence modeling approaches, and second, to present open challenges in the development of Visual Programming Environments for end users and social researchers, which can be informative and valuable to the community. The results show that the most recent such tools are adopting distributed and Component-Based Software Engineering approaches and web technologies. However, few of them have been designed to enable the independence of end users from high-tech scribes. Moreover, findings indicate the need for (i) more objective and comparative evaluations, as well as usability and user experience studies with real end users; and (ii) validations of these tools for designing applications aimed at working “in-the-wild” rather than only in laboratories and structured settings.",empirical studies,yes,unspecified,no,robot programming,https://reader.elsevier.com/reader/sd/pii/S2590118420300307?token=2B86A330C66377F3E027764A8021D08D8E02C06219E2E9891FD1D71D034132696DA33FE8554CAA7F1AB20265BD394DA4&originRegion=eu-west-1&originCreation=20230224115349,,"This is a lit review, not empirical study?",
212,10.1109/VL/HCC51201.2021.9576372,VREUD - An End-User Development Tool to Simplify the Creation of Interactive VR Scenes,"Recent advances in Virtual Reality (VR) technology and the increased availability of VR-equipped devices enable a wide range of consumer-oriented applications. For novice developers, however, creating interactive scenes for VR applications is a complex and cumbersome task that requires high technical knowledge which is often missing. This hinders the potential of enabling novices to create, modify, and execute their own interactive VR scenes. Although recent authoring tools for interactive VR scenes are promising, most of them focus on expert professionals as the target group and neglect the novices with low programming knowledge. To lower the entry barrier, we provide an open-source web-based End-User Development (EUD) tool, called VREUD, that supports the rapid construction and execution of interactive VR scenes. Concerning construction, VREUD enables the specification of the VR scene including interactions and tasks. Furthermore, VREUD supports the execution and immersive experience of the created interactive VR scenes on VR head-mounted displays. Based on a user study, we have analyzed the effectiveness, efficiency, and user satisfaction of VREUD which shows promising results to empower novices in creating their interactive VR scenes.",tool tech,yes,unspecified,no,AR/virtual reality,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9576372,,Domain should just be VR?,
213,10.1109/ACCESS.2021.3104187,Web Augmentation as a Technique to Diminish User Interactions in Repetitive Tasks,"The use of the World Wide Web has experienced extraordinary growth in the last decades. The Web has become the main source of information for millions of users. The number of websites offering content to users is countless. In order to personalise information according to their needs, users often have to visit multiple, unconnected pages. Users perform a number of actions to collect that information that requires concentration. If the number of Web resources is large, the activity becomes unpleasant. The problem increases when these tasks are performed frequently and repetitively. These tasks are time-consuming and lead users to experience frustration and disorientation during the activity, causing a loss of concentration that prolongs the activity over time. Web Augmentation combines different Web technologies to improve user experience on existing pages by adding content from different pages among other benefits. This article proposes Web Augmentation as a technique to reduce user interactions in repetitive tasks. To support the proposal, the paper introduces Excore, a browser extension for Web Augmentation that allows end-users to add content from different resources automatically. The article presents the benefits introduced by this approach as a response to the drawbacks experienced by users while performing their activities on the Web. The architecture of the platform and its operations are described by means of an example. A double evaluation of the extension is addressed, one qualitative and one quantitative. The results show that Excore reduces the number of interactions by 94.45% and the time to complete a task by 80.75%.",tool tech,yes,unspecified,no,AR,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9511488,,Study performed in Spanish university -- is it not WEIRD?,
214,10.1145/3411764.3445682,What We Can Learn From Visual Artists About Software Development,"This paper explores software’s role in visual art production by examining how artists use and develop software. We conducted interviews with professional artists who were collaborating with software developers, learning software development, and building and maintaining software. We found artists were motivated to learn software development for intellectual growth and access to technical communities. Artists valued efficient workflows through skilled manual execution and personal software development, but avoided high-level forms of software automation. Artists identified conflicts between their priorities and those of professional developers and computational art communities, which influenced how they used computational aesthetics in their work. These findings contribute to efforts in systems engineering research to integrate end-user programming and creativity support across software and physical media, suggesting opportunities for artists as collaborators. Artists’ experiences writing software can guide technical implementations of domain-specific representations, and their experiences in interdisciplinary production can aid inclusive community building around computational tools.",empirical studies,yes,unspecified,no,Visual Art,https://dl.acm.org/doi/pdf/10.1145/3411764.3445682,,"Visual Art is not the tech side, shouldn't the domain be systems engineering? Also, same argument as below for contribution to WEIRD",
215,10.1145/3411763.3445005,When Artificial Intelligence Alone is Not Enough: End-User Creation and Control of Daily Automations,"The combination of the Internet of Things and Artificial Intelligence has made it possible to introduce numerous automations in our daily environments. Many new interesting possibilities and opportunities have been enabled, but there are also risks and problems. Often these problems are originated from approaches that have not been able to consider the users’ viewpoint sufficiently. We need to empower people in order to actually understand the automations in their surroundings environments, modify them, and create new ones, even if they have no programming knowledge. The course discusses these problems and some possible solutions to provide people with the possibility to control and create their daily automations.",excluded (course overview),,,,,https://dl.acm.org/doi/pdf/10.1145/3411763.3445005,,,
216,10.1145/3459990.3462463,When Children Program Intelligent Environments: Lessons Learned from a Serious AR Game,"While the body of research focusing on Intelligent Environments (IEs) programming by adults is steadily growing, informed insights about children as programmers of such environments are limited. Previous work already established that young children can learn programming basics. Yet, there is still a need to investigate whether this capability can be transferred in the context of IEs, since encouraging children to participate in the management of their intelligent surroundings can enhance responsibility, independence, and the spirit of cooperation. We performed a user study (N=15) with children aged 7-12, using a block-based, gamified AR spatial coding prototype allowing to manipulate smart artifacts in an Intelligent Living room. Our results validated that children understand and can indeed program IEs. Based on our findings, we contribute preliminary implications regarding the use of specific technologies and paradigms (e.g. AR, trigger-action programming) to inspire future systems that enable children to create enriching experiences in IEs.",empirical studies,yes,unspecified,no,AR,https://dl.acm.org/doi/pdf/10.1145/3459990.3462463,,"while the users are unspecified, they are likely to be Greek children - by not specifying this and generalising results doesnt the research contribute to WEIRD?",
217,10.1145/3350546.3352558,WoTDL: Web of Things Description Language for Automatic Composition,"Enabling end users to take a proactive role in the development of Web of Things (WoT) applications that achieves their goals is a challenge for End User Development (EUD) in the context of WoT. This can be achieved through Artificial Intelligence (AI) planning algorithms if the relevant WoT concepts and relationships are described in an interoperable way. Although similar, existing service description languages like WSDL or ontologies like OWL-S are not sufficient to represent all required characteristics of concrete WoT planning scenarios. To address these limitations, in this paper we present the Web of Things Description Language (WoTDL) ontology which is an extension of existing WoT models to describe the key concepts of AI planning for automatic WoT composition. To demonstrate the feasibility of our approach, we follow the best practices recommended by the semantic web community and describe the physical devices of our smart home testbed in an AI planning scenario using WoTDL.",tool tech,NO,NA,NO,WOT,https://dl.acm.org/doi/pdf/10.1145/3350546.3352558,,,